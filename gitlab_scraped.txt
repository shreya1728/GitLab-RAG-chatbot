GitLab Values
GitLab‚Äôs six core values are ü§ù Collaboration , üìà Results for Customers , ‚è±Ô∏è Efficiency , üåê Diversity, Inclusion & Belonging , üë£ Iteration , and üëÅÔ∏è Transparency ,
and together they spell the CREDIT we give each other by assuming
good intent. We react to them with values emoji and they are made actionable below.
ü§ù Collaboration
üìà Results for Customers
‚è±Ô∏è Efficiency
üåê Diversity, Inclusion & Belonging
üë£ Iteration
üëÅÔ∏è Transparency
with values emoji
We take inspiration from other companies, and we always go for the boring solutions . Our co-founder, Sid Sijbrandij, has shared the origin of each of the CREDIT values, but
just like the rest of our work, we continually adjust our values and strive to make them better.
GitLab values are a living document.
In many instances, they have been documented, refined, and revised based on lessons learned (and scars earned) in the course of doing business.
boring solutions
shared the origin
We used to have more values, but it was difficult to remember them all. In response, we condensed them, created an acronym (CREDIT), and listed operating principles to guide behavior.
Everyone is welcome to suggest improvements. Please assign MRs to update these values to our Chief People Officer and if you work at GitLab, also @mention them in the #values Slack channel .
Chief People Officer
#values Slack channel
Driving Results with CREDIT from GitLab on Vimeo .
Driving Results with CREDIT
GitLab
Vimeo
To achieve results, team members must work together effectively. At GitLab, helping others is a priority, even when it is not immediately related to the goals that you are trying to achieve.
Similarly, you can rely on others for help and advice‚Äîin fact, you‚Äôre expected to do so.
Anyone can chime in on any subject, including people who don‚Äôt work at GitLab.
The person who‚Äôs responsible for the work decides how to do it,
but they should always take each suggestion seriously and try to respond and explain why it may or may not have been implemented.
We value caring for others.
Demonstrating we care for people provides an effective framework for challenging directly and delivering feedback.
Kindness doesn‚Äôt mean holding back on feedback or avoiding disagreements, these are crucial to professional growth and getting results for customers.
Kindness means you make a separation between the work and the person, you can criticize someone‚Äôs work but still be respectful to the person.
Give as much positive feedback as you can, and do it in a public way.
There are aspects of GitLab culture, such as intentional transparency, that are unintuitive to outsiders and new team members.
Be willing to invest in people and engage in open dialogue.
For example, consider making private issues public wherever possible so that we can all learn from the experience. Don‚Äôt be afraid of judgement or scrutiny when sharing publicly, we all understand it‚Äôs impossible to know everything .
it‚Äôs impossible to know everything
Everyone can remind anyone in the company about our values.
If there is a disagreement about the interpretations, the discussion can be escalated to more people within the company without repercussions.
Share problems you run into, ask for help, be forthcoming with information and speak up .
Give negative feedback in the smallest setting possible.
One-on-one video calls are preferred.
Negative feedback is distinct from negativity and disagreement. If there is no direct feedback involved, strive to discuss disagreement in a public channel , respectfully and transparently .
in a public channel
transparently
In a GitLab Unfiltered interview on values , GitLab co-founder Sid Sijbrandij offers the following context.
GitLab Unfiltered interview on values
We deal with negative all the time at GitLab. If it‚Äôs not a problem, then why are we discussing it? We deal with negativity a lot, and that‚Äôs also part of our ambition.
If you want to get better, you talk about what you can improve. We‚Äôre allowed to publicly discuss negative things; we‚Äôre not allowed to give negative feedback in a large setting if it could be feasibly administered in a smaller setting.
Negative feedback can be given in a group setting if it‚Äôs to someone higher in the management chain. This shows that no one is above feedback.
We want to solve problems while they are small .
If you are unhappy with anything (your duties, your colleague, your boss, your salary, your location, your computer), please voice your concerns rather than keeping them to yourself. If you need to escalate beyond your manager, you could consider speaking to your skip-level , a more senior person, or a people business partner .
skip-level
people business partner
Recognize the people that helped you publicly, for example in our #thanks chat channel .
#thanks chat channel
When publicly thanking, it‚Äôs important to recognize the following:
Showing thanks in as large a setting as possible (company-wide) at a company as large as ours is the exception instead of the norm, it takes some getting used to.
Being thanked at the company level for what you view as a relatively small or minuscule contribution can feel awkward.
Thanking a person in #thanks should be done sincerely and summarize why you are thankful so the person on the receiving end can easily understand why they are being thanked. Even while assuming positive intent , not all folks are comfortable with public praise. Help this person understand how they went above and beyond and why you felt it was important for the team member to be recognized.
#thanks
assuming positive intent
There are a number of good ways and places to say thanks. We shouldn‚Äôt limit saying thanks to just the #thanks channel .
#thanks channel
Giving feedback is challenging, but it‚Äôs important to deliver it effectively.
When providing feedback, always make it about the work itself;
focus on the business impact and not the person.
Make sure to provide at least one clear and recent example.
If a person is going through a hard time in their personal life, then take that into account.
An example of giving positive feedback is our thanks chat channel .
For managers, it‚Äôs important to realize that team members react to a negative incident with their managers six times more strongly than they do to a positive one.
Keeping that in mind, if an error is so inconsequential that the value gained from providing criticism is low, it might make sense to keep that feedback to yourself.
In the situations where negative feedback must be given, focus on the purpose for that feedback: to improve the team member‚Äôs performance going forward.
Give recognition generously, in the open, and often to generate more engagement from your team.
thanks chat channel
six times more strongly
generate more engagement
We use a lot of text-based communication , and if you know the person behind the text, it will be easier to prevent conflicts.
So we encourage people to get to know each other on a personal level through informal communication , for example, virtual coffee chats , and during GitLab Summit .
text-based communication
informal communication
coffee chats
GitLab Summit
While it‚Äôs wise to seek advice from experts within your function, we encourage GitLab team members to do the same across departments. This enables the company to iterate more quickly, embrace the understanding that everyone can contribute and include more diverse perspectives when possible.
If you have to remind someone of the position you have in the company, you‚Äôre doing something wrong.
People already know our decision-making process .
Explain why you‚Äôre making the decision, and respect everyone irrespective of their function.
This includes using the rank of another person - including the CEO - to sell an idea or decision.
our decision-making process
including the CEO
We naturally have a double standard when it comes to the actions of others.
We blame circumstances for our own mistakes, but individuals for theirs.
This double standard is called the Fundamental Attribution Error .
In order to mitigate this bias, you should always assume positive intent in your interactions with others, respecting their expertise and giving them grace in the face of what you might perceive as mistakes.
Fundamental Attribution Error
assume positive intent
When disagreeing , folks sometimes argue against the weakest points of an argument, or an imaginary argument (e.g. ‚Äústraw man‚Äù ). Assume the points are presented in good faith, and instead try to argue against the strongest version of your opponent‚Äôs position. We call this arguing against a ‚Äústeel‚Äù position, instead of a ‚Äústraw‚Äù one. This concept is borrowed from argue the ‚Äústeel man‚Äù technique.
disagreeing
‚Äústraw man‚Äù
argue the ‚Äústeel man‚Äù
A ‚Äústeel‚Äù position should be against the absolute most effective version of your opponent‚Äôs position ‚Äî potentially even more compelling than the one they presented. A good ‚Äústeel‚Äù position is one where the other person feels you‚Äôve represented their position well, even if they still disagree with your assumptions or conclusion.
There is a lot of good in this article about not wanting jerks on our team, but we believe that jerk is a label for behavior rather than an inherent classification of a person.  We avoid classifications.
this article
If you made a mistake, apologize as soon as possible.
Saying sorry is not a sign of weakness but one of strength.
The people that do the most work will likely make the most mistakes.
Additionally, when we share our mistakes and bring attention to them, others can learn from us, and the same mistake is less likely to be repeated by someone else.
Mistakes can include when you have not been kind to someone. In order to reinforce our values, it is important, and takes more courage, to apologize publicly when you have been unkind publicly (e.g., when you have said something unkind or unprofessional to an individual or group in a Slack channel).
Don‚Äôt defend a point to win an argument or double-down on a mistake.
You are not your work; you don‚Äôt have to defend your point.
You do have to search for the right answer with help from others.
In a GitLab Unfiltered interview , GitLab Head of Remote Darren M. adds context on this operating principle.
interview
In many organizations, there‚Äôs a subtle, low-level, persistent pressure to continually prove your worth.
And I believe that this fuels imposter syndrome and wreaks havoc on mental health .
mental health
What‚Äôs so troubling to me is how often perception is reality.
In other words, those who have mastered the art of being perceived as elite reap benefits, though this has nothing to do with actual results.
At GitLab, ‚Äúno ego‚Äù means that we foster and support an environment where results matter, and you‚Äôre given agency to approach your work in the way that makes sense to you.
Instead of judging people for not approaching work in an agreed-upon way, ‚Äúno ego‚Äù encourages people to glean inspiration from watching others approach work in new and different ways.
A candidate who has talked to a lot of people inside GitLab said that, compared to other companies, one thing stood out the most: everyone here mentioned wanting to see each other succeed.
Keep an eye out for others who may be struggling or stuck.
If you see someone who needs help, reach out and assist. This might involve offering to pair program or setting up a sync brainstorming session. The goal is to connect them with someone else who can provide expertise or assistance.
We are a team, so we succeed and shine together by supporting each other!
pair program
Always make suggestions about examples of work, not the person.
Say ‚ÄúYou didn‚Äôt respond to my feedback about the design‚Äù instead of ‚ÄúYou never listen‚Äù.
And, when receiving feedback, keep in mind that feedback is the best way to improve, and that others giving you feedback want to see you succeed.
Our collaboration value is about helping each other when we have questions, need critique, or need help.
No need to brainstorm, wait for consensus, or do with two what you can do yourself . The Bolt Handbook refers to this as the Founder Mentality , where all team members should approach the problem as if they own the company.
do with two what you can do yourself
Founder Mentality
Investigate mistakes in a way that focuses on the situational aspects of a failure‚Äôs mechanism and the decision-making process that led to the failure, rather than cast blame on a person or team.
We hold blameless root cause analyses and retrospectives for stakeholders to speak up without fear of punishment or retribution.
root cause analyses
retrospectives
People joining the company frequently say, ‚ÄúI don‚Äôt want to step on anyone‚Äôs toes.‚Äù
At GitLab, we should be more accepting of people taking initiative in trying to improve things.
As companies grow, their speed of decision-making goes down since there are more people involved.
We should counteract that by having short toes and feeling comfortable letting others contribute to our domain.
For example, pointed, respectful feedback to a proposal by GitLab‚Äôs CEO led to his own merge request being closed. However, it is not required to respond to comments.
proposal
We know we must rely on others for the expertise they have that we don‚Äôt.
It‚Äôs OK to admit you don‚Äôt know something and to ask for help, even if doing so makes you feel vulnerable.
It is never too late to ask a question, and by doing so, you can get the information you need to produce results and to strengthen your own skills as well as GitLab as a whole.
After your question is answered, please document the answer so that it can be shared .
please document the answer so that it can be shared
Don‚Äôt display surprise when people say they don‚Äôt know something, as it is important that everyone feels comfortable saying ‚ÄúI don‚Äôt know‚Äù and ‚ÄúI don‚Äôt understand.‚Äù
(As inspired by Recurse .)
Recurse
When collaborating, it is always important to stay above radar and work transparently , but collaboration is not consensus and disagreement is part of collaboration.
You don‚Äôt need to ask people for their input, and they shouldn‚Äôt ask you ‚ÄúWhy didn‚Äôt you ask me?‚Äù
You don‚Äôt have to wait for people to provide input, if you did ask them.
You don‚Äôt need to have everyone agreeing to the same thing - they can disagree, commit, and disagree . Two-way doors decisions can be reversed as part of disagree, commit, and disagree , while one-way door decisions benefit from more input. Recognize these reversible two-way door decisions for when less input is required to iterate faster.
We believe in permissionless innovation‚Äîyou don‚Äôt need to involve people, but everyone can contribute.
This is core to how we iterate , since we want smaller teams moving quickly rather than large teams achieving consensus slowly.
transparently
not consensus
disagree, commit, and disagree
Two-way doors decisions
disagree, commit, and disagree
iterate
Competencies are the Single Source of Truth (SSoT) framework for things we need team members to learn.
We demonstrate collaboration when we take action to help others and include other‚Äôs (both internal and external) input (both help and feedback) to achieve the best possible outcome.
Competencies
GitLab Job Grade
Knowledge Assessment for Individual Contributors
Knowledge Assessment for People Leaders
We exist to help our customers achieve more. Everything we do should be in service of making our customers successful with GitLab. Results for Customers is at the top of our values hierarchy, as our customers achieving results drives overall business performance that enables everything else.
The Results for Customers value is displayed through the following operating principles:
While we iterate with small changes, we strive for large, ambitious results. We have an ambitious mission and vision , and we aim to be the best in the world across all our functions. Setting ambitious, measurable goals enables us to best deliver customer results.  We agree in writing on measurable goals. Within the company we use OKRs to stay accountable. We have and report against KPIs with guiding targets.
mission
vision
OKRs
KPIs
All GitLab team members should understand our customers‚Äô needs, issues, and value propositions. We understand how they use GitLab and what they need from a platform in order to meet their goals. Internally facing teams consider the impact of their work as it pertains indirectly to GitLab‚Äôs customers.
We better understand customers and their needs through:
Reviewing public facing GitLab issues from our customers and users
Dogfooding our product to understand the user experience
Dogfooding
Reading customer stories from Marketing and Sales
Attending Customer fireside chats
Learning feedback from our customers and users on product features and roadmap
We create together with our customers. There is an open dialogue between GitLab and our customers so that we can better identify what they need. As a result of building a solution for them, we can also bring that solution to the world.
Our focus is to increase customer results. At GitLab, one way to drive customer results is through platform enhancements that drive the most value for direct users. This requires being aware of the Concur effect .
the Concur effect
Arvind Narayanan , a Princeton Professor, described his frustration with Blackboard in a viral Tweet:
Arvind Narayanan
It has every feature ever dreamed up. But like anything designed by a committee, the interface is incoherent and any task requires at least fifteen clicks (and that‚Äôs if you even remember the correct sequence the first time).
Software companies can be breathtakingly clueless when there‚Äôs a layer of indirection between them and their users. Everyone who‚Äôs suffered through Blackboard will have the same reaction to this: try having less functionality!
Ryan Falor followed up on Narayanan‚Äôs tweet with his definition of the Concur Effect:
Ryan Falor
decision makers are not direct users features are overwhelming and disjointed user experience gets worse over time
decision makers are not direct users
features are overwhelming and disjointed
user experience gets worse over time
See the Hacker News discussion for a specific UX example.
the Hacker News discussion
At GitLab, we want to drive customer results through focusing on platform enhancements that drive the most value for direct users.
Customer results are more important than:
What we plan to make . If we focus only on our own plans, we would have only GitLab.com and no self-managed delivery of GitLab. This does not mean that we will agree to every feature request, but we won‚Äôt let existing plans be an obstacle to working on what will drive the most customer value. Large customer requests . Catering to requests from large customers leads to the innovator‚Äôs dilemma , we need to also focus on results for small and future customers. Our existing scope . For example, when customers asked for better integrations and complained about integration costs and effort, we responded by expanding our scope to create a single application for the DevOps lifecycle. Our assumptions . Every company works differently, so we can‚Äôt assume that what works well for us will support our customers‚Äô needs. When we have an idea, we must directly validate our assumptions with multiple customers to ensure we create scalable, highly relevant solutions. What we control . We strive to provide the best possible experience for each of our customers, and take responsibility for all of the aspects that we can reasonably control.
What we plan to make . If we focus only on our own plans, we would have only GitLab.com and no self-managed delivery of GitLab. This does not mean that we will agree to every feature request, but we won‚Äôt let existing plans be an obstacle to working on what will drive the most customer value.
Large customer requests . Catering to requests from large customers leads to the innovator‚Äôs dilemma , we need to also focus on results for small and future customers.
innovator‚Äôs dilemma
Our existing scope . For example, when customers asked for better integrations and complained about integration costs and effort, we responded by expanding our scope to create a single application for the DevOps lifecycle.
single application
Our assumptions . Every company works differently, so we can‚Äôt assume that what works well for us will support our customers‚Äô needs. When we have an idea, we must directly validate our assumptions with multiple customers to ensure we create scalable, highly relevant solutions.
What we control . We strive to provide the best possible experience for each of our customers, and take responsibility for all of the aspects that we can reasonably control.
We care about what you achieve: the code you shipped, the needle you moved, the user you made happy, and the team member you helped. Someone who took the afternoon off shouldn‚Äôt feel like they did something wrong, unless it negatively impacted a goal or result they were responsible for. You don‚Äôt have to defend how you spend your day if you are performing and delivering against expectations. We trust team members to do the right thing instead of having rigid rules. We trust team members to show up and do their best work. Do not incite competition by proclaiming how many hours you worked yesterday. If you are working too many hours, talk to your manager to discuss solutions.
We use our own product in the way our users do to surface improvements that will lead to better customer results . GitLab is a DevSecOps Platform that can be used by people throughout the business. This is how we use it within GitLab. For example, we use our OKR functionality company-wide to inform product enhancements and for team members to have a great understanding of the customer experience. We also dogfood in the following ways:
use our own product
customer results
Our development organization uses GitLab.com to manage the DevOps lifecycle of GitLab itself. All team members use GitLab to collaborate on this handbook. We capture content and processes in Git repos and manage them with GitLab.
Our development organization uses GitLab.com to manage the DevOps lifecycle of GitLab itself.
All team members use GitLab to collaborate on this handbook.
We capture content and processes in Git repos and manage them with GitLab.
When something breaks, doesn‚Äôt work well, or needs improvement, we are more likely to notice it internally and address it before it impacts our larger community.
We give people agency to focus on what they think is most beneficial. If a meeting doesn‚Äôt seem interesting and someone‚Äôs active participation is not critical to the outcome of the meeting, they can always opt to not attend, or during a video call they can work on other things if they want. Staying in the call may still make sense even if you are working on other tasks, so other peers can ping you and get fast answers when needed. This is particularly useful in multi-purpose meetings where you may be involved for just a few minutes.
Challenging the status quo can lead to remarkable results - we must never stop. A challenger mindset requires that we continually ask ourselves bold, difficult questions about our business and the problems we solve, while resisting complacency. To succeed we must innovate and delight our customers with the value of the products we build. A challenger mindset requires a relentless pursuit of excellence - we must be tenacious . Each win for our customers builds reputational capital we can use to earn the trust of prospects in a competitive market. While competition is a feature of capitalism, internally as GitLab team members, we must focus our efforts inwardly on achieving our very best results for customers to win market share.
challenger mindset
tenacious
You don‚Äôt always get results and this will lead to criticism from yourself and/or others. We believe our talents can be developed through hard work, targeted training, learning from others, on-the-job experience, and receiving input from others. It is in our DNA as a company and individuals to look for opportunity, stay humble, and never settle. We try to hire people based on their trajectory, not their pedigree . We also strive to foster a culture of curiosity and continuous learning where team members are provided and proactively seek out opportunities to grow themselves and their careers. We believe that with the right expectations and direction, people can grow to take on new challenges and surpass expectations.
their trajectory, not their pedigree
Our definition of cross-functional optimization is that you do what is best for the organization as a whole. Don‚Äôt optimize for the goals of your team when it negatively impacts the goals of other teams, our users, and/or the company. Those goals are also your problem and your job. For example, you may have set a non-urgent functional milestone that is supposed to land at the end of the quarter. If delivering within the last week requires engagement from the GTM teams , the right decision may be to push your own team‚Äôs target by a week to reduce the ask for the GTM team as the GTM focuses on meeting its revenue objectives.
the GTM teams
In the context of collaboration , if anyone is blocked by you on a question, your approval, or a merge request review, you should prioritize unblocking them, either directly or through helping them find someone else who can.
collaboration
We refer to this as ‚Äúpersistence of purpose‚Äù. As talked about in The Influence Blog , tenacity is the ability to display commitment to what you believe in. You keep picking yourself up, dusting yourself off, and quickly get going again having learned a little more. We value the ability to maintain focus and motivation when work is tough and asking for help when needed.
The Influence Blog
We expect team members to complete tasks that they are assigned. You are responsible for executing with attention to detail, connecting the dots across the organization and anticipating and solving problems. As an owner, you are responsible for overcoming challenges, not suppliers or other team members. Take initiative and proactively inform stakeholders when there is something you might not be able to solve.
Time gained or lost has compounding effects. Try to get the results as fast as possible, but without compromising our other values and ways we communicate , so the compounding of results can begin and we can focus on the next improvement.
ways we communicate
It‚Äôs important that we keep our focus on action, and don‚Äôt fall into the trap of analysis paralysis or sticking to a slow, quiet path without risk. Decisions should be thoughtful, but delivering fast results requires the fearless acceptance of occasionally making mistakes; our bias for action also allows us to course correct quickly. Try to get results as fast as possible, but without compromising our other values and ways of working
When a decision is in place, we expect people to commit to executing it. Any past decisions and guidelines are open to questioning as long as you act in accordance with them until they are changed. This is a common principle .
Every decision can be changed;
our best decision was one that changed an earlier one .
In a manager-report relationship, usually the report is the Directly Responsible Individual (DRI).
The manager may disagree with the final decision, but they still commit to the decision of the DRI.
a common principle
best decision was one that changed an earlier one
Directly Responsible Individual
In a group setting, participants may disagree with a proposal but not articulate their views for one reason or another. Sometimes, many or all individuals may disagree yet choose not to speak up , because no one believes they would get agreement from the group. As a result, everyone loses out on their feedback. Dissent is expression of that disagreement. However, it can be difficult and even socially expensive.
Expression of feedback is a way for everyone to grow and learn, and is based on facts rather than opinions . Share your perspective, rather than agreeing simply to avoid conflict or to go along with everyone else.
many or all individuals may disagree yet choose not to speak up
Dissent
based on facts rather than opinions
When you want to reopen the conversation on something, show that your argument is informed by previous conversations and assume the decision was made with the best intent .
You have to achieve results on every decision while it stands, even when you are trying to have it changed.
You should communicate with the DRI who can change the decision instead of someone who can‚Äôt.
assume the decision was made with the best intent
DRI
If there is a disagreement and you can‚Äôt move forward because of it, agree to escalate and escalate to one or both of your managers. Early escalation, delivered with context of the challenge, enables managers to function as an unblocker.
Competencies are the Single Source of Truth (SSoT) framework for things we need team members to learn.
We demonstrate results when we do what we promised to each other, customers, users, and investors.
Competencies
GitLab Job Grade
Knowledge Assessment for Individual Contributors
Knowledge Assessment for People Leaders
At GitLab, efficiency means producing results without wasting materials, time, or energy. We optimize solutions globally for the broader GitLab community over one person or a small group. Focus on efficiency should be global in nature, not just local to a given function. Global efficiency could include efficiency with customers, candidates, and contributors as well. It is easy to prioritize consistency over efficiency because consistency is often more efficient initially and makes managing processes more efficient. We should slow down when optimizing for consistency. Taking a company-wide lens when evaluating changes will help ensure that new processes will improve efficiency for GitLab as a whole and be the best decision for the company as a whole.
results
When we work internally with other team members, we leverage GitLab‚Äôs unique working practices and operating principles to achieve top efficiency. We do not expect people outside of GitLab to conform to GitLab‚Äôs ways of working, and we will make accommodations to work effectively with them. For example, we may collaborate heavily in-person and not default to async communications.
Most companies regress to the mean and slow down over time. While some changes are required as a company grows and matures, not all change is inevitable or should be allowed to passively happen. As GitLab grows, we are conscious of how we operate and how it enables our ability to continue to operate with the agility of a startup . We try to limit ourselves to healthy constraints .
startup
healthy constraints
We document everything: in the handbook, in meeting notes, in issues.
We do that because ‚Äú the faintest pencil is better than the sharpest memory .‚Äù
It is far more efficient to read a document at your convenience than to have to ask and explain. Having something in version control also lets everyone contribute suggestions to improve it.
the faintest pencil is better than the sharpest memory
Use the simplest and most boring solution for a problem, and remember that ‚Äúboring‚Äù should not be conflated with ‚Äúbad‚Äù or ‚Äútechnical debt.‚Äù The speed of innovation for our organization and product is constrained by the total complexity we have added so far, so every little reduction in complexity helps.
Don‚Äôt pick an interesting technology just to make your work more fun;
using established, popular tech will ensure a more stable and more familiar experience for you and other contributors.
‚Äúboring‚Äù
not be conflated with ‚Äúbad‚Äù or ‚Äútechnical debt.‚Äù
Make a conscious effort to recognize the constraints of others within the team.
For example, sales is hard because you are dependent on another organization, and development is hard because you have to preserve the ability to quickly improve the product in the future.
Team members should first search for their own answers and, if an answer is not readily found or the answer is not clear, ask in public as we all should have a low level of shame . Write down any new information discovered and pay it forward so that those coming after will have better efficiency built on top of practicing collaboration, inclusion, and documenting the results.
search for their own answers
low level of shame
Write down any new information discovered
Team members have more room to grow themselves when they are able to self-service and self-learn.
Optimize solutions globally for the broader GitLab community. As an example, it may be best to discard a renewal process that requires thousands of customers to each spend two hours in favor of one that only takes sixty seconds, even when it may make a monthly report less efficient internally! In a decision, ask yourself ‚ÄúFor whom does this need to be most efficient?‚Äù Quite often, the answer may be your users, contributors, customers, or team members that are dependent upon your decision.
Consider the time investment you are asking others to make with meetings and a permission process. Try to avoid meetings, and if one is necessary, try to make attendance optional for as many people as possible. Any meeting should have an agenda linked from the invite, and you should document the outcome. Instead of having people ask permission, trust their judgment and offer a consultation process if they have questions.
Every dollar we spend will have to be earned back. Be as frugal with company money as you are with your own. In saying this, we ask team members to weigh the cost of purchases against the value that they will bring to the company.
Consider the degree to which a purchase increases your ability to better accomplish your work and achieve business results relative to cost. Lowering overhead reduces the cost to operate the business and lets us shift spend toward other priority areas.
results
We have guidelines around this operating principle to help team members better understand our expensing process and expectations.
guidelines
Amazon states it best with: ‚ÄúAccomplish more with less. Constraints breed resourcefulness, self-sufficiency, and invention. There are no extra points for growing headcount, budget size, or fixed expense.‚Äù
Amazon states it best
Give short answers to verbal questions so the other party has the opportunity to ask more or move on.
Keep one-to-many written communication short, as mentioned in this HBR study : ‚ÄúA majority say that what they read is frequently ineffective because it‚Äôs too long, poorly organized, unclear, filled with jargon, and imprecise.‚Äù
this HBR study
We want each team member to be a manager of one who doesn‚Äôt need daily check-ins to achieve their goals. Team members are given the freedom to own projects and initiatives and are trusted to see them through to a successful end.
a manager of one
When team members are managers of one they can have an increased work/life balance, because they are more empowered to make decisions around how they allocate their time throughout each day.
When possible, we give people the responsibility to make a decision and hold them accountable for that, instead of imposing rules and approval processes. You should have clear objectives and the freedom to work on them as you see fit. Freedom and responsibility are more efficient than rigidly following a process, or creating interdependencies , because they enable faster decision velocity and higher rates of iteration .
or creating interdependencies
iteration
When team members have freedom and responsibility over rigidity, they have more room to help others.
Not every problem should lead to a new process to prevent them. Additional processes make all actions more inefficient; a mistake only affects one. Once you have accepted the mistake, learn from it. When team members are free to accept mistakes, they can take more calculated risks.
We value constant improvement by iterating quickly, month after month. If a task is not the smallest viable and valuable thing , cut the scope.
smallest viable and valuable thing
Adoption of features, user requirements, and the competitive landscape change frequently and rapidly. The most successful companies adapt their roadmap and their organization quickly to keep pace. One of the things that makes this challenging is the impact on our team. People may need to change teams, subject matter, or even who manages them. This can rightly feel disruptive. If we coach ourselves to embrace the positive aspects of change, such as increased opportunity and new things to learn, we can move faster as a company and increase our odds of success. It is important to hold management accountable for being deliberate .
hold management accountable for being deliberate
Competencies are the Single Source of Truth (SSoT) framework for things we need team members to learn.
We demonstrate efficiency when we work on the right things, not doing more than needed, and not duplicating work.
Competencies
GitLab Job Grade
Knowledge Assessment for Individual Contributors
Knowledge Assessment for People Leaders
Diversity, inclusion and belonging are fundamental to the success of GitLab. We aim to make a significant impact in our efforts to foster an environment where everyone can thrive. We are designing a multidimensional approach to ensure that GitLab is a place where people from every background and circumstance feel like they belong and can contribute. We actively chose to build a culture that is inclusive and supports all team members equally in the process of achieving their professional goals. We work to make everyone feel welcome and to increase the participation of underrepresented groups in our community and company.
inclusive
Take initiative to operate asynchronously whenever possible. This shows care and consideration for those who may not be in the same time zone, are traveling outside of their usual time zone, or are structuring their day around pressing commitments at home or in their community.
asynchronously
structuring their day
This is demonstrated by communicating recordings of meetings , using GitLab Issues and Merge Requests rather than texts, calls, or Slack messages, and being sensitive to local holidays and vacation statuses. Encourage others to default to documentation rather than pressuring others to be online outside of their working hours.
meetings
documentation
Part of embracing diversity is a willingness to embrace often uncomfortable conversations and situations. This concept is also at the core of inclusion and helping to eliminate the problems that are faced by certain GitLab team members who may not be in the majority.
We believe that being willing to embrace discomfort is the path forward to a safe, balanced and inclusive work place for all. Challenge yourself, challenge your own pre-set notions and ideas about different cultures or things you don‚Äôt understand. When we are willing to embrace being uncomfortable, we can focus on actually fixing the issues at hand rather than simply ‚Äúappearing to care‚Äù.
Microaggressions are much more than merely rude or insensitive comments. They can wear people down by slowly chipping away their sense of belonging/safety/inclusion over time. What is a microaggression?
‚ÄúThe everyday slights, indignities, put downs and insults that people of color, women, LGBT populations or those who are marginalized experiences in their day-to-day interactions with people.‚Äù -  Derald W. Sue
At GitLab we believe that everyone is entitled to a safe working space where they can express who they are and participate in conversations without worry of being spoken to in a harmful way, given that we want to encourage everyone to be mindful of what is a microaggression and be mindful of their potential impact.
We believe that team members seeking feedback from a diverse group of team members, inside and outside of their group or function, leads to better decisions and a greater sense of team member belonging. For more guidance on how we define Diversity, please refer to GitLab‚Äôs definition of Diversity, Inclusion & Belonging . Feedback from a more heterogenous group often leads to better business outcomes as we incorporate diverse perspectives and uncover unconscious bias.
GitLab‚Äôs definition of Diversity, Inclusion & Belonging
An example of this operating principle in action showcases the value of actively seeking diverse perspectives. The term ‚ÄúBrag Document‚Äù was used to describe when individuals documented their accomplishments. Documenting accomplishments is critical to team member development. However, team members had the psychological safety to raise the question of whether or not the title of the document made some feel uncomfortable. In an effort to seek a diverse perspective , a survey was conducted in one of the Team Member and Advocacy Resource Group (TMRG) channels. The poll results showed that 100% of those polled preferred a different title and the title was changed.
Team Member and Advocacy Resource Group (TMRG)
One of the unique elements to an all-remote culture is the ability to visit a person‚Äôs home while collaborating. If the tenor of the meeting allows, feel welcome to invite your family members or pets to drop by and greet your colleagues. Be mindful of language and use of profanity to encourage a family-friendly environment.
all-remote culture
Caregiving, outreach programs, and community service do not conveniently wait for regular business hours to conclude. If there‚Äôs a cause or community effort taking place, feel welcome to work with your manager and shift your working hours to be available during a period where you‚Äôll have the greatest impact for good. For colleagues supporting others during these causes, document everything and strive to post recordings so it‚Äôs easy for them to catch up.
People feel more included when they‚Äôre supported. To encourage this, and to support diversified learning across departments, consider GitLab‚Äôs Internship for Learning program.
Internship for Learning
We don‚Äôt hire based on culture or select candidates because we‚Äôd like to have a drink with them. We hire and reward team members based on our shared values as detailed on this page. We want a values fit , not a culture fit.
We want cultural diversity instead of cultural conformity. Said differently: ‚Äúculture add‚Äù > ‚Äúculture fit‚Äù or ‚Äúhire for culture contribution‚Äù since our mission is that everyone can contribute .
‚Äúculture add‚Äù > ‚Äúculture fit‚Äù
mission is that everyone can contribute
We generally avoid discussing politics or religion in public forums because it is easy to alienate people that have a minority opinion. This doesn‚Äôt mean we never discuss these topics. Because we value diversity, inclusion and belonging, and want all team members to feel welcome and contribute equally, we encourage free discussion of operational decisions that can move us toward being a more inclusive company.
There is sometimes a grey area where advocating for diversity and political activities may intersect. Team members should use discretion in grey area communications, because a culture of belonging requires us to be respectful of the broad spectrum of views within our work environment. What does this mean in practice? Please feel empowered to share information that highlights diversity, inclusion and belonging issues and how GitLab and GitLab team members can get involved. In line with our Code of Business Conduct and Ethics , avoid posting articles that reference specific political figures or parties.
Code of Business Conduct and Ethics
While it is acceptable for individuals to bring up politics and religion in social contexts such as coffee chats and real-life meetups with other coworkers (with the goal to understand and not judge), always be aware of potential sensitivities, exercise your best judgment, and make sure you stay within the boundaries of our Code of Business Conduct and Ethics .
Code of Business Conduct and Ethics
We‚Äôre a global company where perspectives and local norms may differ from culture to culture. Diversity, inclusion and belonging is about broad inclusion at a worldwide level. If there is a question or concern, please reach out to diversityinclusion@gitlab.com or #diversity_inclusion_and_belonging .
diversityinclusion@gitlab.com
#diversity_inclusion_and_belonging
Unexpected and unconventional things make life more interesting.
Celebrate and encourage quirky gifts, habits, behavior, and points of view. Open source is a great way to interact with interesting people. We try to hire people who think work is a great way to express themselves.
Do not make jokes or unfriendly remarks about characteristics of the people who make up GitLab and how they identify .
Everyone has the right to feel safe when working for GitLab and/or as a part of the GitLab community.
We do not tolerate abuse, harassment , exclusion, discrimination, or retaliation by/of any community members, including our team members.
You can always refuse to deal with people who treat you badly and get out of situations that make you feel uncomfortable.
characteristics of the people who make up GitLab and how they identify
harassment
We recognize that unconscious bias is something that affects everyone and that the
effect it has on us as humans and our company is large.
We are responsible for understanding our own implicit biases and helping others
understand theirs. We are continuously working on getting better at this topic .
working on getting better at this topic
We list our Parental Leave publicly so people don‚Äôt have to ask during interviews.
Parental Leave
Use inclusive language.
For example, prefer ‚ÄúHi everybody‚Äù or ‚ÄúHi people‚Äù to ‚ÄúHi guys‚Äù, and ‚Äúthey‚Äù instead of ‚Äúhe/she‚Äù. While there are several good guides from folks like 18f , University of Calgary , and Buffer on using inclusive language, we don‚Äôt keep an exhaustive list.
When new possibly non-inclusive words arise, we prefer to be proactive and look for an alternative.
If your goal is to be inclusive, it is more effective to make a small adjustment in the vocabulary when some people have a problem with it, rather than making a decision to not change it because some people don‚Äôt think it is a problem.
And if you make a mistake (e.g. accidentally using the wrong pronoun or an outdated phrase), acknowledge it, apologize gracefully and move on ; there is no need to dwell on it, and you can work to avoid making that mistake in the future.
Please also visit our Gender and Sexual-orientation Identity Definitions and FAQ page if you have questions around pronouns and other topics related to gender / sexual orientation.
18f
University of Calgary
Buffer
Gender and Sexual-orientation Identity Definitions and FAQ
We attach part of our identity to our names, and if it is mispronounced it can feel less inclusive.
If it happens repeatedly, you may be unintentionally sending a message to that person that you are not interested
in learning how to pronounce their name correctly. This applies to everyone you are in contact with:
team members, customers, candidates for jobs, and anyone else.
People whose name is repeatedly mispronounced might feel unimportant or self-conscious, and might not
speak up about it.
Other negative behaviors include giving a person a nickname without their permission, or
actively avoiding using their name in sync calls.
It might be challenging to pronounce names from a different language or culture than your
own, but with some effort, name pronunciation can be learned by anyone. Some ways to achieve this are:
Ask the person for help in a private space: ‚ÄúI‚Äôm sorry, I don‚Äôt think I am pronouncing your name correctly. Can you help me with the correct pronunciation?‚Äù
Use the written and recorded pronunciation tools in Slack.
Use online tools such as videos recorded on YouTube or NameShouts .
NameShouts
Practice the pronunciation with a friend or team member who knows the correct pronunciation.
Always avoid making jokes or comments about how it is difficult to pronounce their name.
Some people might choose to use a nickname, for example: ‚ÄúBob‚Äù instead of ‚ÄúRobert‚Äù.
As long as this is their choice this is perfectly acceptable.
We should avoid assigning a nickname to a person without their permission.
Slack has two features to help with this issue: the phonetic name pronunciation field and the ability to record your own name pronunciation audio clip. We encourage all team members to complete both of these. Update them by editing your profile .
editing your profile
This is documented on our page about interviewing .
interviewing
Be consciously inclusive in meetings by giving everyone present an opportunity to talk and present their points of view. This can be especially important in a remote setting.
meetings
With internal meetings, consider using an agenda document for questions. For example, with GitLab Group Conversations , every meeting has a numbered list that GitLab team members can add questions to. During the meeting, questions are answered in turn and discussions noted in the same document. Sometimes, these documents can have so much traffic (during the meeting) such that only a limited number of people can edit the document. In these situations, those who have questions should post on zoom chat and those who can edit the document should help copy the question over to the document. In addition, those who can edit the document should also post in zoom chat to see if anyone has any questions that they could help add to the document so that meeting attendees are more empowered to contribute to the conversation.
Group Conversations
Customers are not used to working in this way. To promote inclusion with customers: ask participants for their goals; make sure during demos that you pause for question; leave time for discussion.
Being globally distributed has the benefit that someone can cover for you when you are off work. However, population density is not balanced across timezones. Policies should remain fair to those in less dense regions.
For example, the Asia Pacific region covers more timezones but has fewer team members. If we use an algorithm to assign tasks to those in later timezones, all American tasks would fall on the fewer Asia Pacific employees. This can damage belonging and inclusivity and should be avoided.
When planning an event, the organizer should cater for location density differences to maximize participation in all regions.
As a globally-dispersed company, we have team members from many different backgrounds and cultures. That means it is important for each of us to use great judgment in being respectful and inclusive of our teammates. At the same time, we may sometimes not fully realize we have said or done something to offend someone. It is important that our teammates hold each other accountable and let them know if they have unintentionally or intentionally done something so they can learn and gain additional understanding of perspectives different from our own. It is also important that our teammates don‚Äôt feel excluded or minimized by the words we use or the things we do. Thus, we all need to speak up when we see something that isn‚Äôt respectful or inclusive.
Neurodiversity refers to variations in the human brain regarding learning, attention, sociability, mood, and other mental functions. There are various neurodevelopmental conditions, like autism, ADHD, dyslexia, dyscalculia, dyspraxia, cognitive impairment, schizophrenia, bipolarity, and other styles of neurodivergent functioning. While neurodivergent individuals often bring unique skills and abilities which can be harnessed for a competitive advantage in many fields (for example, cybersecurity ), neurodivergent individuals are often discriminated against. Due to non-inclusive hiring practices, they sometimes have trouble making it through traditional hiring processes. Neurodiversity inclusion best practices benefit everyone, and at GitLab, everyone can contribute. The handbook, values, strategy, and interviewing processes must support the ability for everyone to thrive.
Neurodiversity
unique skills and abilities
competitive advantage
cybersecurity
At GitLab we embrace Neurodiversity through adopting a variety of different work styles and communication styles, and we lean into transparency , asynchronous as a default working style, and pre-filled meeting agendas. These best practices become even more important when embracing neurodiversity. Providing multiple ways to consume information (written / video / audio) allows everyone to contribute independent of their preferred comprehension style. It is important to ask team members specifically what their preferred communication method is in order to provide them information in a format that is easily consumable for them.
transparency
Remember, brains work differently and always assume positive intent , even if someone behaves in an unexpected way. While it may be an unexpected behavior to you, it may not be unexpected to the individual exhibiting the behavior. That is the beauty and value of diversity, embracing differences and becoming stronger and better as a result.
assume positive intent
We also recommend that all team members review the Reasonable Accommodation process. A Reasonable Accommodation for a team member could include noise-cancelling headphones, scheduling smaller group session zoom calls, providing very explicit and precise instructions and due-dates when given tasks, or providing a variety of supportive software tools.
Reasonable Accommodation
The most important thing that managers can do is facilitate an environment in which all team members feel psychologically safe enough to make requests for what they need in order to do their job.
psychologically safe
what they need
Long-lasting relationships are the rocks of life , and come before work. As someone said in our #thanks channel after helping a family member for five days after a hurricane: ‚ÄúTHANK YOU to GitLab for providing a culture where ‚Äúfamily first‚Äù is truly meant‚Äù.  Use the hashtag: #FamilyAndFriends1st
are the rocks of life
#thanks channel
Equity vs. Equality: What‚Äôs the Difference?
Equity vs. Equality: What‚Äôs the Difference?
While the terms equity and equality may sound similar, the implementation of one versus the other can lead to dramatically different outcomes for marginalized people.
Equality means each individual or group of people is given the same resources or opportunities. Equity recognizes that each person has different circumstances and allocates the exact resources and opportunities needed to reach an equal outcome.
Competencies are the Single Source of Truth (SSoT) framework for things we need team members to learn.
We demonstrate diversity, inclusion and belongings when we foster an environment where everyone can thrive and ensuring that GitLab is a place where people from every background and circumstance feel like they belong and can contribute.
Competencies
If you would like to improve your skills or expand your knowledge on topics relating to Diversity, Inclusion, & Belonging at GitLab, check out our resources:
Being an Ally
Being an Ally
Being Inclusive
Being Inclusive
Recognizing Bias
Recognizing Bias
GitLab Job Grade
Attend DIB Initiatives Calls to stay informed and connected with ongoing efforts and discussions
Participate in a DIB Initiative: join TMRGs you identify with, support other groups as an Ally, attend events, "like" slack posts and spread the word Participate in a TMRG initiative Member of a working group related to a DIB initiative, e.g. participate in a Mentorship program
TMRGs
Participate in a TMRG initiative
Member of a working group related to a DIB initiative, e.g. participate in a Mentorship program
Mentorship
Knowledge Assessment for Individual Contributors
Attend DIB Initiatives Calls to stay informed and connected with ongoing efforts and discussions
Participate in a DIB Initiative: join TMRGs you identify with, support other groups as an Ally, attend events, like posts and spread the word Participate in a TMRG initiative Member of a working group related to a DIB initiative, e.g. participate in a Mentorship program Hiring Manager ensure a diverse candidate slate and interview panel Active participant and advocate for department DIB goals
TMRGs
Participate in a TMRG initiative
Member of a working group related to a DIB initiative, e.g. participate in a Mentorship program
Mentorship
Hiring Manager ensure a diverse candidate slate and interview panel
Active participant and advocate for department DIB goals
Knowledge Assessment for People Leaders
Grace Hopper
Leadership DIB Council
Serve as an TMRG executive sponsor
TMRG
Embed DIB into All hands or in person events e.g.review organizations OKR as it relates to DIB progress, champion trainings related to further DIB knowledge, invite guest speakers to advocate
Advocate and Integrate DIB into your organizational KPIs/OKRs, e.g.OKR: continue to build and grow a diverse workforce/organization
Partner with the DIB Team & Leadership DIB Council to establish an action plan for your departments & division
DIB Team
Leadership DIB Council
Serve as a TMRG executive sponsor
TMRG
Embed DIB into All hands or in person events e.g.review organizations OKR as it relates to DIB progress, champion trainings related to further DIB knowledge, invite guest speakers to advocate
Merriam-Webster defines iteration as the ‚Äúthe action or a process of iterating or repeating: such as a procedure in which repetition of a sequence of operations yields results successively closer to a desired result.‚Äù At GitLab, we iterate to do the smallest valuable thing to get fast feedback and efficiently reach a desired end goal . Feedback can be from internal users (dogfooding), a limited number of external users (through our early access program ), or through feedback from our broader user community. We validate each iteration and adjust, but not at the expense of the user experience that we deliver to our customers.
Merriam-Webster
smallest valuable thing to get fast feedback and efficiently reach a desired end goal
early access program
When we iterate at GitLab, we break up the work that we know we need to do into smaller chunks to iterate toward a targeted end state:
Merge in codebase Dogfood Have some external users (early access program) Ensure global optimization (use standardized systems) Plan beyond the iteration
Merge in codebase
Dogfood
Dogfood
Have some external users (early access program)
Ensure global optimization (use standardized systems)
Plan beyond the iteration
Iteration does not require us to ship features that are open to all users from day one. Feedback can come from internal users or a limited number of external users (early access program). Moving through the release process is not iteration though. Iteration is also not a replacement for having a plan . We expect you to know where you are going, but you can iterate to get there.
release process is not iteration
replacement for having a plan
An iteration might be additive (adding something) or subtractive (removing something). If you make suggestions that can be excluded from the first iteration, turn them into a separate issue that you link.
While you should have a clear vision of the desired outcome and how it addresses a customer pain point or improves the user experience, be efficient in your planning. Unless you identify important cross-functional interdependencies, focus detailed planning on the first step. It might feel you are moving too slowly; however, planning is critical in order to ensure you can move fast when implementing. You‚Äôre doing it right if you feel that you have shipped the minimal feature set in the first iteration. This value is the one people most underestimate when they join GitLab. The impact, both on your work process and on how much you achieve, is greater than anticipated. Frequently, the simplest version that provides value turns out to be the best one.
Many people who join GitLab say they already practice iteration. But this is the value that is the hardest to understand and adopt. People are trained that if you don‚Äôt deliver a perfect or polished thing, there will be a problem. If you do just one piece of something, you have to come back to it. Doing the whole thing seems more efficient, even though it isn‚Äôt. If the complete picture is not clear, your work might not be perceived as you want it to be perceived. It seems better to make a comprehensive product. They see other GitLab team members being really effective with iteration but don‚Äôt know how to make the transition, and it‚Äôs hard to shake the fear that constant iteration can lead to shipping lower-quality work or a worse product. In reality, it is possible to ship a minimally valuable product while continuing to adhere to the documented quality standards.
The way to resolve this is to write down only what value you can add with the time you have for this project right now. That might be 5 minutes or 2 hours. Think of what you can complete in that time that would improve the current situation. Iteration can be uncomfortable, even painful. If you‚Äôre doing iteration correctly, it should be. Reverting work back to a previous state is positive, not negative. We‚Äôre quickly getting feedback and learning from it. Making a small change prevented a bigger revert and made it easier to revert.
However, if we take smaller steps and ship smaller, simpler features, we get feedback sooner. Instead of spending time working on the wrong feature or going in the wrong direction, we can ship the smallest product, receive fast feedback, and course correct. People might ask why something was not perfect. In that case, mention that it was an iteration, you spent only ‚Äúx‚Äù amount of time on it, and that the next iteration will contain ‚Äúy‚Äù and be ready on ‚Äúz‚Äù.
Iteration enables results and efficiency .
results
efficiency
In the GitLab Unfiltered video embedded above, GitLab co-founder Sid Sijbrandij shares key operating principles to reinforce iteration in an organization.
GitLab Unfiltered video
Iteration involves driving results in pursuit of a long-term vision. While the intermediate goals may change as we iterate, we are unlikely to be successful if we don‚Äôt start with a vision of what we are working toward. Shipping that vision in iterations allows us to learn from customers using it and adjust the vision if needed. Iteration for the sake of iteration can lead to inefficiencies and not deliver desired results.
Iteration without a plan can lead to inefficiencies and a subpar customer experience. Before iterating we need to plan. A plan should include:
Time-bound objective: Where we want to be in a year UX: User experience we are working toward Quality: What quality is sufficient quality, inclusive of security Success metric: Usage we want at a specific time Data schema: The data schema we need to measure progress towards project goals GTM plan: How we want to go to market Enablement: When we‚Äôd plan to train and enable the support and field teams Marketing: When we‚Äôd launch marketing (doesn‚Äôt have to be at release) Secure by design: default to the most secure configuration
Time-bound objective: Where we want to be in a year
UX: User experience we are working toward
Quality: What quality is sufficient quality, inclusive of security
Success metric: Usage we want at a specific time
Data schema: The data schema we need to measure progress towards project goals
GTM plan: How we want to go to market
Enablement: When we‚Äôd plan to train and enable the support and field teams
Marketing: When we‚Äôd launch marketing (doesn‚Äôt have to be at release)
Secure by design: default to the most secure configuration
Moving through the release process is not iteration.
The release process can include:
Dogfooding
Dogfooding
Early access
Early access
Incremental release using a feature flag
a feature flag
Development stage progression (such as experiment to beta)
Development stage progression
Release
Announcement
While development stages can be used to indicate release progress, is not itself iteration.
development stages
If we are not aware of interdependencies beyond our team, and we are not collaborating with others across the organization, we risk deliverables that settle into a ‚Äúlocal maximum‚Äù of quality, richness, and efficiency. This localization is largely defined by team structure and organizational boundaries. While an iteration can take place within a single team, that team is responsible for identifying inter-dependencies and proactively communicating and aligning with other teams working on related projects. This helps ensure that iterations are not ‚Äúhalf-baked‚Äù and align with work being done across the entire organization.
Don‚Äôt wait on the small things. When you have something of value like a potential blog post or a small fix, implement it straight away. Right now, everything is fresh in your head and you have the motivation. Inspiration is perishable. Don‚Äôt wait until you have a better version. Don‚Äôt wait until you record a better video. Don‚Äôt wait for an event (like GitLab Summit ). Inventory that isn‚Äôt released is a liability since it has to be managed, becomes outdated, and you miss out on the feedback you would have received had you implemented it straight away. When we don‚Äôt wait we signal intent to others that we have a purpose to resolve something. Note : ‚ÄúDon‚Äôt wait‚Äù should not be used as a justification for not iterating toward the global maximum or at expense of the plan. If there are interdependencies to be considered or the iteration is customer facing, slow down and ensure that we are considering what is best for GitLab and our customers.
GitLab Summit
We always try to set a due date. If needed, we cut scope.
If we have something planned for a specific date, we make that date. For example we shipped over 133 monthly releases . But every one of them doesn‚Äôt contain all the features we planned.
If we planned an announcement for a certain date, we might announce less or indicate what is still uncertain.
But we set a due date because having something out there builds trust and gives us better feedback.
shipped over 133 monthly releases
As discussed in Sid‚Äôs interview on iteration , waiting for approval can slow things down. We can prevent this with automation (such as tests of database migration performance) or clean-up after the fact (refactor a Pajamas if something was added that isn‚Äôt coherent), but we try to ensure that people don‚Äôt need to wait for sign-off. As iteration does not require us to ship to all users on day one, we can clean up after an internal or beta release to mitigate the negative impact to all customers.
Sid‚Äôs interview on iteration
Iteration does not mean being open to all users from day one. If you do a gradual rollout of your change, prefer:
Few users over many users
Internal users (dogfooding) over external users
Environments with fast feedback (SaaS) over slow feedback (self-managed)
Short iterations reduce our cycle time . Merging frequently also prevents merge conflicts.
our cycle time
Small iterations make it easier to work with the wider community. Their work looks more like our work, and our work is also quicker to receive feedback.
We encourage MVCs to be as small as possible. Always look to make the quickest change possible to improve the user‚Äôs outcome. If you validate that the change adds more value than what is there now, then do it. This may be additive (adding something) or subtractive (removing something). No need to wait for something more robust. More information is in the product handbook , but this applies to everything we do in all functions. Specifically for product MVCs, there is additional responsibility to validate with customers that we‚Äôre adding useful functionality without obvious bugs or usability issues.
product handbook
If you need to decide something as a team, make a concrete proposal instead of calling a meeting to get everyone‚Äôs input. Having a proposal will be a much more effective use of everyone‚Äôs time. Every meeting should be a review of a proposal. We should be brainwriting on our own instead of brainstorming out loud . State the underlying problem so that people have enough context to propose reasonable alternatives. The people that receive the proposal should not feel left out and the person making it should not feel bad if a completely different proposal is implemented. Don‚Äôt let your desire to be involved early or to see your solution implemented stand in the way of getting to the best outcome. If you don‚Äôt have a proposal, don‚Äôt let that stop you from highlighting a problem, but please state that you couldn‚Äôt think of a good solution and list any solutions you considered.
brainwriting on our own instead of brainstorming out loud
By making a proposal you also provide better visibility into the work and the context surrounding it.
In this GitLab Unfiltered video , GitLab co-founder Sid Sijbrandij converses about iteration in engineering, leveraging proposals to break work into smaller components.
GitLab Unfiltered video
At GitLab, we rarely mark any content or proposals as drafts. Everything is always in draft and subject to change. When everything is in draft, contributions from team members as well as the wider community are welcomed. By having everything in draft and assuming others have low context , confusion can be reduced as people have shared access to information.
assuming others have low context
As we continue to expand the number of users we have, they will continue to expect stability and reliability. We must optimize for the long term without sacrificing stability along the way. This means that users may be inconvenienced in the short term, but current and future users will enjoy a better product in the end.
Educating users on the longer-term plan helps create a shared understanding of how a small change will incrementally grow into something more. For example, we could share how a dropdown will evolve into a much more nuanced solution in the future. We can take the following steps to articulate our plan:
Open a feedback issue that provides context about the initial MVC ( example ) Ensure the direction page articulates a long-term plan ( example ) Announce the MVC in a release post, link to the feedback issue, and link to the direction page ( example )
Open a feedback issue that provides context about the initial MVC ( example )
example
Ensure the direction page articulates a long-term plan ( example )
example
Announce the MVC in a release post, link to the feedback issue, and link to the direction page ( example )
example
In many organizations, you take a risk when you put forth any work that‚Äôs not perfect, work where you haven‚Äôt spent endless cycles planning for contingencies or counterpoints. Because of this, you‚Äôre incentivized to invest a lot of time and effort into preparing for ‚ÄòWhat if?‚Äô scenarios before any work is presented, even if the release is not customer facing and there is a low level of risk in imperfection.
The downside to that is clear when we are dogfooding: If you do eventually put forth the work, but it needed to be course-corrected a long time ago, you‚Äôve squandered time that you could have spent improving it through iteration.
Having a low level of shame when dogfooding or working internally requires you to combat a natural inclination to conceal work until it‚Äôs perfect, and instead celebrate the small changes.
Cultural differences can bring unique challenges and expectations to iteration. For some, expressions like ‚Äúit doesn‚Äôt have to be perfect‚Ä¶‚Äù can challenge cultural norms. We encourage you to bring your authentic self and seek shared understanding when iterating. Giving feedback and ensuring psychological safety are necessary for every iterative attempt.
Giving feedback
psychological safety
We believe great companies sound negative because they focus on what they can improve, not only on what is working well.
In every conversation, inside and outside the company, we should ask a question: What do you think we can improve?
This doesn‚Äôt mean we don‚Äôt recognize our successes; for example, see our Say Thanks value.
Say Thanks
We are positive about the future of the company. We are S hort Te rm C ritical A nd L ong T erm O ptimistic ( STeCALTO , for short).
First, optimize for speed and results (and be deliberate about how your change affects other processes/functionality); when it is a success, figure out how to scale it. Great examples are in this article by Paul Graham .
this article by Paul Graham
Resist the urge to bundle a series of smaller iterations so team members don‚Äôt see a project as their last (or best) opportunity to contribute. It‚Äôs tempting to create encompassing projects or initiatives that roll many smaller projects up. This incarnation of scope creep drives up cost, encourages fewer risks, and incentivizes perfection (via longer cycle times) over progress. When we resist bundling, we reduce the risk that work will be canceled due to scale or scope. By resisting bundling we also reduce the coordination needed because fewer people or teams may be involved.
create encompassing projects or initiatives
Most decisions are easy to reverse. In these cases, the Directly Responsible Individual should go ahead and make them without approval. Only when you can‚Äôt reverse them should there be a more thorough discussion. By embracing iteration and making two-way door decisions, we are more efficient and achieve more results.
Directly Responsible Individual
embracing iteration
Changing something without shipping it is a revision, not iteration. Only when the change is rolled out to users, whether internal users or a limited customer group , can you learn from feedback. When you‚Äôre changing a proposal based on different opinions, you‚Äôre frequently wasting time; it would be better to roll out a small change quickly and get real world feedback. Never call a revision an iteration because it is almost the opposite.
internal users or a limited customer group
In order to embrace iteration, we should have the attitude that we are trying to achieve as much as possible in a small amount of time; it‚Äôs where we land at the end state of an iteration that counts. The benefit of iteration is to get fast feedback from users. Focus on sharing context at the end of the first iteration rather than a hypothetical future state that requires multiple iterations. By embracing iteration we can increase creativity in incremental components.
When you are submitting a merge request for a code change, or a process change in
the handbook, keep it as small as possible. If you are adding a new page to the
handbook, create the new page with a small amount of initial content, get it merged
quickly via Handbook Usage guidelines , and then add additional sections iteratively with subsequent merge requests.
Similarly, when adding features to GitLab, consider ways to reduce the scope of the feature before creating the merge request to ensure your merge request is as small as possible.
Handbook Usage guidelines
reduce the scope
Rapid iteration can get in the way of results if it‚Äôs not thought out; for example, when adjusting our marketing messaging (where consistency is key), product categories (where we‚Äôve set development plans), organizational structure or product scope alignment (where real human stresses and team stability are involved), sales methodologies (where we‚Äôve trained our teams) and this values page (where
we use the values to guide all GitLab team members). In those instances, we add additional review to the approval
process; not to prohibit, but to be more deliberate in our iteration. The change process is documented in the GitLab Handbook Usage page and takes place via merge request approvals.
results
organizational structure
product scope alignment
GitLab Handbook Usage
Iteration is often counterintuitive and difficult to do. To clarify what an iteration is, it helps to see examples of what is not an iteration. Below are 12 examples of things we‚Äôve seen mistaken as iteration, but don‚Äôt meet our definition of iteration.
Reducing quality, or lowering goal posts Avoiding or reducing documentation Compromising on security Delivering something that‚Äôs not the recommended path or on by default Shipping something of no value An excuse to focus on unimportant items Moving through the release process Revisions you don‚Äôt ship or publish An excuse to impose unrealistically tight timelines An excuse to avoid planning Imposing long hours Expecting others to fix your work
Reducing quality, or lowering goal posts
Avoiding or reducing documentation
Compromising on security
Delivering something that‚Äôs not the recommended path or on by default
Shipping something of no value
An excuse to focus on unimportant items
Moving through the release process
Moving through the release process
Revisions you don‚Äôt ship or publish
An excuse to impose unrealistically tight timelines
An excuse to avoid planning
An excuse to avoid planning
Imposing long hours
Expecting others to fix your work
In this GitLab Unfiltered video , GitLab co-founder Sid Sijbrandij elaborates on each of these 12 things that are not iteration.
GitLab Unfiltered video
Competencies are the Single Source of Truth (SSoT) framework for things we need team members to learn.
We demonstrate iteration when we do the smallest viable and valuable thing, get it out quickly for feedback, and make changes based that feedback.
Competencies
GitLab Job Grade
Knowledge Assessment for Individual Contributors
Knowledge Assessment for People Leaders
Be open about as many things as possible. By making information public, we can reduce the threshold to contribution and make collaboration easier. Use public issue trackers, projects, and repositories when possible. Transparency is not communication. Just because something exists in the handbook or elsewhere doesn‚Äôt mean it can‚Äôt be communicated again or in a more robust fashion to the people who need to understand or acknowledge it. On a personal level, be direct when sharing information, and admit when you‚Äôve made a mistake or were wrong. When something goes wrong, it is a great opportunity to say ‚ÄúWhat‚Äôs the kaizen moment here?‚Äù and find a better way without hurt feelings.
kaizen
Even as a public company , we know that our value of transparency will be key to our success. This value can be hard to follow at times. You might ask yourself: what should be shared, how much to share, whether or not to speak up but definitely take the time to always opt for maximum transparency by adhering to the operating principles below. Often, company values get diluted as they grow, most likely because they do not write anything down. But we will make sure our values scale with the company. As a public company , we declare everyone in the company as an insider, which allows us to remain transparent internally about our numbers, etc. Everything else that can be transparent will continue to be so.
public company
public company
When there are exceptions, material that is not public by default is documented .
not public by default is documented
Everything at GitLab is public by default.
The public process does two things: allows others to benefit from the conversation and acts as a filter. Since there is only a limited amount of time, we prioritize conversations that a wider audience can benefit from.
One example of transparency at GitLab is the public repository of this website that also contains this company handbook . Others include the GitLab CE and GitLab EE issue trackers, as well as marketing and infrastructure . Transparency creates awareness for GitLab, allows us to recruit people that care about our values, gets us more and faster feedback from people outside the company, and makes it easier to collaborate with them. It is also about sharing great software, documentation, examples, lessons,
and processes with the whole community and the world in the spirit of open source, which we believe creates more value than it captures.
public repository of this website
company handbook
GitLab CE
GitLab EE
marketing
infrastructure
In line with our value of transparency and being public by default, all GitLab team member profiles should be public. Public profiles also enable broader collaboration and efficiencies between teams. To do so, please make sure that the checkbox under the Private profile option is unchecked in your profile settings . If you do not feel comfortable with your full name or location on your profile, please change it to what feels appropriate to you as these are displayed even on private profiles.
profiles
Private profile
in your profile settings
Because we are public by default and have the SAFE framework we don‚Äôt need to make cases for why things should be transparent. If something is unSAFE and needs to remain not public it can be.
SAFE framework
not public
We make information public by default because transparency is one of our values .
However it is most important to focus on results .
Therefore, a category of information is public unless there is a reason for it not to be. If something is not public, there should be a reference in the handbook that states a confidential decision was taken with a link to our Not Public guidelines, unless GitLab Legal and Corporate Affairs believes it carries undue risk. We document what is not public by default on our communication page.
transparency is one of our values
most important to focus on results
not public by default
If you believe something shouldn‚Äôt be public that currently is (or vice versa), then make a merge request to the relevant page(s) suggesting the change so that you can collaborate with others and discuss with the DRI . When content contains information which is not public it is recommended to remove the specific sections which are not public, put them on their own page in the internal handbook, and then link out to that with a ‚Äúnot public/internal only‚Äù note. Always share publicly what we can.
make a merge request
DRI
not public
When information is not public, it may also be treated as limited access, only shared with certain GitLab roles, teams, or team members due to privacy considerations, contractual obligation, or other reasons that the author or DRI can specify.
Certain kinds of information default to limited access, including details about team members or customers who did not give permission to share the information.
Most companies become non-transparent over time because they don‚Äôt accept any
mistakes. Instead, we should always err on the side of transparency when there
is a choice to be made between caution or inaction, and transparency. If we make
a mistake, we now know what the limits of transparency are for the company and
we should document this . The only exception to this rule would be in the case when there are legal concerns.
document this
Because some information is not public the public information can be lacking some context. We should be cognizant of that.
not public
Being direct is about being transparent with each other. We try to channel our inner Ben Horowitz by being both straightforward and kind .
Feedback is always about your work and not your person. That doesn‚Äôt mean it will be easy to give or receive it.
Ben Horowitz
both straightforward and kind
If you state one thing, and then change course and support a different direction, point, or outcome, articulate this. It is OK to have your position changed by new data. Articulating that an earlier stance is not your current stance provides clarity to others and encourages data-driven decision making.
Be transparent to the right people (up) at the right time (when still actionable). If you make a mistake, don‚Äôt worry; correct it and proactively let the affected party, your team, and the CEO know what happened, how you corrected it, and how‚Äîif needed‚Äîyou changed the process to prevent future mistakes.
We practice transparency even when hiding the facts would be easier. For example, many companies do not give you the real reason why they declined your application because it increases the chance of legal action. We want to only reject people for the right reasons and we want to give them the opportunity to grow by getting this feedback. Therefore, we‚Äôll accept the increased risk of holding ourselves to a high standard of making decisions and do the right thing by telling them what we thought. Other examples are being transparent about security incidents and participating in and contributing to Live Broadcasts.
security incidents
Transparency has costs (distraction, mis-interpretation, etc.) but also great benefits (productivity, hiring, retention, brand awareness, etc). We should carefully weigh the tradeoff between costs and benefits, to prevent a knee-jerk reaction to reduce transparency when it has costs.
By having most company communications and work artifacts be public to the Internet, we have one single source of truth for all GitLab team members, users, customers, and other community members. We don‚Äôt need separate artifacts with different permissions for different people.
Our transparency value means more than just making information accessible to all. In order to improve performance it‚Äôs important that we not only ensure information is accessible, but also ensure it flows to the correct places and is findable by those who need it. Focusing on information flow will ensure you, for example, utilize multi-modal communication , or that you keep your stakeholders informed of changes by posting links to MRs in Slack.
improve performance
findable
multi-modal communication
stakeholders informed of changes
Transparent changes have the reasons for the change laid out clearly along with the change itself. This leads to fewer questions later on because people already have some understanding. A change with no public explanation can lead to a lot of extra rounds of questioning, which is less efficient.
This also helps with institutional memory: a year from now when you want to know why a decision was made, or not, the issue or MR that has the decision also shares why the decision was made.
This is related to Chesterton‚Äôs fence - it‚Äôs much easier to suggest removing or changing something if you know why it exists in the first place.
Chesterton‚Äôs fence
If you use generalized terms such as ‚Äúindustry standard‚Äù or ‚Äúbest practices,‚Äù be sure to give context, as without context they can be seen as potentially vague or opaque.
Similarly, merely stating a single value isn‚Äôt a great explanation for why we are making a particular decision. Many things could be considered ‚Äúiteration‚Äù or ‚Äúefficiency‚Äù that don‚Äôt match our definition of those values. Try to link to an operating principle of the value or provide more context, instead of just saying a single value‚Äôs name.
Saying why and not just what enables discussion around topics that may impact more than one value; for instance, when weighing the efficiency of boring solutions with the focus on customer results . When decisions align with all of our values, they are easy to discuss and decide. When there are multiple values involved, using our values hierarchy and directly discussing the tradeoffs is easier with more context.
efficiency of boring solutions
customer results
values hierarchy
directly
Articulating why also helps people understand how something changed when you articulate that you changed your mind .
articulate that you changed your mind
Saying why does not mean justifying a decision against all other suggestions.
The DRI is responsible for their decision.
The DRI is not responsible for convincing other people, but they should be able to articulate their reasoning for the change.
DRI
When a GitLab Team Member comes across an ask or material (MR, handbook, etc.) that does not provide a ‚Äúwhy‚Äù with sufficient context, the Team Member is responsible for getting the why and, if needed, working with the DRI to ensure that it is adequately documented and communicated to give context to other team members.  In the absence of a why, team members may speculate the why. This is something that can lead to disruption and inefficiency.
Enable everybody involved to come to the same conclusion as you. This not only involves reasoning , but also providing, for example: raw data and not just plots; scripts to automate tasks and not just the work they have done; and documenting steps while analyzing a problem. Do your best to make the line of thinking transparent to others, even if they may disagree .
reasoning
if they may disagree
Competencies are the Single Source of Truth (SSoT) framework for things we need team members to learn.
We demonstrate transparency when we are open with as many things as possible reducing the threshold to contribution and make collaboration easier.
Competencies
GitLab Job Grade
Knowledge Assessment for Individual Contributors
Knowledge Assessment for People Leaders
Our values provide guidelines on how to behave and are written to be actionable.
They help us describe the type of behavior that we expect from GitLab team members.
They help us to know how to behave in the organization and what to expect from others.
Values provide a framework for distributed decision making, detailed in GitLab‚Äôs TeamOps management philosophy. They allow individuals to determine what to do without asking their manager and they allow teams to make consistent decisions. When teams across the organization reference the same values in their decision making, there is consistency in how decisions are made. This ensures that our culture remains driven by our values.
TeamOps
our culture
Lastly, values create a conscious culture that is designed to help you prosper and experience exceptional personal growth through work.
conscious culture
Our values also help us to prevent the five dysfunctions :
five dysfunctions
Fear of conflict Seeking artificial harmony over constructive passionate debate => prevented by transparency, specifically directness and collaboration, specifically short toes Absence of trust Unwilling to be vulnerable within the group => prevented by collaboration, specifically kindness Avoidance of accountability Ducking the responsibility to call peers on counterproductive behavior which sets low standards => prevented by results, iteration, and transparency Inattention to results Focusing on personal success, status, and ego before team success => prevented by results Lack of commitment Feigning buy-in for group decisions creates ambiguity throughout the organization => prevented by transparency, specifically directness
Fear of conflict Seeking artificial harmony over constructive passionate debate => prevented by transparency, specifically directness and collaboration, specifically short toes
directness
short toes
Absence of trust Unwilling to be vulnerable within the group => prevented by collaboration, specifically kindness
kindness
Avoidance of accountability Ducking the responsibility to call peers on counterproductive behavior which sets low standards => prevented by results, iteration, and transparency
transparency
Inattention to results Focusing on personal success, status, and ego before team success => prevented by results
results
Lack of commitment Feigning buy-in for group decisions creates ambiguity throughout the organization => prevented by transparency, specifically directness
directness
Some dysfunctions are not addressed directly by our values; for example, trust is not one of our values.
Similar to happiness, trust is something that is an outcome, not something you can strive for directly.
We hope that the way we work and our values will instill trust, instead of mandating it from people; trust is earned, not given.
Operating principles are behaviors that empower GitLab team members to definitively live out a given value.
They clarify what a given core value means and looks like at GitLab .
Understanding this distinction is critical to thriving at GitLab,
particularly for newer team members who may be familiar with a prior organization‚Äôs interpretation of iteration or collaboration (as examples).
newer team members
Values are not just things we do, but things that actively drive good behavior.  When we remove them it doesn‚Äôt mean we stopped believing in it, just that it wasn‚Äôt actively helping to drive behavior. If we don‚Äôt prune our operating principles, then we will be like every other company: things that make sense but are not leading to a better culture.
To remove an operating principle from the Handbook page, submit your change through a merge request and explain your reasons in the merge request description. The GitLab Value Handbook Page owner must approve and merge the request.
To remove an operating principle from the Handbook page, submit your change through a merge request and explain your reasons in the merge request description.
The GitLab Value Handbook Page owner must approve and merge the request.
Most companies have a list of values. In companies without strong values, folks often use generalizations when they refer to values. For example, ‚Äúnot a value add‚Äù or ‚Äúscored well on values during our interview.‚Äù In companies with strong values, folks name the specific, relevant value as it applies to a given topic or situation. Values are only powerful when they are individually understood and applied by team members.
For certain business decisions or projects (such as compensation and end-point management ), GitLab team members may have a lot of opinions and interest,
and they want to provide their feedback and comments.
On the other hand,  it might be challenging for the project DRI to digest and respond to all these inputs.
What should you do in this scenario?
compensation
end-point management
Everyone can contribute at GitLab.
We encourage team members to share feedback and leave comments on issues.
Leaving feedback and comments shows that team members care about a topic and about GitLab as a company.
These perspectives may also uncover potential risks and problems in the project.
There shouldn‚Äôt be a ‚ÄúDon‚Äôt they have their job to do?‚Äù type of response.
Furthermore, we shouldn‚Äôt judge team members who are perceived as being the ‚Äúsqueaky wheel.‚Äù
At GitLab, we measure impact, not activity .
As long as a team member is producing required results, they are empowered to decide how to spend their time.
‚ÄúDon‚Äôt they have their job to do?‚Äù
measure impact, not activity
On the other hand, as GitLab grows in size, we need to make decisions and the decisions may not be agreed to by everyone.
If a decision or project is sensitive or controversial, and receives large amounts of feedback, it can be challenging for the project DRI to handle.
In these cases, it‚Äôs best to have time-boxed feedback built into timelines.
In a hypothetical example where a DRI needs to decide between red and gold potatoes for a stew, they would create an issue with the following sentiment:
We‚Äôre deciding between red potatoes and gold potatoes to go into the stew. We have to decide by Tuesday 2020-07-14 so that we can get our order to the grocery store on Wednesday 2020-07-15. We‚Äôll be collecting input and feedback until that point. Jane is the DRI and will make the decision on 2020-07-14 with all the information we have at that point. Here is the framework we‚Äôre using for the decision:
are there allergies to consider?
cost per pound
team member preferences
Once the decision is made, it will be what is going into the stew.
This method has shown itself to be effective at soliciting productive feedback that doesn‚Äôt derail a timeline while ensuring team members feel heard.
has shown itself to be effective
Companies are encouraged to copy and implement GitLab‚Äôs values. They are Creative Commons and can be copied verbatim.
We make our values public for the same reasons we make our OKRs (Objectives and Key Results) and strategy public. There is great power and efficiency in teams who share company values. Concealing values until after someone is hired into an organization is not a wise strategy.
reasons
OKRs
strategy
Not everyone will see our values and feel aligned with them, and that‚Äôs OK. By making values public, it shows respect for the time of job seekers who conduct due diligence on prospective employers. When people who are aligned with GitLab‚Äôs values apply for an open vacancy , this allows our hiring teams to more efficiently move candidates through the interview process .
open vacancy
interview process
In a GitLab Unfiltered interview on values , GitLab co-founder Sid Sijbrandij offers the following context.
GitLab Unfiltered interview on values
Companies may ask you to write a blank check. They‚Äôll say, ‚ÄòCome join our organization, and when you‚Äôre here, you need to subscribe to our values, our way of working, and our strategy. It‚Äôs very essential, and it‚Äôs part of our identity!‚Äô
But these companies don‚Äôt give you the opportunity up front to evaluate it. It doesn‚Äôt make any sense to me. If it‚Äôs so important that people share your values, have them out there.
Occasionally, values can contradict each other. It‚Äôs useful to keep in mind this hierarchy to resolve confusion about what to do in a specific circumstance, while remaining consistent with our core values.
Think of the hierarchy as a weighting system. Values higher in the hierarchy do not automatically override values lower in the hierarchy. Here are some examples:
If a change impacts Transparency positively but impacts Efficiency negatively in roughly the same amount, we would move ahead since Transparency is higher in the hierarchy than Efficiency.
If a change has a massive positive impact on Diversity but negatively impacts Iteration, we would move ahead even though Diversity is lower in the hierarchy than Iteration because the overall impact is more positive than negative.
In a GitLab Unfiltered interview on values , GitLab co-founder Sid Sijbrandij offers the following context.
GitLab Unfiltered interview on values
It‚Äôs an attempt to relieve at least some of the tension. It‚Äôs not absolute. If you think of values as binary, that‚Äôs not going to work. There will always be interpretation, and there‚Äôs always magnitude to consider.
We made a hierarchy so that it‚Äôs clear, in the end, the result matters most. For instance, we‚Äôre not going to be transparent for the sake of being transparent. We‚Äôre not radical in our transparency. We do it because we think it will lead to better outcomes.
Those hierarchies are really important. They won‚Äôt preempt every debate, but it helps.
Our values are updated frequently and as needed. Everyone is welcome to make a suggestion to improve them. To update: make a merge request and assign it to the CEO. If you‚Äôre a team member or in the core team please post a link to the MR in the #values Slack channel . If you‚Äôre not part of those groups, please send a direct X/Twitter message to @sytses .
team member
core team
#values Slack channel
@sytses
How do we reinfore our values
Whatever behavior you reward will become your values. We reinforce our values by:
Criteria we use for promotions and communicate to the whole company on announcement. What we select for during hiring . What we emphasize during on-boarding . Criteria we use for our annual compensation review . What we refer to when making decisions . The example the E-group sets for the company since a fish rots from the head down . What we expect from all team members, as ambassadors for our values . Keeping them up to date with a stream of commits that add details . Behavior we give each other 360 feedback on. Behavior we compliment . Criteria we use for discretionary bonuses . What we include in our offer letters Criteria we use to manage underperformance . What we do when we let people go . Giving value awards during GitLab Summit . Providing GitLab team members and qualified individuals transparency into all aspects of the company through the CEO Shadow Program to enable them to better engage and collaborate cross-functionally. Linking the takeaways of courses to our values, like we did for the Crucial Conversations training . The default settings of the software we use (for example: Speedy meetings , document sharing , agendas, etc.) Reinforcing our values with features in GitLab, for example the Iterations feature . Applying one of our values virtual backgrounds in video calls. Our GitLab Song Book , the song lyrics often mention GitLab values. Regularly conduct a values exercise at the e-group offsite .
promotions
What we select for during hiring .
What we select for during hiring .
hiring
What we emphasize during on-boarding .
What we emphasize during on-boarding .
on-boarding
Criteria we use for our annual compensation review .
Criteria we use for our annual compensation review .
annual compensation review
What we refer to when making decisions .
What we refer to when making decisions .
making decisions
The example the E-group sets for the company since a fish rots from the head down .
The example the E-group sets for the company since a fish rots from the head down .
a fish rots from the head down
What we expect from all team members, as ambassadors for our values .
ambassadors for our values
Keeping them up to date with a stream of commits that add details .
Keeping them up to date with a stream of commits that add details .
up to date
stream of commits that add details
Behavior we give each other 360 feedback on.
Behavior we give each other 360 feedback on.
360 feedback
Behavior we compliment .
Behavior we compliment .
compliment
Criteria we use for discretionary bonuses .
Criteria we use for discretionary bonuses .
discretionary bonuses
What we include in our offer letters
What we include in our offer letters
offer letters
Criteria we use to manage underperformance .
Criteria we use to manage underperformance .
manage underperformance
What we do when we let people go .
What we do when we let people go .
let people go
Giving value awards during GitLab Summit .
Giving value awards during GitLab Summit .
GitLab Summit
Providing GitLab team members and qualified individuals transparency into all aspects of the company through the CEO Shadow Program to enable them to better engage and collaborate cross-functionally.
Providing GitLab team members and qualified individuals transparency into all aspects of the company through the CEO Shadow Program to enable them to better engage and collaborate cross-functionally.
qualified individuals
CEO Shadow Program
Linking the takeaways of courses to our values, like we did for the Crucial Conversations training .
Linking the takeaways of courses to our values, like we did for the Crucial Conversations training .
the Crucial Conversations training
The default settings of the software we use (for example: Speedy meetings , document sharing , agendas, etc.)
The default settings of the software we use (for example: Speedy meetings , document sharing , agendas, etc.)
Speedy meetings
document sharing
Reinforcing our values with features in GitLab, for example the Iterations feature .
Reinforcing our values with features in GitLab, for example the Iterations feature .
Iterations feature
Applying one of our values virtual backgrounds in video calls.
Applying one of our values virtual backgrounds in video calls.
values virtual backgrounds
Our GitLab Song Book , the song lyrics often mention GitLab values.
Our GitLab Song Book , the song lyrics often mention GitLab values.
Song Book
Regularly conduct a values exercise at the e-group offsite .
Regularly conduct a values exercise at the e-group offsite .
e-group offsite
The most important moments to reinforce our values are decisions which affect individual team members most: hiring, promotions, and bonuses, which is why every promotion document at GitLab is shared with the entire company and uses the values as its core structure.
In negative feedback, we should be specific about what the problem is. For example, saying someone is ‚Äú not living the values ‚Äù isn‚Äôt helpful.
not living the values
Your values are what you hire for, what you praise people for, and what you promote them for. By definition, what you do in those instances are your values. It‚Äôs not what you say they are. Values should be explicitly part of our hiring process, our job profiles, and our review process .
hiring
review process
When we give bonuses and promotions , they are always linked to values. That‚Äôs the crucial thing. If you reinforce them there, that‚Äôs the most powerful thing you can do. ‚Äî Sid Sijbrandij, GitLab co-founder
bonuses
promotions
Value erosion can occur when indifference and apathy are tolerated. It can also occur when individuals justify undesired behaviors by interpreting values as ‚Äúme values‚Äù rather than ‚Äúcompany values.‚Äù For example, a team member may speak to the importance of personal efficiency in order to justify not collaborating professionally with peers. This is not what we expect from team members in terms of efficiency and collaboration.
If you feel that values are not being lived out in a given scenario, speak up and ask for context in a respectful manner. Navigating value conflicts starts with assuming positive intent from other team members. Offer links to relevant values and/or operating principles when discussing the issue. If there is confusion or disagreement about the interpretation of a value, please surface the discussion in GitLab‚Äôs #values Slack channel (for GitLab team members) or @-mentioning @gitlab on X/Twitter (for those who do not work at GitLab).
assuming positive intent
#values Slack channel
@gitlab
In a GitLab Unfiltered interview on values , GitLab co-founder Sid Sijbrandij offers the following context.
GitLab Unfiltered interview on values
Almost every time we face a hard decision at GitLab, it‚Äôs because values are in conflict. It‚Äôs not binary logic. It requires conversation, and sometimes there is no obvious answer. We can only achieve resolution by respectfully talking with each other and trusting the DRI to make the ultimate decision.
From our values we excluded some behaviors that are obvious; we call them our permission to play behavior:
Be truthful and honest. Be dependable and reliable. Try to keep promises. If you might not keep a promise, proactively communicate as soon as you suspect it. Be deserving of the trust of our team members, users and customers. Be committed to the success of the whole organization. Act in the best interest of the company, our team members, our customers, users, and investors. Make the best decisions for GitLab. Act in accordance with the law. Don‚Äôt show favoritism as it breeds resentment, destroys employee morale, and creates disincentives for good performance . Seek out ways to be fair to everyone.
Be truthful and honest.
Be dependable and reliable.
Try to keep promises. If you might not keep a promise, proactively communicate as soon as you suspect it.
Be deserving of the trust of our team members, users and customers.
Be committed to the success of the whole organization.
Act in the best interest of the company, our team members, our customers, users, and investors.
Make the best decisions for GitLab.
Act in accordance with the law.
Don‚Äôt show favoritism as it breeds resentment, destroys employee morale, and creates disincentives for good performance . Seek out ways to be fair to everyone.
it breeds resentment, destroys employee morale, and creates disincentives for good performance
We don‚Äôt want people to play politics at GitLab.
An example of politics is people discussing a proposal and being overly focused on whose proposal it is.
This is a manifestation of the Belief Bias , where we judge an argument‚Äôs strength not by how strongly it supports the conclusion but by how strongly we support the conclusion.
Proposals should be weighed on their merits and not on who proposed them.
Another example is people being promoted based on others liking them or having a lot of alliances. We want people to be promoted based on their results. We value collaboration, but that‚Äôs different from being promoted just because people like you.
Belief Bias
Below are some attributes of political and non-political work environments. GitLab plans to maintain a non-political one.
short toes
‚Äústeel man‚Äù position
they do it in an effective way
Values make and clarify choices. A well-chosen value has a defensible opposite. Apple, for example, values secrecy over transparency and product perfection over iteration. They are successful building around our counter values ‚Äî although the result is a very different company.
All-remote isn‚Äôt a value. It is something we do because it helps to practice our values of transparency, efficiency, results, and diversity, inclusion & belonging.
All-remote
practice our values
During every GitLab 101 session with new hires we discuss our values. We document the questions and answers to Frequently Asked Questions about the GitLab Culture .
GitLab 101 session with new hires
Frequently Asked Questions about the GitLab Culture
New team members should read GitLab‚Äôs guide to starting a new remote role , and reference interviews centered on values within the GitLab Unfiltered YouTube channel .
GitLab‚Äôs guide to starting a new remote role

GitLab Unfiltered YouTube channel
Our mission is to enable everyone to contribute to and co-create the software that powers our world . This mission guides our path, and we live our values along that path.
mission
We have a page which documents our Mitigating Concerns . Many of our values help to mitigate some of these concerns.
Mitigating Concerns
Anyone with a GitLab account can access the GitLab Values Quiz. To participate in the quiz, you will need to complete this learning course in Level Up. If you have questions, please reach out to our L&D team at learning@gitlab.com .


# GitLab Direction
The following page may contain information related to upcoming products, features and functionality. It is important to note that the information presented is for informational purposes only, so please do not rely on the information for purchasing or planning purposes. Just like with all projects, the items mentioned on the page are subject to change or delay, and the development, release, and timing of any products, features or functionality remain at the sole discretion of GitLab Inc.
GitLab competes in a large market space, with a CSM estimated at ~$18B in 2024. GitLab has recently surpassed the $150M ARR milestone, with unusually high revenue growth and retention rates. GitLab is uniquely positioned in the market with a vision to offer a single application for the entire DevSecOps lifecycle. GitLab competes across numerous market segments and aims to deliver value in 80+ market categories. GitLab√¢¬Ä¬ôs product vision is uniquely ambitious, as we were the first DevSecOps player to take a single application approach. From idea to production, GitLab helps teams improve cycle time from weeks to minutes, reduce development process costs, and enable a faster time to market while increasing developer productivity. With software √¢¬Ä¬úeating the world,√¢¬Ä¬ù this is widely viewed as a mission-critical value proposition for customers. We also have a number of tailwinds in the form of cloud adoption, Kubernetes adoption, and DevSecOps tool consolidation, which are helping fuel our rapid growth. Finally, GitLab has an open source community and distribution model, which has exposed the value of GitLab to millions of developers and has sped up the maturation of our product through more than 200 monthly improvements to the GitLab codebase from our users.
Every year at GitLab, we choose some specific areas of emphasis to help guide the teams on the areas of our product that we want to accentuate. This section is used to highlight that emphasis. It is not a comprehensive list of everything we plan to do this year. Direction for each stage and category can be found at the respective direction pages. We are not asking the teams to deviate from their core mission.
Many teams will see themselves contributing to these areas of emphasis directly. The other teams will continue to execute on their mission - that is also important.
The themes are to help facilitate cross-team collaboration when invariably teams working on the 1-year themes may need to collaborate with others. Our guidance is: if any team approaches you to prioritize something that is thematic for this year, consider that as a higher priority than you would normally - as it is in service of the broader product-wide goal that we, as a company, have deemed important to accomplish this year.
See Product Investment (internal handbook page) for how we allocate our R&D investment across our product hierarchy.
For FY26, the four key R&D investment themes we are focused on are:
We will focus primarily on core DevSecOps platform capabilities across SCM, CI, CD, security, compliance, and enterprise agile planning with the goal to achieve a leadership position or extend our existing leadership position. We will drive Premium and Ultimate value by helping propel free-to-paid conversion through product-led growth / feature discovery moments.
We will introduce new as well as improve existing GitLab Duo AI capabilities within our core DevSecOps platform capabilities. We will also bring ModelOps features to general availability, including a focus on enabling customers to work with native data science workloads within GitLab.
We will focus on deepening the types, and quality of metrics, as well as pulling metrics from third party integrations, with the goal of making GitLab the central component to understanding SDLC insights. We will also provide reporting of feature usage enabling customers to understand what features and capabilities are being used by their teams as well as what usage is connected to Premium and Ultimate tiers, or are features and capabilities included in add-ons.
We will focus on addressing use case adoption issues as well as improving user experience within onboarding to improve our customer's time-to-value for core DevSecOps platform capabilities. We will improve customer experience improve ease-of-use for SMB/commercial customers with license management and self-service workflows. Based upon and informed by the pricing research completed in FY25, we will also implement an updated pricing strategy.
For FY25, the four key R&D investment themes we are focused on are:
AI as part of software development has continued to mature and has become the number one topic in our customer discussions. To meet our customers√¢¬Ä¬ô needs and the evolving market landscape, we will take a three pronged approach to AI (GitLab Duo, ModelOps, AI agents) as part of our DevSecOps platform providing us differentiation in the market.
CI and CD are critical to the success of Premium, while security and governance drives value in Ultimate. We will increase our focus on adoption of these areas - ensuring that customers realize the value of the capabilities they have paid for. This will continue to reduce churn, drive free-to-paid conversion, and increase up-tiering from Premium to Ultimate.
Toolchain consolidation continues to come up with customers as well as in our annual DevSecOps survey. We will capitalize on our position as the enterprise DevSecOps platform by continuing to expand our planning capabilities, continuing to mature our metrics and reporting, and bring new SCM capabilities to general availability.
GitLab.com and GitLab Dedicated continue to grow in popularity as more organizations need to undergo digital transformations however do not want the overhead of self-hosting their DevSecOps platform. We expect this trend to continue in FY25 and will invest in our SaaS deployments to ensure they meet our customers√¢¬Ä¬ô expectations.
DevSecOps is a broad space with a lot of complexity. To manage this within GitLab,
we break down the DevSecOps lifecycle
into a few different sections, each with its own direction page you can review.
In addition to addressing the DevSecOps lifecycle internally through the above sections, contributions from the community also help increase our rate of innovation, which helps mature the stages of our DevSecOps platform. These community contributions are an important part our company mission and strategy.
Our issue tracker contains requests made for features and changes to GitLab. Contributing is the best way to
get a feature you want included as we continually merge code to be released in the next version. Please see our Contribute to GitLab page for more details such as guides to get started contributing, areas looking for contributions, and contribution
acceptance criteria.
Personas are the people we design for. Developers, security professionals, and operations professionals are currently the primary personas we focus on, and we tailor our user experience to their needs. We want GitLab to be the main interface for people in these roles, so they can show up at work, start their day, and load up GitLab. And that√¢¬Ä¬ôs already happening.
But there are a lot of other roles involved with the development and delivery of software. That is the ultimate GitLab goal - where everyone involved with software development and delivery uses a single application so they are on the same page with the rest of their team. We are rapidly expanding our user experience for Designers, Compliance Managers, Product Managers, and Release Managers. We√¢¬Ä¬ôll also be expanding to the business side, with Executive visibility and reporting. While we√¢¬Ä¬ôre still calling it DevSecOps, we√¢¬Ä¬ôre really expanding the definition of DevSecOps and delivering it all as a single application.
GitLab is not immune to disruption. In some ways, it is a sign of success that GitLab is now at a scale where we have to think about low-end disruption. Arguably, a few years ago, GitLab was a low-end disruptor.
Clayton Christensen defines low-end-disruption as follows:
Low-end disruption refers to businesses that come in at the bottom of the market and serve customers in a way that is "good enough." These are generally the lower profit markets for the incumbent and thus, when these new businesses enter, the incumbents move further "upstream." In other words, they put their focus on where the greater profit margins are.
Our perspective is that low-end disruption is an additional and critical sensing mechanism. This is especially true for the DevSecOps market. We look at the following attributes to figure out if a low-end disruption has anything close to potential product-market resonance. This list is an adaptation of the Product Zeitgeist Fit.
A reason low-end disruptors are able to enter the market is that the feature-absorption by users is lower than the feature-velocity of the established vendor. To address this we are focused on a working-by-default configuration principle.
As we add new categories and stages to GitLab, some areas of the product will be deeper and more mature than others. We publish a
list of the categories, what we think their maturity levels are, and our plans to improve on our categories page.
We strive to be the best product in the market and to be complete. As the market, customer needs, competitive landscape, and technology change, we should expect our maturities to also change, including changing to a lower maturity rating. By embracing a focus on improvement and low level of shame, we encourage moving a maturity down. This is a strong indicator that we are realists about our product with an eye on achieving the best results for our customers.
We try to prevent maintaining functionality that is language or platform
specific, because they slow down our ability to get results. Examples of how we
handle it instead are:
Outside our scope are Kubernetes and everything it depends on:
During a presentation of Kubernetes, Brendan Burns talks about the four Ops layers
at the 2:00 mark:
GitLab helps you mainly with application ops. And where needed, we also allow you
to monitor clusters and link them to application environments. But we intend to
use vanilla Kubernetes, instead of something specific to GitLab.
Also outside our scope are products that are not specific to developing,
securing, or operating applications and digital products.
In scope are things that are not mainly for SaaS applications:
We expect GitLab to continue to grow, and we have several ideas for possible future stages
To make sure our goals are clearly defined and aligned throughout the
organization, we make use of OKRs (Objectives and Key Results). Our quarterly Objectives and Key Results
are publicly viewable.
At GitLab, we strive to be ambitious,
maintain a strong sense of urgency, and set aspirational targets with every
release. The direction items we highlight in our kickoff
are a reflection of this ambitious planning. When it comes to execution, we aim
for
velocity over predictability.
This way, we optimize our planning time to focus on the top of the queue and
deliver things fast. We schedule 100% of what we can accomplish based on past Development Department merge request rate
and availability factors (vacation, contribute, etc.).
See our product handbook on how we prioritize.
On our releases page, you can find an overview of the most
important features of recent releases and links to the blog posts for each
release.
GitLab releases a new version every single month. You can find the
major planned features for upcoming releases on our upcoming releases page or see the upcoming features for paid tiers.
Note that we often move things around, do things that are not listed, and cancel
things that are listed.
With Gitlab 15.4, Suggested Reviewers was released as our first customer-facing ML/AI technology in production features. We have additional ambitions in the near future for several types of problems. This is the focus of our new ModelOps stage.
GitLab consistently strives to deliver a cohesive experience that enables workflows that span the DevSecOps loop. We have a number of existing capabilities and planned improvements that do just that:
- You are here:
- GitLab Direction
- 3-year strategy 
Situation
Strategic challenges
Product Strategy
- Situation
- Strategic challenges
- Product Strategy
- Fiscal year product investment themes 
FY26 
Key Principles Driving Themes
R&D Investment Themes 
Win with DevSecOps platform completeness
Differentiate with AI across the SDLC
Lead with SDLC insights and reporting
Elevate customer-centricity to customer obsession
FY25 
Key Principles Driving Themes
R&D Investment Themes 
Enable AI/ML Efficiencies Across DevSecOps
Drive Use Case Adoption to Fully Realize Value
Differentiate on DevSecOps Platform
Strengthen Our SaaS Deployments & Capabilities
DevSecOps stages 
Your contributions
Personas
Mitigating low-end disruption
Maturity
Scope
Quarterly Objectives and Key Results (OKRs)
How we plan releases
Previous releases
Upcoming releases
ML/AI at GitLab
Cross-Stage efforts 
Footnotes
- FY26 
Key Principles Driving Themes
R&D Investment Themes 
Win with DevSecOps platform completeness
Differentiate with AI across the SDLC
Lead with SDLC insights and reporting
Elevate customer-centricity to customer obsession
- Key Principles Driving Themes
- R&D Investment Themes 
Win with DevSecOps platform completeness
Differentiate with AI across the SDLC
Lead with SDLC insights and reporting
Elevate customer-centricity to customer obsession
- Win with DevSecOps platform completeness
- Differentiate with AI across the SDLC
- Lead with SDLC insights and reporting
- Elevate customer-centricity to customer obsession
- FY25 
Key Principles Driving Themes
R&D Investment Themes 
Enable AI/ML Efficiencies Across DevSecOps
Drive Use Case Adoption to Fully Realize Value
Differentiate on DevSecOps Platform
Strengthen Our SaaS Deployments & Capabilities
- Key Principles Driving Themes
- R&D Investment Themes 
Enable AI/ML Efficiencies Across DevSecOps
Drive Use Case Adoption to Fully Realize Value
Differentiate on DevSecOps Platform
Strengthen Our SaaS Deployments & Capabilities
- Enable AI/ML Efficiencies Across DevSecOps
- Drive Use Case Adoption to Fully Realize Value
- Differentiate on DevSecOps Platform
- Strengthen Our SaaS Deployments & Capabilities
- DevSecOps stages 
Your contributions
- Your contributions
- Personas
- Mitigating low-end disruption
- Maturity
- Scope
- Quarterly Objectives and Key Results (OKRs)
- How we plan releases
- Previous releases
- Upcoming releases
- ML/AI at GitLab
- Cross-Stage efforts 
Footnotes
- Footnotes
- Situation
- Strategic challenges
- Product Strategy
- FY26 
Key Principles Driving Themes
R&D Investment Themes 
Win with DevSecOps platform completeness
Differentiate with AI across the SDLC
Lead with SDLC insights and reporting
Elevate customer-centricity to customer obsession
- Key Principles Driving Themes
- R&D Investment Themes 
Win with DevSecOps platform completeness
Differentiate with AI across the SDLC
Lead with SDLC insights and reporting
Elevate customer-centricity to customer obsession
- Win with DevSecOps platform completeness
- Differentiate with AI across the SDLC
- Lead with SDLC insights and reporting
- Elevate customer-centricity to customer obsession
- FY25 
Key Principles Driving Themes
R&D Investment Themes 
Enable AI/ML Efficiencies Across DevSecOps
Drive Use Case Adoption to Fully Realize Value
Differentiate on DevSecOps Platform
Strengthen Our SaaS Deployments & Capabilities
- Key Principles Driving Themes
- R&D Investment Themes 
Enable AI/ML Efficiencies Across DevSecOps
Drive Use Case Adoption to Fully Realize Value
Differentiate on DevSecOps Platform
Strengthen Our SaaS Deployments & Capabilities
- Enable AI/ML Efficiencies Across DevSecOps
- Drive Use Case Adoption to Fully Realize Value
- Differentiate on DevSecOps Platform
- Strengthen Our SaaS Deployments & Capabilities
- DevSecOps stages 
Your contributions
- Your contributions
- Personas
- Mitigating low-end disruption
- Maturity
- Scope
- Quarterly Objectives and Key Results (OKRs)
- How we plan releases
- Previous releases
- Upcoming releases
- ML/AI at GitLab
- Cross-Stage efforts 
Footnotes
- Footnotes
- Key Principles Driving Themes
- R&D Investment Themes 
Win with DevSecOps platform completeness
Differentiate with AI across the SDLC
Lead with SDLC insights and reporting
Elevate customer-centricity to customer obsession
- Win with DevSecOps platform completeness
- Differentiate with AI across the SDLC
- Lead with SDLC insights and reporting
- Elevate customer-centricity to customer obsession
- Win with DevSecOps platform completeness
- Differentiate with AI across the SDLC
- Lead with SDLC insights and reporting
- Elevate customer-centricity to customer obsession
- Key Principles Driving Themes
- R&D Investment Themes 
Enable AI/ML Efficiencies Across DevSecOps
Drive Use Case Adoption to Fully Realize Value
Differentiate on DevSecOps Platform
Strengthen Our SaaS Deployments & Capabilities
- Enable AI/ML Efficiencies Across DevSecOps
- Drive Use Case Adoption to Fully Realize Value
- Differentiate on DevSecOps Platform
- Strengthen Our SaaS Deployments & Capabilities
- Enable AI/ML Efficiencies Across DevSecOps
- Drive Use Case Adoption to Fully Realize Value
- Differentiate on DevSecOps Platform
- Strengthen Our SaaS Deployments & Capabilities
- Your contributions
- Footnotes
- Tension between Breadth and Depth: Our ambitious single-application product vision means we need to build out feature function value across a very large surface area. With so much to deliver in a single application, it is a big UX challenge to keep the experience simple, consistent, and seamless between DevSecOps phases. Our challenge is to drive the right balance between breadth and depth by retaining a seed then nurture approach in new product areas while simultaneously improving existing product areas that generate usage and revenue. Shifting more focus to product depth will allow us to win and retain sophisticated enterprise customers.
- GitLab.com and Self-Managed: Another challenge we face is the balance between our self-managed and GitLab.com offerings. GitLab's early paying customers were more interested in self-managed, and the majority of our customers use this offering today. As a result, we focused heavily on delivering a great self-managed customer experience. However, as the market shifts toward cloud adoption, we are seeing an increasing demand for our GitLab.com offering. We now need to rapidly meet the same enterprise-grade security, reliability, and performance expectations our paying customers have come to expect from self-managed in our SaaS (.com offering).
- Wide Customer Profile: We also serve a wide range of customers, from individual contributor developers to large enterprises, across all vertical markets. This range of deployment options and customer sizes makes our business complex and makes it hard to optimize the customer experience for all customer sizes. Over the past few years, we have prioritized enabling our direct sales channel, but in the process have not focused enough on great customer experiences around self-service purchase workflows, onboarding, and cross-stage adoption.
- Competition: Finally, we have formidable competition from much larger companies, including Microsoft, Atlassian, and Synopsys to name a few. Microsoft is starting to mimic our single application positioning, and while behind us in the journey, have substantial resources to dedicate to competing with GitLab.
- Focus on increasing Stages per Organization (SpO): There is a strong correlation between the number of stages customers use and their propensity to upgrade to a paid package. In fact, adding a stage triples conversion! Each product group should be laser-focused on driving adoption and regular usage of their respective stages, as it should lead to higher Net ARR, reduced churn, and higher customer satisfaction. As outlined in this user journey, the most important additional stages for customers to adopt are Create to Verify and Verify to Release, as each of these adoption steps open up three additional stages to users.
- Harness the unique power of a single application: GitLab√¢¬Ä¬ôs primary point of differentiation is our single application approach. As we continue to drive value in any given stage or category, our first instinct should be to connect that feature or product experience to other parts of the GitLab product. These cross-stage connections will drive differentiated customer value and will be impossible for point product competitors to imitate. Recognizing this opportunity, we have grown our R&D organization significantly over the past two years, and plan to invest an outsized amount on R&D for the next 2-3 years to extend our lead in executing against the single application product vision.
- Increase wider-community contributions: To achieve this ambitious vision more quickly, we will leverage our powerful open source community. Each stage should have a clear strategy for tiering the value of the stage. When stages are early in maturity, we will bias toward including as much functionality in our Core open source version as possible, to drive more rapid adoption and greater community contributions, which will help us mature new stages faster. Once stage adoption is achieved, we can then layer on additional value in paid tiers to encourage upgrades.
- Make our core journey categories complete: We want to ensure the core product usage experience is great, which will lead to more paying customers and improved customer retention. We intend to maintain our market-leading depth in stages with complete categories, which currently are Verify (Continuous Integration) and Create (Source Code Management and Code Review). Beyond that, we will endeavor to rapidly mature our offering to complete in Plan (3rd most used stage), Release (4th most used stage), and Secure (important element of our Ultimate tier).
- GitLab-hosted first: Most customers don't want to run GitLab themselves (self-managed), so we should build out the offerings where we do it for them (GitLab-hosted). GitLab-hosted includes our SaaS (GitLab.com), any single-tenant offerings, and other GitLab hosted services that self-managed installations can use. Our customer and revenue growth rate for our SaaS offering is faster than our self-managed offering. To meet growing customer demand, our SaaS offering needs to have enterprise-grade security, availability, and performance. We must also ensure feature parity between self-managed and SaaS and that customers have an easy migration path from self-managed to SaaS. Going forward, all new features should be available on SaaS when they are available on self-managed, if not before. We will also begin offering GitLab-hosted services to self-managed customers to provide additional value that may not be feasible to deliver in a self-managed environment, e.g. automated cloud backups. Finally, we expect to offer different GitLab-hosted deployment options for single tenant customers and specific geographic regions to meet the regulatory, security, and data residency requirements of various customer segments.
- Usability: Users are telling us that we need to better meet their expectations and make the experience more intuitive.
- Depth: We need to stop doing some of the things we are doing today. Customers are asking us to improve core functionality through usability improvements and remove half-completed features.
- Data Quality: Without more visibility, we cannot make as many data-driven decisions. And neither can our customers. We need to complete our data unification effort to make this easier.
- Deployment Parity: All three deployments (GitLab.com, GitLab Dedicated, Self-Managed) will have feature parity (with the exception of √¢¬Ä¬úadmin area√¢¬Ä¬ù topics on .com and Dedicated).
- Win with DevSecOps platform completeness
- Differentiate with AI across the Software Development Life Cycle (SDLC)
- Lead with SDLC insights and reporting
- Elevate customer-centricity to customer obsession
- Depth over Breadth: For the past several years we have focused on breadth over depth. This has allowed us to show our direction as a company and define the DevOps Platform market. In FY24, we pivoted to depth over breadth as product depth allows us to win and retain sophisticated enterprise customers. We will continue our focus on depth throughout FY25.
- Drive Adoption of Ultimate: Due to the increasing demands for security and compliance in software development, GitLab Ultimate continues to gain popularity with our customers. We will focus on increasing the value of Ultimate by not only improving security and compliance functionality but also adding value from other key areas within our platform like Plan, Verify, and Data Science.
- Differentiate: Our primary point of differentiation is our single application approach: all aspects of our DevSecOps platform work seamlessly together, right out of the box, and can be tailored to the specific needs of each organization.
- Enable AI/ML Efficiencies Across DevSecOps
- Drive Use Case Adoption to Fully Realize Value
- Differentiate on DevSecOps Platform
- Strengthen Our SaaS Deployments & Capabilities
- Dev Section Direction - Includes the Plan and Create stages
- CI Section Direction - Includes the Verify and Package stages
- CD Section Direction - Includes the Deploy stage, which includes the Environments group
- Sec Section Direction - Includes the Software Supply Chain Security Direction and the Application Security Testing, Software Supply Chain Security, and Security Risk Management stages
- Data Science Section Direction - Includes the ModelOps and AI-powered stages
- Analytics Section Direction - Includes the Monitor stage, which includes the Analytics Instrumentation and Platform Insights groups
- Growth Section Direction - Includes the Growth stage, which includes the Acquisition and Activation groups
- Fulfillment Section Direction - Includes the Fulfillment stage, which includes the Provision, Utilization, Fulfillment Platform, and Subscription Management groups
- Core Platform Section Direction - Includes the Foundations stage, which includes the Import and Integrate, Personal Productivity, Design System, UX Paper Cuts, and Global Search groups
- Infrastructure Platforms Section Direction - Includes the GitLab Delivery, Production Engineering, Data Access, Tenant Scale, GitLab Dedicated, and Developer Experience stages
- Single-Engineer Groups Section Direction - Includes the Mobile stage, which includes the Mobile DevOps group
- Builder Enthusiasm: Are the most talented, hardest working, or most-in-demand people - the engineers, the developers - so intrigued by the approach that they are working on it, excited by it, and trying to make it a thing? If that is the case, then there is a good chance that they will eventually make it happen, moving beyond the fringes to the mainstream. Number of stars, forks, and contributions in the repo are some metrics to look for here.
- Despite Test: When people are using a product despite the fact that it√¢¬Ä¬ôs not the best thing out there, or, in some cases, that it√¢¬Ä¬ôs straight-up terrible, it√¢¬Ä¬ôs a great sign. It shows that the product has a line into something emotional, not solely functional. Wanted, not just needed. In the early days, these products can often feel misunderstood or controversial. At first blush, the conceit may even raise a few eyebrows. But to the people who have been working on those products, they√¢¬Ä¬ôre so clearly elegant, if temporarily imperfect, solutions to big and important problems that they seem almost obvious once they recognize it. Google Trends and posts on Hacker News are some things to monitor here.
- T-shirt Test: If people with no connection to the company are wearing their t-shirts or putting their stickers on their laptops or wearing their socks, that desire to associate with the idea indicates as much a movement as a product.
- We don't make native mobile clients. Instead, we make sure our mobile web pages are great.
- We don't make native clients for desktop operating systems. We make our web application great√¢¬Ä¬îfor example, GitLab was the first to have merge conflict resolution in our web application. People can also use Tower or other clients.
- For language translations, we rely on the wider community.
- For code navigation, we're hesitant to introduce navigation improvements that only work for a subset of languages.
- For building and testing with Auto DevOps, we use Heroku Buildpacks.
- Network (fabric) Flannel, Openflow, VMware NSX, Cisco ACI
- Proxy (layer 7) Envoy, nginx, HAProxy, traefik
- Ingress (north/south) Contour, Ambassador,
- Service mesh (east/west) Istio, Linkerd
- Container Scheduler we mainly focus on Kubernetes, other container schedulers are: CloudFoundry, OpenStack, OpenShift, Mesos DCOS, Docker Swarm, Atlas/Terraform, Nomad, Deis, Convox, Flynn, Tutum, GiantSwarm, Rancher
- Package manager Helm, ksonnet
- Operating System Ubuntu, CentOS, RHEL, CoreOS, Alpine Linux
- Application Ops
- Cluster Ops
- Kernel/OS Ops
- Hardware Ops
- Identity management: Okta and Duo, you use this mainly with SaaS applications
you don't develop, secure, or operate.
- SaaS integration: Zapier and IFTTT
- Ecommerce: Shopify
- Network security, since it overlaps with application security to some extent.
- Security information and event management (SIEM), since that measures
applications and network.
- Office productivity applications, since
"We believe that all digital products should be open to contributions, from legal documents to movie scripts and from websites to chip designs"
- TBA
- IDC, Worldwide DevOps Software Tools Forecast, 2020√¢¬Ä¬ì2024, Doc # US45188520, July 2020
## CI Section Direction
|
GitLab
URL: https://about.gitlab.com/direction/ci/
### CI Section Direction
### What we do
### Why we do it
#### CI Section Mission
#### CI Section Vision
#### How we do it
##### 3-year strategy
##### Market predictions
##### Themes
##### Market Landscape for Continuous Integration Tools
##### GitLab CI Section Current Position
##### SWOT
##### Who is it for?
##### Cross-section efforts
###### Maintained by:
###### Continuous Integration Adoption Path
###### Core competencies for CI Section
###### Competitive Landscape
###### CI Section Jobs To Be Done
###### Today
###### Medium Term (1-2 years)
####### Contribute to this page
The following page may contain information related to upcoming products, features and functionality. It is important to note that the information presented is for informational purposes only, so please do not rely on the information for purchasing or planning purposes. Just like with all projects, the items mentioned on the page are subject to change or delay, and the development, release, and timing of any products, features or functionality remain at the sole discretion of GitLab Inc.
The CI section is responsible for many of the experiences in GitLab after a developer commits changes to a project (source code repository). The DRI for this page is Jackie Porter, Director of Product and I welcome contributions - please open a merge request or send me an email.
Our mission for the CI Section is to empower all users to easily contribute to the automated building, testing, and optimization of code for GitLab customers and the Open Source Community.
Our vision is that in the next five years, GitLab CI/CD is the brand synonymous with CI/CD and recognized as the industry standard.
We are going to accomplish this by making the process of configuring, managing, and tuning CI/CD pipelines as frictionless as possible.
The CI Section is comprised of two stages: Verify and Package. For a deeper view of the direction of each specific stage please visit the respective Direction Pages linked below:
Inherited from GitLab's company mission, the CI section aims to support universal contribution from everyone in the software build and packaging processes.
To accomplish this target, focusing on reducing complexity in the developer and platform operator workflow by prioritizing simplicity in our design,
building with flexibility in mind for the enterprise workflow,
and becoming an ecosystem for CI tools by thoughtfully integrating with other applications are the foundation for the strategy.
In addition to enabling developers with CI capabilities, we will also focus on supporting platform engineers with best-in-class tools for managing code, artifacts, and costs.
Organizations need a solution to effectively manage two sides of the software cost picture: developer cost and compute cost. There is a high demand for a single source to view and optimize builds and infrastructure internal research.
As we look into the future of build and package, migration and use case support will be a core focus. Journeys away from current tools are challenging. Our goal is to give you tools that can help make it easy to consolidate on GitLab so that you can save money on licensing costs and improve user experience.
With a win/win scenario in mind, the three year outcomes we would want to support as a section are as follows:
In three years the CI market will:
The CI Section is contributing actively to our Yearly Themes. In FY25, we plan to execute on:
The total addressable market (TAMkt) for DevOps tools delivering against the Verify stage is $3.4B in 2024 and is expected to grow to $3.9B by 2026 (13.95% CAGR) and the Package stage is $1.39B in 2024 with growth to $2B in 2026 (18.30% CAGR)
(i).
The Verify and Package Stages combined represents a significant portion of GitLab's expanding addressable market (23% of 2024 TAMkt).
The CI Section has continued to maintain a superior experience for individual and small teams of software and DevOps engineers with market share increasing each month as evidenced in our
Verify product performance indicators (internal) and Package Product performance indicators(internal).
Delivering on the enterprise use case is steadily increasing as evidenced in our
Verify Paid user-product performance indicators (internal) and Package Paid user product performance indicators (internal).
To continue this growth, the CI Section needs to invest more in the scaling requirements for large organizations,
deliver on solutions for helping organizations build secure and compliant software, as well as prioritize the usability of our core CI and Packaging capabilities.
Within the context of GitLab usage, there are three triggers for when CI/Packaging is an appropriate next step:
The entry point for adoption is often through the .gitlab-ci.yml, or documentation and public forums.
Some prerequisites for adopting CI are as follows:
The CI vision has some significant strengths, weaknesses, opportunties, and threats to becoming the leading platform for building, testing, and optimizing code:
As organizations migrate to a cloud-first strategy, the CI Section must work to adapt to changing needs in scale, performance, and usability. The Verify and Package Stages must simultaneously support the trend toward microservices architecture and infrastructure as code while balancing the needs of monorepos.
In response to the rise in supply chain attacks, there is an ever-increasing pace of government-issued directives, standards, and regulations focused on the security and integrity of the software supply chain. This means we must add features and capabilities that enable customers to efficiently meet the most stringent secure CI/CD and software chains of custody requirements. To adequately deliver on these expectations of the Enterprise market, the Verify and Package Stages must practice the following principles: security on-by-default, developer productivity, and cost effectiveness.
In FY25, we will achieve this by adding support for:
Our top competitors for the CI Section are GitHub and Jfrog. Secondarily, there are emerging competitors we are watching carefully such as JetBrains and Harness.io. In the install base, more specific to Verify Stage, we have strong users of Jenkins/Cloudbees, and for Package stage there is some usage of Nexus for Artifact management.
See the Package competitor page
Some of the core JTBDs for our three year vision and strategies are as follows:
We identify the personas the CI Section features are built for. In order to be transparent about personas we support today and personas we aim to support in the future we use the following categorization of personas listed in priority order.
To capitalize on the opportunities listed above, the Ops section has features that make it useful to the following personas today.
As we execute our 3-year strategy, our medium term (1-2 year) goal is to provide a single application that enables collaboration between cloud native development and platform teams.
There are several key cross-functional investments that will further our competitive position, security posture, and customer experience. The efforts are outlined below:
- You are here:
- GitLab Direction
- CI Section Direction
- What we do 
CI Section Mission
CI Section Vision 
3-year strategy
Market predictions
Themes
- CI Section Mission
- CI Section Vision 
3-year strategy
Market predictions
Themes
- 3-year strategy
- Market predictions
- Themes
- Why we do it 
Market Landscape for Continuous Integration Tools
GitLab CI Section Current Position 
Continuous Integration Adoption Path
SWOT 
Core competencies for CI Section
Competitive Landscape
CI Section Jobs To Be Done
Who is it for? 
Today
Medium Term (1-2 years)
How we do it 
Cross-section efforts
- Market Landscape for Continuous Integration Tools
- GitLab CI Section Current Position 
Continuous Integration Adoption Path
- Continuous Integration Adoption Path
- SWOT 
Core competencies for CI Section
Competitive Landscape
CI Section Jobs To Be Done
- Core competencies for CI Section
- Competitive Landscape
- CI Section Jobs To Be Done
- Who is it for? 
Today
Medium Term (1-2 years)
- Today
- Medium Term (1-2 years)
- How we do it 
Cross-section efforts
- Cross-section efforts
- CI Section Mission
- CI Section Vision 
3-year strategy
Market predictions
Themes
- 3-year strategy
- Market predictions
- Themes
- 3-year strategy
- Market predictions
- Themes
- Market Landscape for Continuous Integration Tools
- GitLab CI Section Current Position 
Continuous Integration Adoption Path
- Continuous Integration Adoption Path
- SWOT 
Core competencies for CI Section
Competitive Landscape
CI Section Jobs To Be Done
- Core competencies for CI Section
- Competitive Landscape
- CI Section Jobs To Be Done
- Who is it for? 
Today
Medium Term (1-2 years)
- Today
- Medium Term (1-2 years)
- How we do it 
Cross-section efforts
- Cross-section efforts
- Continuous Integration Adoption Path
- Core competencies for CI Section
- Competitive Landscape
- CI Section Jobs To Be Done
- Today
- Medium Term (1-2 years)
- Cross-section efforts
- Verify
- Package
- Manage code, binaries and packages at scale with actionable analytics and dashboards to support platform team decision making
- Enable platform teams to share operational definitions (infrastructure, environments, deployment pipelines, monitoring configuration) with development teams, and for development teams to easily contribute improvements to their definition
- Efficiency and cost optimizations are surfaced for action by operators
- Meet compliance and supply chain security requirements by improving the traceability of artifacts throughout the build, test, deploy process
- Build a system that supports the vendor ecosystem to meet enterprises where they are in their CI journey, helping teams onboard faster and more easily transition into GitLab's next-generation CI tools
- View CI a critical capability for bridging between Dev, Sec & Ops to create truly high-performing DevSecOps organizations
- View package management an integrated requirement for any CI/CD platform
- Have CI emerge as a critical lever for operational excellence in businesses
- Demand a higher standard of security for the software build process
- Use AI in development best-practices and infrastructure automation - a new domain we intend to lead
- Drive Use Case Adoption by delivering features that will amplify our paid usage as well as security and governance feature sets. The capabilities we expect to deliver in FY25 fall into two areas:
Continuous Integration: Merge Trains to Complete, External CI Jobs, Cache Service, GitLab Events, GitHub Actions compatibility, GitLab Secrets Manager, CI/CD Catalog to GA, CI/CD Insights, and Runner Fleet Dashboard to GA
Seamless migration from Artifactory: Maven Dependency Proxy, npm Dependency Proxy, Container Registry for Self-Managed GA, and PyPI Dependency Proxy
- Continuous Integration: Merge Trains to Complete, External CI Jobs, Cache Service, GitLab Events, GitHub Actions compatibility, GitLab Secrets Manager, CI/CD Catalog to GA, CI/CD Insights, and Runner Fleet Dashboard to GA
- Seamless migration from Artifactory: Maven Dependency Proxy, npm Dependency Proxy, Container Registry for Self-Managed GA, and PyPI Dependency Proxy
- Strengthen our SaaS Deployments to Drive SAM Growth by delivering Custom Hosted Runners as the flagship capability.
Runner SaaS will also extend reach by offering hosted ARM compute, GA of macOS runners, large macOS M2 runners, and GA of Windows Runners.
- Continuous Integration: Merge Trains to Complete, External CI Jobs, Cache Service, GitLab Events, GitHub Actions compatibility, GitLab Secrets Manager, CI/CD Catalog to GA, CI/CD Insights, and Runner Fleet Dashboard to GA
- Seamless migration from Artifactory: Maven Dependency Proxy, npm Dependency Proxy, Container Registry for Self-Managed GA, and PyPI Dependency Proxy
- Pushing code
- Creating a merge request
- Automating repetitive tasks
- GitLab account
- Familiarity with git
- GitLab project
- Enabled shared runners on GitLab SaaS OR configured self-managed runners
- Continuous vulnerability scanning for the container registry
- Improved UX for signed container registry images
- Once I have a stable development and operations organization, I want to author a CI pipeline so others in my team can leverage CI to increase the efficiency of their tasks.
- When implementing CI/CD practices across the organization, I want to ensure consistency and standardization of CI/CD workflows to ensure compliance and to ease and increase CI/CD adoption across my teams.
- When I build my project, I want to review upstream dependencies and test result data, so that I can stop and review dependencies and test failures before bugs get into production.
- When analysing configured CI tasks at a higher level for my organization, I want an overall understanding of the historical data about them, so I can identify trends and opportunities for improvements.
- When administering runners for a GitLab instance or group, I need to perform general administrative functions as quickly and efficiently as possible.
- When securing an end-to-end software supply chain I want to access immutable historical verisons of builds, artifacts, dependencies, so that I can fulfill legal or regulatory requirements.
- √∞¬ü¬ü¬©- Targeted with strong support
- √∞¬ü¬ü¬®- Targeted but incomplete support
- √¢¬¨¬ú√Ø¬∏¬è- Not targeted but might find value
- √∞¬ü¬ü¬© Sasha - Software Developer
- √∞¬ü¬ü¬© Devon - DevOps Engineer
- √∞¬ü¬ü¬® Allison - Application Ops
- √∞¬ü¬ü¬® Ingrid - Infrastructure Operator
- √∞¬ü¬ü¬® Simone - Software Engineer in Test
- √¢¬¨¬ú√Ø¬∏¬è Delaney - Development Team Lead
- √∞¬ü¬ü¬© Sasha - Software Developer
- √∞¬ü¬ü¬© Devon - DevOps Engineer
- √∞¬ü¬ü¬© Allison - Application Ops
- √∞¬ü¬ü¬® Ingrid - Infrastructure Operator
- √∞¬ü¬ü¬® Simone - Software Engineer in Test
- √∞¬ü¬ü¬® Delaney - Development Team Lead

Principles - Processes - Categories - GitLab the Product - Being a PM - Leadership
These are core principles that we believe will deliver world-class products through customer-centric innovation. Our goal is to build a practice that fosters these principles with the customers‚Äô voice at the core. Everything we do is for our customers, and we are only successful when they succeed in delivering secure software faster to their customers and internal users.
From development teams to marketing organizations, everyone needs to collaborate
on digital content. Content should be open to suggestions by a wide number of
potential contributors. Open contribution can be achieved by using a mergeable
file format and distributed version control. The mission of GitLab
is to allow everyone to collaborate on all digital content so people can
cooperate effectively and achieve better results, faster.
Ideas flow through many stages before they are realized. An idea originates in a
chat discussion, an issue is created, it is planned in a sprint, coded in an
IDE, committed to version control, tested by CI, code reviewed, deployed,
monitored, and documented. Stitching together all these stages of the DevOps
lifecycle can be done in many different ways. You can have a marketplace of
proprietary apps from different suppliers or use a suite of products developed
in isolation.
As a single-application for the entire DevOps lifecycle GitLab strives to enable you to bring ideas to production rapidly. We will do so AND avoid demonstrating our capabilities with toy app demos and simple trivial examples. That‚Äôs because we understand that building a prototype is easy, but building a production line is hard.
Minimal Valuable Change (MVC) is the GitLab path to delivering the smallest measurable improvement for our users, customers, and the wider community.
Our approach requires four pillars:
When considering how to scope a feature for a release, remember that it is not ok to ship an ‚Äúincomplete‚Äù feature to customers (see the definition of done). Consider the use of Pajamas components for UI in your MVCs. When introducing a new component or pattern not found within Pajamas, it is the responsibility of that team to follow our component lifecycle guidelines to determine whether it should be added and, if so, contribute the addition/update back to Pajamas.
MVC means reducing the scope so we can ship quickly. It doesn‚Äôt mean shipping something that hurts the usability of GitLab. First impressions are important. A feature that does not offer enough value or hinders the user experience may have a negative effect that discourages users from trying that feature again in the future. If there are obvious gaps in your MVC or you can anticipate follow-up requests, consider whether your feature is complete enough to be released to users. If you are unsure whether your feature is complete enough to be an MVC (or if you know your feature is not complete enough to be an MVC and you want to gather additional feedback), you can use approaches such as dogfooding, beta programs, feature flags, and/or user research to help build confidence in your decision. In terms of talking about your feature, it‚Äôs ok to add a release post item that announces your incomplete feature (making clear that it is an early iteration, and points to the direction for the feature) and follow up in a later release post with a new item when you‚Äôve completed more of the functionality. As long as you call it cookie dough, not a cookie, it manages user expectations.
Examples:
There are scenarios when an MVC approach is not advised. These include:
An MVC approach is a byproduct of our spirit of iteration. That means we break problems down as small as possible, and focus on reduced cycle time. Thinking iteratively is not always intuitive, and breaking certain topics or projects down can be challenging. Here‚Äôs a helpful video from our CEO with guidance on how to think more iteratively.
Here is a great video that illustrates how to build MVCs using Iteration. It shows Lego climbing obstacles. The first design fails. The second one can climb a book and so on. It also illustrates how modularity and good interfaces help with iteration as things get complex.
To ensure that our efforts consistently deliver value to our users, each iteration must adhere to the following guidelines:
Success of an initiative is not measured by the deployment of a change or the completion of an iteration. True success is determined by whether the iteration achieved its predefined objectives, as evidenced by tangible business and product metrics.
Example:
We celebrate achievements when we can clearly see that an iteration or launch has resulted in tangible value for our users.
Humans tend to favor solutions that add features than solutions that remove them, even when removing features is more efficient - great PMs recognize this bias and utilize subtractive thinking to create great user experiences. Customers will tell us when we‚Äôre missing something they need, but they‚Äôre unlikely to explicitly tell us when we‚Äôre overwhelming them with unwanted features. However, we do have evidence that this challenge is already a consideration for us, as reflected consistently in our System Usability Scale verbatims. Here is an episode on the Hidden Brain podcast that explores this bias further.
Our customers choose SaaS because it reduces their operating costs, helps them adopt the latest capabilities without performing upgrades, and provides them peace of mind of high availability. This principle implies the following:
This principle does not mean SaaS only. For more information on parity between SaaS and self-managed, see our parity principle.
An MVC approach allows for maximum feedback while iterating. To help gather that feedback, Product Managers are encouraged to create feedback issues (example) to consolidate suggestions and experiences from users. Consider mentioning the feedback issue in any release post items and related implementation issue(s) for awareness.
It‚Äôs important that team members know they are encouraged by E-group to continue moving fast as GitLab grows and gets bigger as a company. This involves moving quickly even in the face of risk and complexity. In alignment with our transparency value, we‚Äôd like to celebrate examples of failures or mistakes that were made while moving fast, where we ultimately learned from it and moved on.
The following failures provided by the product team are celebrated as opportunities to gain insight, share learnings and move on with additional knowledge:
If you have a failure that can serve as a learning opportunity, please make an MR to this page
Just because something is not invented here
doesn‚Äôt mean it doesn‚Äôt have a perfect home within our solution. GitLab is an
Open Core product and is part of the broader ecosystem of Open Source tools in
the market. Every day there are new innovative open source tools out there that solve
real-world customer problems; we should not be afraid of embedding these tools
into our own products in order to solve those same problems for our customers
too. Leveraging existing technology allows us to get to market much more quickly,
to contribute to Open Source (and help strengthen Open Source as a whole), and
allows us to focus our own people on making GitLab itself better. Building
professional relationships with these tool creators also is a positive for GitLab
since they may have important user perspectives around your categories.
We have achieved many successes following this approach:
There are also many more examples throughout the company where this has been successful.
As a product manager you should be monitoring the world of Open Source as it
relates to your area to see where new innovative tools are being developed, and
not be afraid of integrating those. One thing to keep in mind, integrating could
be anything from a blog post describing how the tool works together with GitLab
all the way up to bundling it inside of our own installation, and this can
evolve iteratively.
We understand that a natural inclination when using application development tools is to create an array of buttons to press and knobs to turn. We believe, however, that adding options to an application does not necessarily improve the user‚Äôs experience of that application. The best way to serve our users is to create an application that reduces complexity while still offering the features they need.
We admire other ‚Äúconvention over configuration‚Äù tools‚Äîlike Ruby on Rails (the doctrine of which perfectly describes the value of integrated systems), Ember, and
Heroku‚Äîand we strive to offer the same advantages for continuous delivery of software.
Furthermore, Ruby on Rails has significantly and positively influenced the Ruby community, uplifting the tool and making it more powerful and useful than ever before. We want GitLab to be to Kubernetes what Rails is to Ruby.
You should prefer well-considered choices based on current best practices. Avoid unnecessary configuration. Avoid configuration to support fragile workflows.
When considering adding new configuration, we follow the following principles:
Sometimes fast deployments are needed to fix a service or application outage that can cost a business money and reputation, we understand time is of the essence in these situations. That‚Äôs why we believe giving the team control over this is important in crucial moments of the development lifecycle. Controls that prevent changes from reaching Production are okay as safeguards, but they should be able to be quickly removed or disabled if necessary. When controls are changed in this way, logs or records should be created to support post-mortem analysis and allow for understanding why the control needed to be removed or disabled.
We want to provide the same capabilities to end users regardless of the method they choose to use GitLab (GitLab SaaS, Dedicated or Self-managed). All GitLab SaaS environments leverage the same installation method available to self-managed users, with a different licensing structure. By designing and implementing features for self-managed, we achieve maximum parity between the various installations.
A few examples:
In line with our SaaS-first principle, some features may be released on SaaS to gain operational experience and apply learnings prior to recommending and supporting customers using it. Features would be present on self-managed codebase but are disabled until General Availability.
For functionality where implementation may be especially challenging without cloud services, for example with AI, self-managed functionality may be dependent on an underlying SaaS service. This allows us to provide end users the same capabilities regardless of deployment type, and not overly constrain our feature set or impose significant operational complexities on each deployment. Product managers need to be aware that this may impact the adoption of these features, as not all customers may be willing or able to leverage underlying SaaS services, such as air-gapped deployments.
Exception to this product principle requires CEO approval. Work with VP, Product Management to add your request to the Product Scale agenda describing the situation and request for exception to gain CEO approval.
Our simplicity and SaaS/Self-Managed Parity principles require that we adhere to our established knowledge architecture. Our established architecture is Organization, Group and Project.
Note: This implies that we will take pains to avoid instance-level features as we expect to move all capabilities from instance to organization over time.
After making a tier decision on a new feature, we should strive to maximize the number of users who can use it.
As part of this objective, we should avoid building instance-level features when possible. Building at the instance level (in the admin area) leads to
a separation between GitLab.com and self-managed and limits
your audience to self-managed customers only:
Historically (and even net-new proposed features) we‚Äôve often started with an ‚Äúinstance-wide‚Äù mindset which then means we need to iterate and adjust features to work at a group-level. This often delays functionality for our SaaS customers and makes GitLab.COM feel like a second-class citizen.
There are factors that may justify an instance-level feature, like engineering efficiency and high infrastructure cost, but we should always have a clear view on how we might bring the feature to GitLab.com and clearly document why we started with the instance-level in the issue.
Product Managers at GitLab are frequently confronted with the choice of whether to add new configurations or not. These can frequently be times where an outside perspective is important. That‚Äôs why we‚Äôve created the option to request a New Config Review.
Here‚Äôs an example of how to consider whether to add new configuration. Let‚Äôs say you are proposing we add a checkbox or two radio boxes in a feature dialog box. Think carefully about what users really want. Most of the time, you‚Äôll find you really only need one solution, so remove the other option. When two possible choices really are necessary, the best or most common one should be the default, and the other one
should be available. If the non-default choices are significantly less common, then consider taking them out of the main workflow for making decisions, by putting them behind an Advanced configuration tab, for example.
Avoiding configurations is not always possible. When we have no choice,
the secondary priority is to configure something in the GitLab
interface.
A configuration should only appear in a file (gitlab.rb or
gitlab.yml) as a last resort.
When you have to add a new configuration, make sure that the features and services are on by default. Only add a configuration line to either of these configuration files if the feature or service cannot be fully disabled from the admin UI.
If the decision to add a configuration follows the principles above, add it to the repository-specific CI configuration options and be sure to default it to the option that results in the best user experience. We are much more liberal with additions to CI configurations than Instance configurations.
Features should be owned by one group, including the respective DRIs of that group. Make sure that the documentation metadata and the features.yml for your team are kept up to date to make it easier for other teams to find the correct owner.
This principle is important because unowned product features are unsupervised, and continue to accrue technical debt over time. This increases the risk of performance and maintenance issues, which tend to only get resolved once the situation has become critical. In addition, by having clear DRIs for our entire surface area, teams are able to advocate for investment and/or removal of features. If you encounter a feature that does not seem to be owned or documented, work with the team that originally introduced the functionality to decide on ownership. If the feature is large and needs to be broken down, document which elements are owned by which team. If you cannot decide who should own the feature, escalate the decision to the lowest common reporting line between the involved teams. If there are features that no group wants to own, or features that a group no longer wants to own, that feature should be considered for deprecation and removal.
A highly usable interface with cohesive workflows and comprehensive documentation is a must to stay ahead of our best-in-class competitors. Work closely with the individuals in UX to achieve our user experience goals. The UX team has a high level of expertise in Product Design, Technical Writing, and UX Research. They can help decipher or decide how to simplify or avoid complexity. While our Product Designers review user interface changes in merge requests, they are not limited to just the UI. Anything that impacts the user journey is relevant to them.
Keep in mind these general user experience principles.
Additionally, you can familiarize yourself with the UX team mission and GitLab‚Äôs Pajamas design system principles.
Many crazy, over-ambitious ideas sound like they are impossible just
because no one else is doing them.
Since we have amazing engineers and a culture of shipping minimal
valuable changes, we are able to accomplish many more ‚Äúimpossible‚Äù things than other organizations.
That‚Äôs why we‚Äôre shipping merge conflict resolution, why we shipped built-in CI
before anyone else, why we built a better static pages solution, and why
we‚Äôre able to compete.
Here at GitLab, we are an ambitious company and this means we
aim for big things with every release. The reality of taking chances and
planning aspirationally means that we won‚Äôt always be able to deliver everything
that we wanted to try in every release, and similar to our OKRs,
we believe this is a good thing. We don‚Äôt want to shy away from challenging
ourselves and always want to keep a sense of urgency, and aiming for more helps
us do that. Also see the importance of velocity
We arrived at our preference for ambitious planning after measuring our velocity and finding that our velocity was unchanged whether we scheduled ambitiously or scheduled for providing slack.
Discovering new features can enhance the experience and unlock significant value for users. And the more users see and try our features, the faster we can get feedback to improve them.
However, excessive feature discovery efforts can become irritating for users. This erodes trust and reduces engagement with other UI elements in the future. Even worse, they might leave GitLab due to this deteriorating experience. Context plays a significant role in how users engage with new functionality. By presenting features in a way that resonates with a user‚Äôs current situation and needs you increase the liklihood of them using this new functionality.
Work with your product designer to improve the discoverability of your features. The Pajamas Design System has best practices and examples to support feature discoverability. We can also design new patterns. The Growth team can also help you with this, as they think about things like onboarding new users and promoting feature use within the app while supporting, not annoying, the user.
As the GitLab userbase and team members who work on GitLab continue to grow we need to support both our users and team members by helping to connect users who may be interested in speaking with a member of the sales team to that particular person. We can call this a Product Qualified Lead or a PQL.
Our goal is to develop a world-class PQL system whereby we monitor product usage to understand and constantly iterate on what constitutes a usage-based PQL and provide a unified intelligent interface in the product where users can submit a hand-raise, start a trial or upgrade touchlessly.
By monitoring product usage, usage PQL volume, SAO rate, and ASP we will be able to work in partnership with marketing and sales to ensure we‚Äôre sending high quality leads to the sales team.
In the product experience, we will develop an intelligent module for feature discovery moments whereby we help recommend what we believe should be the preferred option for the user whether it‚Äôs a hand-raise, trial or touchless upgrade by updating the default CTA based on their usage of the product along with demographic and firmographic data. This experience will be present on both SaaS and self-managed instances for air-gapped instances the CTAs will provide the user with external URLs to visit to complete the associated step. This experience should be able to be deployed by any stage to further their paid adoption rate.
Users can only experience GitLab‚Äôs value when they actively use the product features. Therefore the Product team‚Äôs mission isn‚Äôt only shipping features and building products, but also driving usage and delivering value.
There are two frameworks we use to think about driving GitLab‚Äôs product usage: we use the AARRR framework to think about how to drive a single feature‚Äôs usage, and use the Customer Adoption Journey to think about cross-adoption of product features. These two frameworks are also interconnected with each other.
AARRR stands for Acquisition, Activation, Retention, Revenue, and Referral which is often referred to as ‚ÄúPirate Metrics‚Äù. These five words represent the customer journey and the various means a product manager may apply Product Performance Indicators to drive a desired behavior in the funnel.
While the AARRR framework is commonly used to drive overall active users, it is also a great way for PMs to think about how to drive feature usage.
Add AARRR funnels for your stage or group‚Äôs Product Performance Indicators directly with mermaid markdown. It‚Äôs easy if you use this live editor.
Product managers can use these various states to prioritize features that drive a desired action. This could mean focusing on the Activation metric to drive awareness and generate more top of funnel leads. As an example, in the Release stage the Release Management group tracks actions on the Release Page in GitLab. Users that view a Release Page have been acquired and those that create a release on a Release Page are activated users. The Product Manager can choose to target features that drive users to view the Release Page more, resulting in a greater interest in the number of users that become activated and create their own Releases.
GitLab is a complete DevOps platform. Our customers get the most value out of the GitLab product when they use multiple features together. Below is the most common path our customers follow to adopt GitLab‚Äôs product stages.
As PMs, in addition to driving usage of individual features, we should also proactively think about how to design product and user experiences to help users adopt more stages and features, therefore benefiting more from using GitLab.
Note: There are numerous potential variants to this adoption journey, but it‚Äôs important to keep this representation simple and consistent. Please check with David DeSanto first before making any changes to the adoption journey image.
Shipping only MVCs can result in a large set of loosely connected pieces that
don‚Äôt necessarily combine into a single, great user experience.
An obvious solution to this would be to plan out the future in detail,
creating a long-term detailed plan. However, this is unwanted as it can restrict
your flexibility and ability to respond to changing needs or feedback.
Flow One offers an alternative. You draw out a workflow consisting of
MVCs (that can be shipped individually). The workflow should only cover a
specific, narrow use-case, and nothing more.
This means you:
Flow One should cover the first iteration of a particular workflow.
After this, individual MVCs can be introduced to expand the use-cases
or loosen the assumptions (e.g. from a feature that can only be used
if you‚Äôre using feature branches, to one that works for other git strategies).
Using data to learn from our users is important. Our users are spread across GitLab.com
and self-managed instances, so we have to focus our efforts on learning and
providing benefit to both when we decide to collect more data, or build and use
additional analytics tools. If we do this, we can help make the rest of the
company successful as well. This means that we should:
Per GitLab Stewardship, we will not introduce artificial limits in Core. Artificial means
arbitrarily setting a small number (such as: 1) as a limit on a given GitLab object category,
that would incur no additional effort or cost had we chosen a larger number. The additional
effort includes product, design, and engineering effort to create the feature in the first place,
and to maintain it over time.
For example, GitLab Core has the issue board feature in every project.
In GitLab EE, each project supports multiple boards.
This does not mean that Core has an artificial limit of one board per project, because there is additional effort
to manage multiple boards such as supporting the navigation interface, and all the associated engineering work.
This principle does not apply to our SaaS offering as limits are occasionally introduced to limit our hosting costs and protect other users from potential abuse. As an example we have shared runner minute quotas and implement rate limiting.
We‚Äôre discussing enforced workflows in this issue.
Enforced workflows should be avoided in GitLab. For example, there are three issue
states (Open, In Progress (as of 10.2), and Closed), and any issue should be
allowed to transition from one state to any other state
without workflow restrictions. (Roles and permissions is a separate concern.)
A comment on Hacker News perfectly details what can go wrong when enforcing workflows:
‚ÄúThe down side for the true end-users, those who actually use the software day-to-day,
is that most business processes are awful. If your experience is the hellish existence
that I see strolled about on threads where JIRA comes up ‚Ä¶:
But that comment also specifies the advantage:
‚ÄúJIRA‚Äôs most powerful feature is that it affords for mapping businesses processes onto software.
This is incredibly compelling to enterprise customers. Software that enforces workflows, procedures
and requirements can be an incredible lever and JIRA‚Äôs price point makes build vs buy decisions an absolute no-brainer.‚Äù
We should ensure that GitLab makes it easy to help with enterprise workflows:
When considering a customer need for enforcement or limitations:
As an example, customers requested instance-wide enforcement through required CI jobs. Doing this would have been a mistake. Instead:
Small primitives are building blocks in GitLab. They are an abstraction not at
the technical level, but truly at the product level. Small primitives can be combined,
built-upon further, and otherwise leveraged to create new functionality in GitLab.
For example, the label lists in issue boards
use the smaller primitive of labels.
They are especially powerful because they usually take less effort and provide
higher leverage than you would get from a more ‚Äúcomplete‚Äù but standalone feature.
Think of how simple Unix command line utilities can be chained together to do
really complicated things, much easier (and certainly more flexibly) than you
could have done with a dedicated tool.
When iterating on GitLab, strongly consider using small primitives instead
of creating new abstractions, especially when considering MVC features
that will provide the foundations for further improvements. To do this
you can start with easy to apply concepts that meet the needs of intermediate
to advanced users; from here document the usage clearly and be sure to think about
discoverability. The UX can very often be refactored or enhanced later when there‚Äôs
a demonstrated need for refinement, onboarding for less sophisticated users, or
other new abstractions needed that were identified through real-world usage.
In GitLab the product, it is sometimes the case that optional software or infrastructure is required to enable new capabilities. Some examples include:
The following are best practices we consider when building such components.
As we learned with GitLab CI/CD, the ability for developers to quickly attach needed Runners to enable their own use of GitLab CI/CD allowed for rapid adoption of GitLab CI/CD within an organization. When considering the workflow to enable additional capabilities, start with enabling developers first. A guiding principle should be low-friction developer enablement, which will positively impact adoption.
As we learned from the certificate-based Kubernetes Integration, building starting experiences that support demoing a getting-started process doesn‚Äôt necessarily translate into real usage. For example, the certificate-based integration lacked strong security primitives and the ability to manage the integration on an ongoing basis. As a result, we should build capabilities that target real-world production use first, even as part of MVCs.
GitLab‚Äôs vision is to be the best single application for every part of the DevOps toolchain. However, some customers use tools other than our included features, and we respect those decisions. With this in mind, it‚Äôs sometimes valuable to integrate with 3rd-party services and products to help bridge the gaps in their toolchain. While a single application is the best approach, multiple applications that work well together is better than ones that don‚Äôt.
With this in mind, below are some product guidelines to consider:
Note - We intend to provide a place where everyone can contribute, such as code snippets, project templates and CI components in the CI/CD Catalog. Marketplaces are traditionally transaction based, where users are purchasing solutions. GitLab CI/CD components on the other hand, will offer an in product experience for consuming components for YAML configuration from a library of GitLab maintained components.
Closed source software vendors commonly depend on plugins and commercial marketplaces because:
Because GitLab is an open core product, third parties can add functionality directly to GitLab. Adding directly to the GitLab codebase (as opposed to building a plugin) may mean more work for them and will limit the ways in which they can charge for that functionality.
However, for users of GitLab, this has significant advantages:
And for developers of GitLab including the third parties, this has significant advantages as well:
Overall, we believe that this approach creates the best possible experience for both the users of and the contributors to GitLab, and to that end we encourage people to contribute functionality to GitLab directly.
If adding code directly to GitLab isn‚Äôt an option, we encourage third-parties to integrate through our APIs.
Note: GitLab does support plugins that respond to system hooks, which tie directly to application events and are primarily used for administrative purposes such as auditing, logging, and other administrative tasks.
GitLab is a DevOps Platform, not a collection of DevOps point solutions; the naming of GitLab products and features should reflect this. Adopting descriptive names brings other advantages:
As an example, CI/CD Components Library is a descriptive name while CI/CD ATOM is a distinctive name.
Exceptions to this principle are considered in limited circumstances - if a product or feature is a differentiator in the market, adopting a descriptive name risks it getting lost in the sea of same. Here, a distinctive name may be justified. To discuss an exception, reach out to #marketing in Slack.
When naming a GitLab extension, plugin, app, or integration for a third-party product or service (a ‚Äútool‚Äù), either include the third-party service name with a preposition like for, or don‚Äôt include it at all. A preposition is important as it indicates that the third party isn‚Äôt officially affiliated with the tool. For example, our integration with Jira Cloud is called GitLab.com for Jira Cloud.
Provided we use the tool‚Äôs full name in marketing materials and technical documentation, as exceptions to this general principle we can: (1) refer to the tool solely by the third-party service name in places where we list GitLab‚Äôs tools in product; and (2) refer to the tool solely as ‚ÄúGitLab‚Äù in the third-party product‚Äôs app directory. For example, we refer to the GitLab for Slack app as ‚ÄúSlack‚Äù in our lists of GitLab integrations, and as ‚ÄúGitLab‚Äù in the Slack App Directory.
For more guidance on the feature naming process, see naming features.
While our big, hairy, audacious goal spans all development processes, personas, and use-cases, there are primary targets in each one of these venues.
When considering prioritization we should first aim to provide complete maturity for developers building cloud native applications in a modern way prior to moving to other development methodologies, personas, and application types.
When developing features to compete with existing competitors, make sure to
solve problems for modern development teams first, and then see what‚Äôs missing
for legacy teams. e.g. For project management, make great project management
capabilities for teams doing conversational development, lean, or even agile
development before doing Scaled Agile Framework (SAFe) or waterfall.
It‚Äôs important that modern first does not mean non-modern never. It means that
we should first learn how teams are using the feature in a modern way, and then
see what‚Äôs missing. The modern way provides the path forward, and then we can add
customizability or the path to modern for teams who are not quite there yet.
Our strategy includes going after a lot of new personas, going from developers to
operations, security, product managers, designers, etc. But when developing
features in these new areas, it‚Äôs important to remember to start with the
developer. If we can make security great for developers and then great for
security professionals, we‚Äôll be much more successful.
Development teams deploy to tons of different platforms, from bare metal to
cloud VMs to cloud-native Kubernetes clusters. We build features for
cloud-native first, and then support the rest. This allows us to focus on
where development is going, and deliver solutions that every company aspires to
use eventually, even if they‚Äôre not ready to today.
By focusing on next-generation development flows, personas, and use cases - we build features and experiences where our initial users are in the relatively small population of early adopters. While we might build experiences to support them today, we presume there will always be a much larger population of future users of these experiences. Therefore, we optimize GitLab to support the larger number of current and future adopters of next-generation principles - those who are beginning to operate in the workflow (modern), team setup (developer first), or application architectures (cloud native) we support. We focus our investment in the most modern workflows that will best support those current adopters. This will come at the cost of sustained investment in initial workflows for early adopters. When doing so we will ensure we clearly communicate with our users what the preferred path is.
For example - We first provided the ability to attach Kubernetes Clusters via the Certificate method. After realizing this wasn‚Äôt optimal for production use cases we added the GitLab Agent for Kubernetes method of cluster attachment. As soon as we were certain that the certificate method was no longer the preferred method we communicated via our docs and in the product that the Agent was the preferred path for current adopters. This should not mean an immediate deprecation, but a clear signal that the legacy method will become deprecated once the alternative approach is able to substitute it.
We provide customer support to paying customers on all features that are in the tier of their paid license as well as any lower tiers.
This means a feature in Core, should get customer support in all paid tiers.
For example, when there is a feature that is available in the lowest paid tier, but only has customer support in higher tiers,
the feature should be removed from that lowest paid tier.
In accordance with our stewardship policy we can never remove features from Core into paid tiers,
but we can build additional features around it which are available to paying customers only.
- GitLab
- TeamOps
- Handbook
- Job Families
- The Handbook
GitLab Values


GitLab Professional Education Services
GitLab Agile Portfolio Management - Hands-On Lab Overview
GitLab Agile Portfolio Management - Hands-On Lab: Access The GitLab Training Environment
GitLab Agile Portfolio Management - Hands-On Lab: Create an Organizational Structure in GitLab
GitLab Agile Portfolio Management - Hands-On Lab: Create And Customize Issue Boards
GitLab Agile Portfolio Management - Hands-On Lab: Create And Manage A Kanban Board
GitLab Agile Portfolio Management - Hands-On Lab: Create And Manage A Scrum Board
GitLab Agile Portfolio Management - Hands-On Lab: Create And Manage A Waterfall Board
GitLab Agile Portfolio Management - Hands-On Lab: Organize and Manage Issues
GitLab Agile Portfolio Management - Hands-On Lab: Use GitLab Planning Tools
GitLab Agile Portfolio Management- Hands-On Lab: Create Issues
GitLab Agile Portfolio Management- Hands-On Lab: Use A Merge Request To Review And Merge Code
GitLab CI/CD - Hands-On Lab Overview
GitLab CI/CD - Hands-On Lab: Code Quality Scanning
GitLab CI/CD - Hands-On Lab: Create A Basic CI Configuration
GitLab CI/CD - Hands-On Lab: Defining Stages, Jobs, and Runners
GitLab CI/CD - Hands-On Lab: Display Pipeline Info
GitLab CI/CD - Hands-On Lab: Job Policy Patterns
GitLab CI/CD - Hands-On Lab: Security Scanning
GitLab CI/CD - Hands-On Lab: Understanding the Basics of Pipelines
GitLab CI/CD - Hands-On Lab: Using Artifacts
GitLab CI/CD - Hands-On Lab: Variable Hierarchy
GitLab CI/CD - Hands-On Lab: Working with the GitLab Container Registry
GitLab Duo Principles - Hands-On Lab Overview
GitLab Duo Principles - Hands-On Lab: Code Generation with GitLab Duo Chat
GitLab Duo Principles - Hands-On Lab: Getting Started with GitLab Duo
GitLab Duo Principles - Hands-On Lab: Using GitLab Duo to Write New Code
GitLab Duo Principles - Hands-On Lab: Working with Issues and Merge Requests
GitLab Duo Principles - Hands-On Lab: Working with Security Vulnerabilities
GitLab Professional Education Services ILT Labs
GitLab Advanced CI/CD - Hands-On Lab Overview
GitLab Advanced CI/CD - Hands-On Lab: Configurations for Complex Processes
GitLab Advanced CI/CD - Hands-On Lab: Deployment Strategies
GitLab Advanced CI/CD - Hands-On Lab: GitLab Runners Deep Dive
GitLab Advanced CI/CD - Hands-On Lab: Optimizing Build Pipelines
GitLab Advanced CI/CD - Hands-On Lab: Optimizing Pipeline Testing
GitLab Advanced CI/CD - Hands-On Lab: Review Apps
GitLab Advanced CI/CD - Hands-On Lab: Reviewing Best Practices
GitLab Agile Portfolio Management - Hands-On Lab Overview
GitLab Agile Portfolio Management - Hands-On Lab: Access The GitLab Training Environment
GitLab Agile Portfolio Management - Hands-On Lab: Create an Organizational Structure in GitLab
GitLab Agile Portfolio Management - Hands-On Lab: Create And Customize Issue Boards
GitLab Agile Portfolio Management - Hands-On Lab: Create And Manage A Kanban Board
GitLab Agile Portfolio Management - Hands-On Lab: Create And Manage A Scrum Board
GitLab Agile Portfolio Management - Hands-On Lab: Create And Manage A Waterfall Board
GitLab Agile Portfolio Management - Hands-On Lab: Organize and Manage Issues
GitLab Agile Portfolio Management - Hands-On Lab: Use GitLab Planning Tools
GitLab Agile Portfolio Management- Hands-On Lab: Create Issues
GitLab Agile Portfolio Management- Hands-On Lab: Use A Merge Request To Review And Merge Code
GitLab CI/CD - Hands-On Lab Overview
GitLab CI/CD - Hands-On Lab: Configure a Pipeline to Build an Application
GitLab CI/CD - Hands-On Lab: Configuring Pipeline Testing
GitLab CI/CD - Hands-On Lab: Deploying Applications
GitLab CI/CD - Hands-On Lab: Investigating Broken Pipelines
GitLab CI/CD - Hands-On Lab: Rules and Merging Changes
GitLab CI/CD - Hands-On Lab: Working with CI/CD Components
GitLab Compliance - Compliance Center and Frameworks
GitLab Compliance - Hands-On Lab Overview
GitLab Compliance - Hands-On Lab: Audit Events
GitLab Compliance - Hands-On Lab: Compliance Reports
GitLab Compliance - Hands-On Lab: Enable and Configure License Compliance
GitLab Compliance - Hands-On Lab: Pipeline Execution Policies
GitLab Compliance - Hands-On Lab: Scan Execution Policies
GitLab Compliance - Repository Control
GitLab Compliance - Separation of Privileges
GitLab Security Essentials - Hands-On Lab Overview
GitLab Security Essentials - Hands-On Lab: Addressing Vulnerabilities
GitLab Security Essentials - Hands-On Lab: Container Scanning
GitLab Security Essentials - Hands-On Lab: DAST and API Scans
GitLab Security Essentials - Hands-On Lab: Dependency and IaC Scanning
GitLab Security Essentials - Hands-On Lab: Enable and Scan Using a Scan Execution Policy
GitLab Security Essentials - Hands-On Lab: SAST and Secret Detection
GitLab System Admin - Hands-On Lab: Exploring the GitLab Kubernetes Instance
GitLab System Admin - Hands-On Lab: Exploring the GitLab Omnibus Instance
GitLab System Admin - Hands-On Lab: Exploring the Kubernetes Admin Dashboard
GitLab System Admin - Hands-On Lab: Exploring the Omnibus Admin Dashboard
GitLab System Admin - Hands-On Lab: Kubernetes Backup and Restore
GitLab System Admin - Hands-On Lab: Logging and Monitoring GitLab Kubernetes
GitLab System Admin - Hands-On Lab: Logging and Monitoring GitLab Omnibus
GitLab System Admin - Hands-On Lab: Omnibus Backup and Restore
GitLab System Admin - Hands-On Lab: Troubleshooting GitLab Kubernetes
GitLab System Admin - Hands-On Lab: Troubleshooting GitLab Omnibus
GitLab System Admin - Hands-On Lab: Upgrading GitLab Kubernetes
GitLab System Admin - Hands-On Lab: Upgrading GitLab Omnibus
GitLab System Administration with Kubernetes - Hands-On Lab Overview
GitLab System Administration with Omnibus - Hands-On Lab Overview
GitLab with Git Fundamentals - Hands-On Lab Overview
GitLab with Git Fundamentals - Hands-on Lab: Auto DevOps With a Predefined Project Template
GitLab with Git Fundamentals - Hands-on Lab: Build a .gitlab-ci.yml file
GitLab with Git Fundamentals - Hands-On Lab: Create a project and issue
GitLab with Git Fundamentals - Hands-On Lab: Static Application Security Testing (SAST)
GitLab with Git Fundamentals - Hands-On Lab: Use GitLab To Merge Code
GitLab with Git Fundamentals - Hands-on Lab: Work With Git Locally
GitLab Security Essentials - Hands-On Lab Overview
GitLab Security Essentials - Hands-On Lab: Configure SAST, Secret Detection, and DAST
GitLab Security Essentials - Hands-On Lab: Enable and Configure Container Scanning
GitLab Security Essentials - Hands-On Lab: Enable and Configure Coverage-Guided Fuzz Testing
GitLab Security Essentials - Hands-On Lab: Enable and Configure Dependency Scanning
GitLab Security Essentials - Hands-On Lab: Enable and Configure License Compliance
GitLab Security Essentials - Hands-On Lab: Enable and Scan Using a Scan Execution Policy
GitLab System Administration - Hands-on Lab: Backup and Restore GitLab
GitLab System Administration - Hands-on Lab: Configure GitLab Runners
GitLab System Administration - Hands-on Lab: Configure Instance Monitoring
GitLab System Administration - Hands-on Lab: Implement Sign-Up Restrictions
GitLab System Administration - Hands-on Lab: Install GitLab
GitLab System Administration - Hands-on Lab: Manage GitLab Logs
GitLab System Administration - Hands-on Lab: Troubleshoot GitLab
GitLab System Administration - Hands-on Lab: Use GitLab Administration Commands
GitLab System Administration Hands-on Lab Overview
GitLab with Git Fundamentals - Hands-On Lab Overview
GitLab with Git Fundamentals - Hands-on Lab: Auto DevOps With a Predefined Project Template
GitLab with Git Fundamentals - Hands-on Lab: Build a .gitlab-ci.yml file
GitLab with Git Fundamentals - Hands-On Lab: Create a project and issue
GitLab with Git Fundamentals - Hands-On Lab: Static Application Security Testing (SAST)
GitLab with Git Fundamentals - Hands-On Lab: Use GitLab To Merge Code
GitLab with Git Fundamentals - Hands-on Lab: Work With Git Locally
Thought Industries LMS Tech Stack Guide
GitLab Technical Certifications
Partner Collaboration
Positioning Professional Services
Professional Service Operations
Mavenlink Processes
Professional Services Delivery Methodology
Agile to GitLab Terminology Mapping
Archetype Definition
Backlog Management
Definition of Done
Definition of Ready
Discovery
GitLab Best Practices
Good Estimation Techniques
Good User Stories
How to Use CP Automation to Manage Engagements
Iteration 0
Iteration 0 Fundamentals
Iteration Planning per Service Offering
Iteration Scheduling
Managing Risk, Project Wins, and Business Development
Retrospectives
Professional Services Engagement Management
GitLab Certified Engagement Manager Professional
Professional Services EM Opportunity Tracking
Professional Services EM Scoping Guidelines
Professional Services EM Implementation Scoping
Professional Services EM Scoping - CI/CD Pipeline Migration
Professional Services EM Scoping - Migrations
Migrating from Self-Managed GitLab to GitLab.com
Professional Services EM Scoping - Transformational Services
Scoping a Readiness Assessment
Professional Services Engagement Management - SOW Creation
Professional Services Engagement Management - Transacting ProServ business through AWS Marketplace
Task Prioritization
Professional Services Engineering Workflows
Artifacts
After Action Reports
Architecture Diagrams
Intake
AWS Intake
On-prem Intake
Internal
15-minute Standup
Blameless Root Cause Analyses
Professional Services Business Operations
Process
Project Execution
Project Kick-off
Sign-off
Standing Calls
Welcome E-mail
Professional Services Instructional Design and Development
Professional Services Offerings
Professional Services Offerings Framework
Professional Services Partner Invoice Example
Professional Services Practice Management
Professional Services Pre-Sales Methodology
Professional Services Project Management
Professional Services Remote Training Session Setup and Reporting
Professional Services Technical Architect
PS Standard SKUs
Remote Training Facilitation Best Practices
Selling GitLab Professional Services
Services to Accelerate Customer Adoption
Setting up your Development Environment
Working with Professional Services
Public Sector
Public Sector Solutions Architects
Renewals Managers
Renewals Managers
Renewals Managers - How we do it
Renewals Managers - What we do
RM Onboarding
Resources to get started with GitLab
Success Tiers
Accelerator Development Template Usage Guide
Transitioning Accounts from Pre-Sales to Post-Sales
Using Salesforce within Customer Success
- Account Team
- APJ Customer Success
- Commercial Sales - Customer Success
Commercial Renewal Process
- Commercial Renewal Process
- Customer Health Scoring
- Customer Success Management Handbook
Account Engagement
Strategies for Non-Engaged Customers
Account Handoff CSM-to-CSM Checklist
Adoption Landing Zones
AI/ML Adoption Landing Zone
CI Adoption Landing Zone
DevSecOps Adoption Landing Zone
Cadence Calls
CSM and Support Interaction
CSM Aspiring Leaders Program
CSM Development
CSM Executive Relationships
CSM FY23 Big Rocks
CSM Internship Program
CSM Issue Tracking and OKRs
CSM Manager Handbook
Account Risk & Renewal Management
CSM Quarterly Business Review
Roles
CSM Operations Manager
CSM November 2021 Engagement Survey
CSM Onboarding
Meeting Shadowing
CSM Paid Time Off
CSM Quaterly Business Reviews (QBRs)
CSM Responsibilities and Services
CSM Infrastructure Upgrade Coordination
CSM Rhythm of Business
CSM Strategies for Mitigating Risk In Customer Accounts
Helping Customers Decide to Migrate to SaaS
Customer Health Assessment and Management
Customer Onboarding
Customer Renewal Tracking
Customer Success Escalations Process
Infrastructure Escalations
Customer Success READMEs
Aleesha Dawson's README
Oliver Falk's README
Customer Success Teams
AMER CSMs
APJ CSMs
CSEs
CSE Content
CSE Direct Responsible Individuals (DRI)
CSE Operating Rhythm
CSE Playbooks page
CSE Team Member Onboarding
Customer Onboarding Best Practices
Customer Success Architects (CSA)
EMEA CSMs
DevSecOps Adoption Tracking in Gainsight
Digital Customer Programs
Engaging with Partners
Engaging with Professional Services
Executive Business Reviews (EBRs)
FY24 Big Rocks
FY25 CS Retrospective Program
Leadership Recurring Check-Ins
Researching Customer Questions
Roleplay Scenarios
Service Ping FAQ
Stage Adoption Metrics
Success Plans
Continuous Planning
Questions & Techniques for Success Plan Discovery
Using Calendly as a CSM
Using Gainsight as a CSM
Calls to Action (CTAs)
CSM Dashboard Overview
Customer 360
Customer Deployment Types
Gainsight Dashboards
Using Timeline
Using Issue Prioritization Dashboard as a CSM
Using the Customer Collaboration Project as a CSM
Workshops and Enablement Sessions
- Account Engagement
Strategies for Non-Engaged Customers
- Strategies for Non-Engaged Customers
- Account Handoff CSM-to-CSM Checklist
- Adoption Landing Zones
AI/ML Adoption Landing Zone
CI Adoption Landing Zone
DevSecOps Adoption Landing Zone
- AI/ML Adoption Landing Zone
- CI Adoption Landing Zone
- DevSecOps Adoption Landing Zone
- Cadence Calls
- CSM and Support Interaction
- CSM Aspiring Leaders Program
- CSM Development
- CSM Executive Relationships
- CSM FY23 Big Rocks
- CSM Internship Program
- CSM Issue Tracking and OKRs
- CSM Manager Handbook
Account Risk & Renewal Management
CSM Quarterly Business Review
Roles
CSM Operations Manager
- Account Risk & Renewal Management
- CSM Quarterly Business Review
- Roles
CSM Operations Manager
- CSM Operations Manager
- CSM November 2021 Engagement Survey
- CSM Onboarding
Meeting Shadowing
- Meeting Shadowing
- CSM Paid Time Off
- CSM Quaterly Business Reviews (QBRs)
- CSM Responsibilities and Services
CSM Infrastructure Upgrade Coordination
- CSM Infrastructure Upgrade Coordination
- CSM Rhythm of Business
- CSM Strategies for Mitigating Risk In Customer Accounts
Helping Customers Decide to Migrate to SaaS
- Helping Customers Decide to Migrate to SaaS
- Customer Health Assessment and Management
- Customer Onboarding
- Customer Renewal Tracking
- Customer Success Escalations Process
Infrastructure Escalations
- Infrastructure Escalations
- Customer Success READMEs
Aleesha Dawson's README
Oliver Falk's README
- Aleesha Dawson's README
- Oliver Falk's README
- Customer Success Teams
AMER CSMs
APJ CSMs
CSEs
CSE Content
CSE Direct Responsible Individuals (DRI)
CSE Operating Rhythm
CSE Playbooks page
CSE Team Member Onboarding
Customer Onboarding Best Practices
Customer Success Architects (CSA)
EMEA CSMs
- AMER CSMs
- APJ CSMs
- CSEs
CSE Content
CSE Direct Responsible Individuals (DRI)
CSE Operating Rhythm
CSE Playbooks page
CSE Team Member Onboarding
Customer Onboarding Best Practices
- CSE Content
- CSE Direct Responsible Individuals (DRI)
- CSE Operating Rhythm
- CSE Playbooks page
- CSE Team Member Onboarding
- Customer Onboarding Best Practices
- Customer Success Architects (CSA)
- EMEA CSMs
- DevSecOps Adoption Tracking in Gainsight
- Digital Customer Programs
- Engaging with Partners
- Engaging with Professional Services
- Executive Business Reviews (EBRs)
- FY24 Big Rocks
- FY25 CS Retrospective Program
- Leadership Recurring Check-Ins
- Researching Customer Questions
- Roleplay Scenarios
- Service Ping FAQ
- Stage Adoption Metrics
- Success Plans
Continuous Planning
Questions & Techniques for Success Plan Discovery
- Continuous Planning
- Questions & Techniques for Success Plan Discovery
- Using Calendly as a CSM
- Using Gainsight as a CSM
Calls to Action (CTAs)
CSM Dashboard Overview
Customer 360
Customer Deployment Types
Gainsight Dashboards
Using Timeline
- Calls to Action (CTAs)
- CSM Dashboard Overview
- Customer 360
- Customer Deployment Types
- Gainsight Dashboards
- Using Timeline
- Using Issue Prioritization Dashboard as a CSM
- Using the Customer Collaboration Project as a CSM
- Workshops and Enablement Sessions
- Customer Success Playbooks
Continuous Delivery (CD) / Release Stage Playbook
Continuous Integration (CI) / Verify Workshop
GitLab Server Migrations Playbook
- Continuous Delivery (CD) / Release Stage Playbook
- Continuous Integration (CI) / Verify Workshop
- GitLab Server Migrations Playbook
- Customer Success Reporting and Dashboarding framework
- Customer Success Vision
- Customer Success' Frequently Asked Questions
- Customer Terrain Mapping Engagements
- Customer Workshops
CI Workshop
Innersource Workshop
Secure Workshop
CSM Secure Workshop Discovery Questionnaire
- CI Workshop
- Innersource Workshop
- Secure Workshop
CSM Secure Workshop Discovery Questionnaire
- CSM Secure Workshop Discovery Questionnaire
- Demo Systems
Demo Systems Onboarding
Demo Systems Tutorials
Getting Started Tutorials
Configuring GitLab with group-level Kubernetes cluster
Integration Tutorials
Create a Jenkins Pipeline
Environments
Training Cloud Omnibus-as-a-Service
Infrastructure
Demo Systems Infrastructure - Kubernetes
Demo Systems Infrastructure - Networking
- Demo Systems Onboarding
- Demo Systems Tutorials
Getting Started Tutorials
Configuring GitLab with group-level Kubernetes cluster
Integration Tutorials
Create a Jenkins Pipeline
- Getting Started Tutorials
Configuring GitLab with group-level Kubernetes cluster
- Configuring GitLab with group-level Kubernetes cluster
- Integration Tutorials
Create a Jenkins Pipeline
- Create a Jenkins Pipeline
- Environments
Training Cloud Omnibus-as-a-Service
- Training Cloud Omnibus-as-a-Service
- Infrastructure
Demo Systems Infrastructure - Kubernetes
Demo Systems Infrastructure - Networking
- Demo Systems Infrastructure - Kubernetes
- Demo Systems Infrastructure - Networking
- Educational Services
GitLab Education Services Support Handbook
Tech Stack
Articulate 360 Tech Stack Guide
Credly Tech Stack Guide
Instruqt Tech Stack Guide
- GitLab Education Services Support Handbook
- Tech Stack
Articulate 360 Tech Stack Guide
Credly Tech Stack Guide
Instruqt Tech Stack Guide
- Articulate 360 Tech Stack Guide
- Credly Tech Stack Guide
- Instruqt Tech Stack Guide
- GitLab Product Training for Customer Success
- GitLab Quick Start for New GitLab.com Customers
- Initiatives
Communities of Practice
- Communities of Practice
- Partners
Partner Capabilities Journey
- Partner Capabilities Journey
- Product Usage Reporting Vision
Freemium SaaS Usage Data
Gainsight: Using Gainsight Statistics in SFDC
GitLab Usage Statistics
Health Scoring - Calculations and Methodology
How to Use Product Usage Reporting
Platform Adoption Scoring
Product usage playbooks with usage metrics
Use Case Adoption Scoring
- Freemium SaaS Usage Data
- Gainsight: Using Gainsight Statistics in SFDC
- GitLab Usage Statistics
- Health Scoring - Calculations and Methodology
- How to Use Product Usage Reporting
- Platform Adoption Scoring
- Product usage playbooks with usage metrics
- Use Case Adoption Scoring
- Professional Services Team Handbook
Delivery Checklists
Developing Software for Professional Services
GitLab Certified Migration Services Engineer
GitLab Certified Trainer Program
GitLab Professional Education Services
GitLab Agile Portfolio Management - Hands-On Lab Overview
GitLab Agile Portfolio Management - Hands-On Lab: Access The GitLab Training Environment
GitLab Agile Portfolio Management - Hands-On Lab: Create an Organizational Structure in GitLab
GitLab Agile Portfolio Management - Hands-On Lab: Create And Customize Issue Boards
GitLab Agile Portfolio Management - Hands-On Lab: Create And Manage A Kanban Board
GitLab Agile Portfolio Management - Hands-On Lab: Create And Manage A Scrum Board
GitLab Agile Portfolio Management - Hands-On Lab: Create And Manage A Waterfall Board
GitLab Agile Portfolio Management - Hands-On Lab: Organize and Manage Issues
GitLab Agile Portfolio Management - Hands-On Lab: Use GitLab Planning Tools
GitLab Agile Portfolio Management- Hands-On Lab: Create Issues
GitLab Agile Portfolio Management- Hands-On Lab: Use A Merge Request To Review And Merge Code
GitLab CI/CD - Hands-On Lab Overview
GitLab CI/CD - Hands-On Lab: Code Quality Scanning
GitLab CI/CD - Hands-On Lab: Create A Basic CI Configuration
GitLab CI/CD - Hands-On Lab: Defining Stages, Jobs, and Runners
GitLab CI/CD - Hands-On Lab: Display Pipeline Info
GitLab CI/CD - Hands-On Lab: Job Policy Patterns
GitLab CI/CD - Hands-On Lab: Security Scanning
GitLab CI/CD - Hands-On Lab: Understanding the Basics of Pipelines
GitLab CI/CD - Hands-On Lab: Using Artifacts
GitLab CI/CD - Hands-On Lab: Variable Hierarchy
GitLab CI/CD - Hands-On Lab: Working with the GitLab Container Registry
GitLab Duo Principles - Hands-On Lab Overview
GitLab Duo Principles - Hands-On Lab: Code Generation with GitLab Duo Chat
GitLab Duo Principles - Hands-On Lab: Getting Started with GitLab Duo
GitLab Duo Principles - Hands-On Lab: Using GitLab Duo to Write New Code
GitLab Duo Principles - Hands-On Lab: Working with Issues and Merge Requests
GitLab Duo Principles - Hands-On Lab: Working with Security Vulnerabilities
GitLab Professional Education Services ILT Labs
GitLab Advanced CI/CD - Hands-On Lab Overview
GitLab Advanced CI/CD - Hands-On Lab: Configurations for Complex Processes
GitLab Advanced CI/CD - Hands-On Lab: Deployment Strategies
GitLab Advanced CI/CD - Hands-On Lab: GitLab Runners Deep Dive
GitLab Advanced CI/CD - Hands-On Lab: Optimizing Build Pipelines
GitLab Advanced CI/CD - Hands-On Lab: Optimizing Pipeline Testing
GitLab Advanced CI/CD - Hands-On Lab: Review Apps
GitLab Advanced CI/CD - Hands-On Lab: Reviewing Best Practices
GitLab Agile Portfolio Management - Hands-On Lab Overview
GitLab Agile Portfolio Management - Hands-On Lab: Access The GitLab Training Environment
GitLab Agile Portfolio Management - Hands-On Lab: Create an Organizational Structure in GitLab
GitLab Agile Portfolio Management - Hands-On Lab: Create And Customize Issue Boards
GitLab Agile Portfolio Management - Hands-On Lab: Create And Manage A Kanban Board
GitLab Agile Portfolio Management - Hands-On Lab: Create And Manage A Scrum Board
GitLab Agile Portfolio Management - Hands-On Lab: Create And Manage A Waterfall Board
GitLab Agile Portfolio Management - Hands-On Lab: Organize and Manage Issues
GitLab Agile Portfolio Management - Hands-On Lab: Use GitLab Planning Tools
GitLab Agile Portfolio Management- Hands-On Lab: Create Issues
GitLab Agile Portfolio Management- Hands-On Lab: Use A Merge Request To Review And Merge Code
GitLab CI/CD - Hands-On Lab Overview
GitLab CI/CD - Hands-On Lab: Configure a Pipeline to Build an Application
GitLab CI/CD - Hands-On Lab: Configuring Pipeline Testing
GitLab CI/CD - Hands-On Lab: Deploying Applications
GitLab CI/CD - Hands-On Lab: Investigating Broken Pipelines
GitLab CI/CD - Hands-On Lab: Rules and Merging Changes
GitLab CI/CD - Hands-On Lab: Working with CI/CD Components
GitLab Compliance - Compliance Center and Frameworks
GitLab Compliance - Hands-On Lab Overview
GitLab Compliance - Hands-On Lab: Audit Events
GitLab Compliance - Hands-On Lab: Compliance Reports
GitLab Compliance - Hands-On Lab: Enable and Configure License Compliance
GitLab Compliance - Hands-On Lab: Pipeline Execution Policies
GitLab Compliance - Hands-On Lab: Scan Execution Policies
GitLab Compliance - Repository Control
GitLab Compliance - Separation of Privileges
GitLab Security Essentials - Hands-On Lab Overview
GitLab Security Essentials - Hands-On Lab: Addressing Vulnerabilities
GitLab Security Essentials - Hands-On Lab: Container Scanning
GitLab Security Essentials - Hands-On Lab: DAST and API Scans
GitLab Security Essentials - Hands-On Lab: Dependency and IaC Scanning
GitLab Security Essentials - Hands-On Lab: Enable and Scan Using a Scan Execution Policy
GitLab Security Essentials - Hands-On Lab: SAST and Secret Detection
GitLab System Admin - Hands-On Lab: Exploring the GitLab Kubernetes Instance
GitLab System Admin - Hands-On Lab: Exploring the GitLab Omnibus Instance
GitLab System Admin - Hands-On Lab: Exploring the Kubernetes Admin Dashboard
GitLab System Admin - Hands-On Lab: Exploring the Omnibus Admin Dashboard
GitLab System Admin - Hands-On Lab: Kubernetes Backup and Restore
GitLab System Admin - Hands-On Lab: Logging and Monitoring GitLab Kubernetes
GitLab System Admin - Hands-On Lab: Logging and Monitoring GitLab Omnibus
GitLab System Admin - Hands-On Lab: Omnibus Backup and Restore
GitLab System Admin - Hands-On Lab: Troubleshooting GitLab Kubernetes
GitLab System Admin - Hands-On Lab: Troubleshooting GitLab Omnibus
GitLab System Admin - Hands-On Lab: Upgrading GitLab Kubernetes
GitLab System Admin - Hands-On Lab: Upgrading GitLab Omnibus
GitLab System Administration with Kubernetes - Hands-On Lab Overview
GitLab System Administration with Omnibus - Hands-On Lab Overview
GitLab with Git Fundamentals - Hands-On Lab Overview
GitLab with Git Fundamentals - Hands-on Lab: Auto DevOps With a Predefined Project Template
GitLab with Git Fundamentals - Hands-on Lab: Build a .gitlab-ci.yml file
GitLab with Git Fundamentals - Hands-On Lab: Create a project and issue
GitLab with Git Fundamentals - Hands-On Lab: Static Application Security Testing (SAST)
GitLab with Git Fundamentals - Hands-On Lab: Use GitLab To Merge Code
GitLab with Git Fundamentals - Hands-on Lab: Work With Git Locally
GitLab Security Essentials - Hands-On Lab Overview
GitLab Security Essentials - Hands-On Lab: Configure SAST, Secret Detection, and DAST
GitLab Security Essentials - Hands-On Lab: Enable and Configure Container Scanning
GitLab Security Essentials - Hands-On Lab: Enable and Configure Coverage-Guided Fuzz Testing
GitLab Security Essentials - Hands-On Lab: Enable and Configure Dependency Scanning
GitLab Security Essentials - Hands-On Lab: Enable and Configure License Compliance
GitLab Security Essentials - Hands-On Lab: Enable and Scan Using a Scan Execution Policy
GitLab System Administration - Hands-on Lab: Backup and Restore GitLab
GitLab System Administration - Hands-on Lab: Configure GitLab Runners
GitLab System Administration - Hands-on Lab: Configure Instance Monitoring
GitLab System Administration - Hands-on Lab: Implement Sign-Up Restrictions
GitLab System Administration - Hands-on Lab: Install GitLab
GitLab System Administration - Hands-on Lab: Manage GitLab Logs
GitLab System Administration - Hands-on Lab: Troubleshoot GitLab
GitLab System Administration - Hands-on Lab: Use GitLab Administration Commands
GitLab System Administration Hands-on Lab Overview
GitLab with Git Fundamentals - Hands-On Lab Overview
GitLab with Git Fundamentals - Hands-on Lab: Auto DevOps With a Predefined Project Template
GitLab with Git Fundamentals - Hands-on Lab: Build a .gitlab-ci.yml file
GitLab with Git Fundamentals - Hands-On Lab: Create a project and issue
GitLab with Git Fundamentals - Hands-On Lab: Static Application Security Testing (SAST)
GitLab with Git Fundamentals - Hands-On Lab: Use GitLab To Merge Code
GitLab with Git Fundamentals - Hands-on Lab: Work With Git Locally
Thought Industries LMS Tech Stack Guide
GitLab Technical Certifications
Partner Collaboration
Positioning Professional Services
Professional Service Operations
Mavenlink Processes
Professional Services Delivery Methodology
Agile to GitLab Terminology Mapping
Archetype Definition
Backlog Management
Definition of Done
Definition of Ready
Discovery
GitLab Best Practices
Good Estimation Techniques
Good User Stories
How to Use CP Automation to Manage Engagements
Iteration 0
Iteration 0 Fundamentals
Iteration Planning per Service Offering
Iteration Scheduling
Managing Risk, Project Wins, and Business Development
Retrospectives
Professional Services Engagement Management
GitLab Certified Engagement Manager Professional
Professional Services EM Opportunity Tracking
Professional Services EM Scoping Guidelines
Professional Services EM Implementation Scoping
Professional Services EM Scoping - CI/CD Pipeline Migration
Professional Services EM Scoping - Migrations
Migrating from Self-Managed GitLab to GitLab.com
Professional Services EM Scoping - Transformational Services
Scoping a Readiness Assessment
Professional Services Engagement Management - SOW Creation
Professional Services Engagement Management - Transacting ProServ business through AWS Marketplace
Task Prioritization
Professional Services Engineering Workflows
Artifacts
After Action Reports
Architecture Diagrams
Intake
AWS Intake
On-prem Intake
Internal
15-minute Standup
Blameless Root Cause Analyses
Professional Services Business Operations
Process
Project Execution
Project Kick-off
Sign-off
Standing Calls
Welcome E-mail
Professional Services Instructional Design and Development
Professional Services Offerings
Professional Services Offerings Framework
Professional Services Partner Invoice Example
Professional Services Practice Management
Professional Services Pre-Sales Methodology
Professional Services Project Management
Professional Services Remote Training Session Setup and Reporting
Professional Services Technical Architect
PS Standard SKUs
Remote Training Facilitation Best Practices
Selling GitLab Professional Services
Services to Accelerate Customer Adoption
Setting up your Development Environment
Working with Professional Services
- Delivery Checklists
- Developing Software for Professional Services
- GitLab Certified Migration Services Engineer
- GitLab Certified Trainer Program
- GitLab Professional Education Services
GitLab Agile Portfolio Management - Hands-On Lab Overview
GitLab Agile Portfolio Management - Hands-On Lab: Access The GitLab Training Environment
GitLab Agile Portfolio Management - Hands-On Lab: Create an Organizational Structure in GitLab
GitLab Agile Portfolio Management - Hands-On Lab: Create And Customize Issue Boards
GitLab Agile Portfolio Management - Hands-On Lab: Create And Manage A Kanban Board
GitLab Agile Portfolio Management - Hands-On Lab: Create And Manage A Scrum Board
GitLab Agile Portfolio Management - Hands-On Lab: Create And Manage A Waterfall Board
GitLab Agile Portfolio Management - Hands-On Lab: Organize and Manage Issues
GitLab Agile Portfolio Management - Hands-On Lab: Use GitLab Planning Tools
GitLab Agile Portfolio Management- Hands-On Lab: Create Issues
GitLab Agile Portfolio Management- Hands-On Lab: Use A Merge Request To Review And Merge Code
GitLab CI/CD - Hands-On Lab Overview
GitLab CI/CD - Hands-On Lab: Code Quality Scanning
GitLab CI/CD - Hands-On Lab: Create A Basic CI Configuration
GitLab CI/CD - Hands-On Lab: Defining Stages, Jobs, and Runners
GitLab CI/CD - Hands-On Lab: Display Pipeline Info
GitLab CI/CD - Hands-On Lab: Job Policy Patterns
GitLab CI/CD - Hands-On Lab: Security Scanning
GitLab CI/CD - Hands-On Lab: Understanding the Basics of Pipelines
GitLab CI/CD - Hands-On Lab: Using Artifacts
GitLab CI/CD - Hands-On Lab: Variable Hierarchy
GitLab CI/CD - Hands-On Lab: Working with the GitLab Container Registry
GitLab Duo Principles - Hands-On Lab Overview
GitLab Duo Principles - Hands-On Lab: Code Generation with GitLab Duo Chat
GitLab Duo Principles - Hands-On Lab: Getting Started with GitLab Duo
GitLab Duo Principles - Hands-On Lab: Using GitLab Duo to Write New Code
GitLab Duo Principles - Hands-On Lab: Working with Issues and Merge Requests
GitLab Duo Principles - Hands-On Lab: Working with Security Vulnerabilities
GitLab Professional Education Services ILT Labs
GitLab Advanced CI/CD - Hands-On Lab Overview
GitLab Advanced CI/CD - Hands-On Lab: Configurations for Complex Processes
GitLab Advanced CI/CD - Hands-On Lab: Deployment Strategies
GitLab Advanced CI/CD - Hands-On Lab: GitLab Runners Deep Dive
GitLab Advanced CI/CD - Hands-On Lab: Optimizing Build Pipelines
GitLab Advanced CI/CD - Hands-On Lab: Optimizing Pipeline Testing
GitLab Advanced CI/CD - Hands-On Lab: Review Apps
GitLab Advanced CI/CD - Hands-On Lab: Reviewing Best Practices
GitLab Agile Portfolio Management - Hands-On Lab Overview
GitLab Agile Portfolio Management - Hands-On Lab: Access The GitLab Training Environment
GitLab Agile Portfolio Management - Hands-On Lab: Create an Organizational Structure in GitLab
GitLab Agile Portfolio Management - Hands-On Lab: Create And Customize Issue Boards
GitLab Agile Portfolio Management - Hands-On Lab: Create And Manage A Kanban Board
GitLab Agile Portfolio Management - Hands-On Lab: Create And Manage A Scrum Board
GitLab Agile Portfolio Management - Hands-On Lab: Create And Manage A Waterfall Board
GitLab Agile Portfolio Management - Hands-On Lab: Organize and Manage Issues
GitLab Agile Portfolio Management - Hands-On Lab: Use GitLab Planning Tools
GitLab Agile Portfolio Management- Hands-On Lab: Create Issues
GitLab Agile Portfolio Management- Hands-On Lab: Use A Merge Request To Review And Merge Code
GitLab CI/CD - Hands-On Lab Overview
GitLab CI/CD - Hands-On Lab: Configure a Pipeline to Build an Application
GitLab CI/CD - Hands-On Lab: Configuring Pipeline Testing
GitLab CI/CD - Hands-On Lab: Deploying Applications
GitLab CI/CD - Hands-On Lab: Investigating Broken Pipelines
GitLab CI/CD - Hands-On Lab: Rules and Merging Changes
GitLab CI/CD - Hands-On Lab: Working with CI/CD Components
GitLab Compliance - Compliance Center and Frameworks
GitLab Compliance - Hands-On Lab Overview
GitLab Compliance - Hands-On Lab: Audit Events
GitLab Compliance - Hands-On Lab: Compliance Reports
GitLab Compliance - Hands-On Lab: Enable and Configure License Compliance
GitLab Compliance - Hands-On Lab: Pipeline Execution Policies
GitLab Compliance - Hands-On Lab: Scan Execution Policies
GitLab Compliance - Repository Control
GitLab Compliance - Separation of Privileges
GitLab Security Essentials - Hands-On Lab Overview
GitLab Security Essentials - Hands-On Lab: Addressing Vulnerabilities
GitLab Security Essentials - Hands-On Lab: Container Scanning
GitLab Security Essentials - Hands-On Lab: DAST and API Scans
GitLab Security Essentials - Hands-On Lab: Dependency and IaC Scanning
GitLab Security Essentials - Hands-On Lab: Enable and Scan Using a Scan Execution Policy
GitLab Security Essentials - Hands-On Lab: SAST and Secret Detection
GitLab System Admin - Hands-On Lab: Exploring the GitLab Kubernetes Instance
GitLab System Admin - Hands-On Lab: Exploring the GitLab Omnibus Instance
GitLab System Admin - Hands-On Lab: Exploring the Kubernetes Admin Dashboard
GitLab System Admin - Hands-On Lab: Exploring the Omnibus Admin Dashboard
GitLab System Admin - Hands-On Lab: Kubernetes Backup and Restore
GitLab System Admin - Hands-On Lab: Logging and Monitoring GitLab Kubernetes
GitLab System Admin - Hands-On Lab: Logging and Monitoring GitLab Omnibus
GitLab System Admin - Hands-On Lab: Omnibus Backup and Restore
GitLab System Admin - Hands-On Lab: Troubleshooting GitLab Kubernetes
GitLab System Admin - Hands-On Lab: Troubleshooting GitLab Omnibus
GitLab System Admin - Hands-On Lab: Upgrading GitLab Kubernetes
GitLab System Admin - Hands-On Lab: Upgrading GitLab Omnibus
GitLab System Administration with Kubernetes - Hands-On Lab Overview
GitLab System Administration with Omnibus - Hands-On Lab Overview
GitLab with Git Fundamentals - Hands-On Lab Overview
GitLab with Git Fundamentals - Hands-on Lab: Auto DevOps With a Predefined Project Template
GitLab with Git Fundamentals - Hands-on Lab: Build a .gitlab-ci.yml file
GitLab with Git Fundamentals - Hands-On Lab: Create a project and issue
GitLab with Git Fundamentals - Hands-On Lab: Static Application Security Testing (SAST)
GitLab with Git Fundamentals - Hands-On Lab: Use GitLab To Merge Code
GitLab with Git Fundamentals - Hands-on Lab: Work With Git Locally
GitLab Security Essentials - Hands-On Lab Overview
GitLab Security Essentials - Hands-On Lab: Configure SAST, Secret Detection, and DAST
GitLab Security Essentials - Hands-On Lab: Enable and Configure Container Scanning
GitLab Security Essentials - Hands-On Lab: Enable and Configure Coverage-Guided Fuzz Testing
GitLab Security Essentials - Hands-On Lab: Enable and Configure Dependency Scanning
GitLab Security Essentials - Hands-On Lab: Enable and Configure License Compliance
GitLab Security Essentials - Hands-On Lab: Enable and Scan Using a Scan Execution Policy
GitLab System Administration - Hands-on Lab: Backup and Restore GitLab
GitLab System Administration - Hands-on Lab: Configure GitLab Runners
GitLab System Administration - Hands-on Lab: Configure Instance Monitoring
GitLab System Administration - Hands-on Lab: Implement Sign-Up Restrictions
GitLab System Administration - Hands-on Lab: Install GitLab
GitLab System Administration - Hands-on Lab: Manage GitLab Logs
GitLab System Administration - Hands-on Lab: Troubleshoot GitLab
GitLab System Administration - Hands-on Lab: Use GitLab Administration Commands
GitLab System Administration Hands-on Lab Overview
GitLab with Git Fundamentals - Hands-On Lab Overview
GitLab with Git Fundamentals - Hands-on Lab: Auto DevOps With a Predefined Project Template
GitLab with Git Fundamentals - Hands-on Lab: Build a .gitlab-ci.yml file
GitLab with Git Fundamentals - Hands-On Lab: Create a project and issue
GitLab with Git Fundamentals - Hands-On Lab: Static Application Security Testing (SAST)
GitLab with Git Fundamentals - Hands-On Lab: Use GitLab To Merge Code
GitLab with Git Fundamentals - Hands-on Lab: Work With Git Locally
Thought Industries LMS Tech Stack Guide
- GitLab Agile Portfolio Management - Hands-On Lab Overview
- GitLab Agile Portfolio Management - Hands-On Lab: Access The GitLab Training Environment
- GitLab Agile Portfolio Management - Hands-On Lab: Create an Organizational Structure in GitLab
- GitLab Agile Portfolio Management - Hands-On Lab: Create And Customize Issue Boards
- GitLab Agile Portfolio Management - Hands-On Lab: Create And Manage A Kanban Board
- GitLab Agile Portfolio Management - Hands-On Lab: Create And Manage A Scrum Board
- GitLab Agile Portfolio Management - Hands-On Lab: Create And Manage A Waterfall Board
- GitLab Agile Portfolio Management - Hands-On Lab: Organize and Manage Issues
- GitLab Agile Portfolio Management - Hands-On Lab: Use GitLab Planning Tools
- GitLab Agile Portfolio Management- Hands-On Lab: Create Issues
- GitLab Agile Portfolio Management- Hands-On Lab: Use A Merge Request To Review And Merge Code
- GitLab CI/CD - Hands-On Lab Overview
- GitLab CI/CD - Hands-On Lab: Code Quality Scanning
- GitLab CI/CD - Hands-On Lab: Create A Basic CI Configuration
- GitLab CI/CD - Hands-On Lab: Defining Stages, Jobs, and Runners
- GitLab CI/CD - Hands-On Lab: Display Pipeline Info
- GitLab CI/CD - Hands-On Lab: Job Policy Patterns
- GitLab CI/CD - Hands-On Lab: Security Scanning
- GitLab CI/CD - Hands-On Lab: Understanding the Basics of Pipelines
- GitLab CI/CD - Hands-On Lab: Using Artifacts
- GitLab CI/CD - Hands-On Lab: Variable Hierarchy
- GitLab CI/CD - Hands-On Lab: Working with the GitLab Container Registry
- GitLab Duo Principles - Hands-On Lab Overview
- GitLab Duo Principles - Hands-On Lab: Code Generation with GitLab Duo Chat
- GitLab Duo Principles - Hands-On Lab: Getting Started with GitLab Duo
- GitLab Duo Principles - Hands-On Lab: Using GitLab Duo to Write New Code
- GitLab Duo Principles - Hands-On Lab: Working with Issues and Merge Requests
- GitLab Duo Principles - Hands-On Lab: Working with Security Vulnerabilities
- GitLab Professional Education Services ILT Labs
GitLab Advanced CI/CD - Hands-On Lab Overview
GitLab Advanced CI/CD - Hands-On Lab: Configurations for Complex Processes
GitLab Advanced CI/CD - Hands-On Lab: Deployment Strategies
GitLab Advanced CI/CD - Hands-On Lab: GitLab Runners Deep Dive
GitLab Advanced CI/CD - Hands-On Lab: Optimizing Build Pipelines
GitLab Advanced CI/CD - Hands-On Lab: Optimizing Pipeline Testing
GitLab Advanced CI/CD - Hands-On Lab: Review Apps
GitLab Advanced CI/CD - Hands-On Lab: Reviewing Best Practices
GitLab Agile Portfolio Management - Hands-On Lab Overview
GitLab Agile Portfolio Management - Hands-On Lab: Access The GitLab Training Environment
GitLab Agile Portfolio Management - Hands-On Lab: Create an Organizational Structure in GitLab
GitLab Agile Portfolio Management - Hands-On Lab: Create And Customize Issue Boards
GitLab Agile Portfolio Management - Hands-On Lab: Create And Manage A Kanban Board
GitLab Agile Portfolio Management - Hands-On Lab: Create And Manage A Scrum Board
GitLab Agile Portfolio Management - Hands-On Lab: Create And Manage A Waterfall Board
GitLab Agile Portfolio Management - Hands-On Lab: Organize and Manage Issues
GitLab Agile Portfolio Management - Hands-On Lab: Use GitLab Planning Tools
GitLab Agile Portfolio Management- Hands-On Lab: Create Issues
GitLab Agile Portfolio Management- Hands-On Lab: Use A Merge Request To Review And Merge Code
GitLab CI/CD - Hands-On Lab Overview
GitLab CI/CD - Hands-On Lab: Configure a Pipeline to Build an Application
GitLab CI/CD - Hands-On Lab: Configuring Pipeline Testing
GitLab CI/CD - Hands-On Lab: Deploying Applications
GitLab CI/CD - Hands-On Lab: Investigating Broken Pipelines
GitLab CI/CD - Hands-On Lab: Rules and Merging Changes
GitLab CI/CD - Hands-On Lab: Working with CI/CD Components
GitLab Compliance - Compliance Center and Frameworks
GitLab Compliance - Hands-On Lab Overview
GitLab Compliance - Hands-On Lab: Audit Events
GitLab Compliance - Hands-On Lab: Compliance Reports
GitLab Compliance - Hands-On Lab: Enable and Configure License Compliance
GitLab Compliance - Hands-On Lab: Pipeline Execution Policies
GitLab Compliance - Hands-On Lab: Scan Execution Policies
GitLab Compliance - Repository Control
GitLab Compliance - Separation of Privileges
GitLab Security Essentials - Hands-On Lab Overview
GitLab Security Essentials - Hands-On Lab: Addressing Vulnerabilities
GitLab Security Essentials - Hands-On Lab: Container Scanning
GitLab Security Essentials - Hands-On Lab: DAST and API Scans
GitLab Security Essentials - Hands-On Lab: Dependency and IaC Scanning
GitLab Security Essentials - Hands-On Lab: Enable and Scan Using a Scan Execution Policy
GitLab Security Essentials - Hands-On Lab: SAST and Secret Detection
GitLab System Admin - Hands-On Lab: Exploring the GitLab Kubernetes Instance
GitLab System Admin - Hands-On Lab: Exploring the GitLab Omnibus Instance
GitLab System Admin - Hands-On Lab: Exploring the Kubernetes Admin Dashboard
GitLab System Admin - Hands-On Lab: Exploring the Omnibus Admin Dashboard
GitLab System Admin - Hands-On Lab: Kubernetes Backup and Restore
GitLab System Admin - Hands-On Lab: Logging and Monitoring GitLab Kubernetes
GitLab System Admin - Hands-On Lab: Logging and Monitoring GitLab Omnibus
GitLab System Admin - Hands-On Lab: Omnibus Backup and Restore
GitLab System Admin - Hands-On Lab: Troubleshooting GitLab Kubernetes
GitLab System Admin - Hands-On Lab: Troubleshooting GitLab Omnibus
GitLab System Admin - Hands-On Lab: Upgrading GitLab Kubernetes
GitLab System Admin - Hands-On Lab: Upgrading GitLab Omnibus
GitLab System Administration with Kubernetes - Hands-On Lab Overview
GitLab System Administration with Omnibus - Hands-On Lab Overview
GitLab with Git Fundamentals - Hands-On Lab Overview
GitLab with Git Fundamentals - Hands-on Lab: Auto DevOps With a Predefined Project Template
GitLab with Git Fundamentals - Hands-on Lab: Build a .gitlab-ci.yml file
GitLab with Git Fundamentals - Hands-On Lab: Create a project and issue
GitLab with Git Fundamentals - Hands-On Lab: Static Application Security Testing (SAST)
GitLab with Git Fundamentals - Hands-On Lab: Use GitLab To Merge Code
GitLab with Git Fundamentals - Hands-on Lab: Work With Git Locally
- GitLab Advanced CI/CD - Hands-On Lab Overview
- GitLab Advanced CI/CD - Hands-On Lab: Configurations for Complex Processes
- GitLab Advanced CI/CD - Hands-On Lab: Deployment Strategies
- GitLab Advanced CI/CD - Hands-On Lab: GitLab Runners Deep Dive
- GitLab Advanced CI/CD - Hands-On Lab: Optimizing Build Pipelines
- GitLab Advanced CI/CD - Hands-On Lab: Optimizing Pipeline Testing
- GitLab Advanced CI/CD - Hands-On Lab: Review Apps
- GitLab Advanced CI/CD - Hands-On Lab: Reviewing Best Practices
- GitLab Agile Portfolio Management - Hands-On Lab Overview
- GitLab Agile Portfolio Management - Hands-On Lab: Access The GitLab Training Environment
- GitLab Agile Portfolio Management - Hands-On Lab: Create an Organizational Structure in GitLab
- GitLab Agile Portfolio Management - Hands-On Lab: Create And Customize Issue Boards
- GitLab Agile Portfolio Management - Hands-On Lab: Create And Manage A Kanban Board
- GitLab Agile Portfolio Management - Hands-On Lab: Create And Manage A Scrum Board
- GitLab Agile Portfolio Management - Hands-On Lab: Create And Manage A Waterfall Board
- GitLab Agile Portfolio Management - Hands-On Lab: Organize and Manage Issues
- GitLab Agile Portfolio Management - Hands-On Lab: Use GitLab Planning Tools
- GitLab Agile Portfolio Management- Hands-On Lab: Create Issues
- GitLab Agile Portfolio Management- Hands-On Lab: Use A Merge Request To Review And Merge Code
- GitLab CI/CD - Hands-On Lab Overview
- GitLab CI/CD - Hands-On Lab: Configure a Pipeline to Build an Application
- GitLab CI/CD - Hands-On Lab: Configuring Pipeline Testing
- GitLab CI/CD - Hands-On Lab: Deploying Applications
- GitLab CI/CD - Hands-On Lab: Investigating Broken Pipelines
- GitLab CI/CD - Hands-On Lab: Rules and Merging Changes
- GitLab CI/CD - Hands-On Lab: Working with CI/CD Components
- GitLab Compliance - Compliance Center and Frameworks
- GitLab Compliance - Hands-On Lab Overview
- GitLab Compliance - Hands-On Lab: Audit Events
- GitLab Compliance - Hands-On Lab: Compliance Reports
- GitLab Compliance - Hands-On Lab: Enable and Configure License Compliance
- GitLab Compliance - Hands-On Lab: Pipeline Execution Policies
- GitLab Compliance - Hands-On Lab: Scan Execution Policies
- GitLab Compliance - Repository Control
- GitLab Compliance - Separation of Privileges
- GitLab Security Essentials - Hands-On Lab Overview
- GitLab Security Essentials - Hands-On Lab: Addressing Vulnerabilities
- GitLab Security Essentials - Hands-On Lab: Container Scanning
- GitLab Security Essentials - Hands-On Lab: DAST and API Scans
- GitLab Security Essentials - Hands-On Lab: Dependency and IaC Scanning
- GitLab Security Essentials - Hands-On Lab: Enable and Scan Using a Scan Execution Policy
- GitLab Security Essentials - Hands-On Lab: SAST and Secret Detection
- GitLab System Admin - Hands-On Lab: Exploring the GitLab Kubernetes Instance
- GitLab System Admin - Hands-On Lab: Exploring the GitLab Omnibus Instance
- GitLab System Admin - Hands-On Lab: Exploring the Kubernetes Admin Dashboard
- GitLab System Admin - Hands-On Lab: Exploring the Omnibus Admin Dashboard
- GitLab System Admin - Hands-On Lab: Kubernetes Backup and Restore
- GitLab System Admin - Hands-On Lab: Logging and Monitoring GitLab Kubernetes
- GitLab System Admin - Hands-On Lab: Logging and Monitoring GitLab Omnibus
- GitLab System Admin - Hands-On Lab: Omnibus Backup and Restore
- GitLab System Admin - Hands-On Lab: Troubleshooting GitLab Kubernetes
- GitLab System Admin - Hands-On Lab: Troubleshooting GitLab Omnibus
- GitLab System Admin - Hands-On Lab: Upgrading GitLab Kubernetes
- GitLab System Admin - Hands-On Lab: Upgrading GitLab Omnibus
- GitLab System Administration with Kubernetes - Hands-On Lab Overview
- GitLab System Administration with Omnibus - Hands-On Lab Overview
- GitLab with Git Fundamentals - Hands-On Lab Overview
- GitLab with Git Fundamentals - Hands-on Lab: Auto DevOps With a Predefined Project Template
- GitLab with Git Fundamentals - Hands-on Lab: Build a .gitlab-ci.yml file
- GitLab with Git Fundamentals - Hands-On Lab: Create a project and issue
- GitLab with Git Fundamentals - Hands-On Lab: Static Application Security Testing (SAST)
- GitLab with Git Fundamentals - Hands-On Lab: Use GitLab To Merge Code
- GitLab with Git Fundamentals - Hands-on Lab: Work With Git Locally
- GitLab Security Essentials - Hands-On Lab Overview
- GitLab Security Essentials - Hands-On Lab: Configure SAST, Secret Detection, and DAST
- GitLab Security Essentials - Hands-On Lab: Enable and Configure Container Scanning
- GitLab Security Essentials - Hands-On Lab: Enable and Configure Coverage-Guided Fuzz Testing
- GitLab Security Essentials - Hands-On Lab: Enable and Configure Dependency Scanning
- GitLab Security Essentials - Hands-On Lab: Enable and Configure License Compliance
- GitLab Security Essentials - Hands-On Lab: Enable and Scan Using a Scan Execution Policy
- GitLab System Administration - Hands-on Lab: Backup and Restore GitLab
- GitLab System Administration - Hands-on Lab: Configure GitLab Runners
- GitLab System Administration - Hands-on Lab: Configure Instance Monitoring
- GitLab System Administration - Hands-on Lab: Implement Sign-Up Restrictions
- GitLab System Administration - Hands-on Lab: Install GitLab
- GitLab System Administration - Hands-on Lab: Manage GitLab Logs
- GitLab System Administration - Hands-on Lab: Troubleshoot GitLab
- GitLab System Administration - Hands-on Lab: Use GitLab Administration Commands
- GitLab System Administration Hands-on Lab Overview
- GitLab with Git Fundamentals - Hands-On Lab Overview
- GitLab with Git Fundamentals - Hands-on Lab: Auto DevOps With a Predefined Project Template
- GitLab with Git Fundamentals - Hands-on Lab: Build a .gitlab-ci.yml file
- GitLab with Git Fundamentals - Hands-On Lab: Create a project and issue
- GitLab with Git Fundamentals - Hands-On Lab: Static Application Security Testing (SAST)
- GitLab with Git Fundamentals - Hands-On Lab: Use GitLab To Merge Code
- GitLab with Git Fundamentals - Hands-on Lab: Work With Git Locally
- Thought Industries LMS Tech Stack Guide
- GitLab Technical Certifications
- Partner Collaboration
- Positioning Professional Services
- Professional Service Operations
Mavenlink Processes
- Mavenlink Processes
- Professional Services Delivery Methodology
Agile to GitLab Terminology Mapping
Archetype Definition
Backlog Management
Definition of Done
Definition of Ready
Discovery
GitLab Best Practices
Good Estimation Techniques
Good User Stories
How to Use CP Automation to Manage Engagements
Iteration 0
Iteration 0 Fundamentals
Iteration Planning per Service Offering
Iteration Scheduling
Managing Risk, Project Wins, and Business Development
Retrospectives
- Agile to GitLab Terminology Mapping
- Archetype Definition
- Backlog Management
- Definition of Done
- Definition of Ready
- Discovery
- GitLab Best Practices
- Good Estimation Techniques
- Good User Stories
- How to Use CP Automation to Manage Engagements
- Iteration 0
- Iteration 0 Fundamentals
- Iteration Planning per Service Offering
- Iteration Scheduling
- Managing Risk, Project Wins, and Business Development
- Retrospectives
- Professional Services Engagement Management
GitLab Certified Engagement Manager Professional
Professional Services EM Opportunity Tracking
Professional Services EM Scoping Guidelines
Professional Services EM Implementation Scoping
Professional Services EM Scoping - CI/CD Pipeline Migration
Professional Services EM Scoping - Migrations
Migrating from Self-Managed GitLab to GitLab.com
Professional Services EM Scoping - Transformational Services
Scoping a Readiness Assessment
Professional Services Engagement Management - SOW Creation
Professional Services Engagement Management - Transacting ProServ business through AWS Marketplace
Task Prioritization
- GitLab Certified Engagement Manager Professional
- Professional Services EM Opportunity Tracking
- Professional Services EM Scoping Guidelines
Professional Services EM Implementation Scoping
Professional Services EM Scoping - CI/CD Pipeline Migration
Professional Services EM Scoping - Migrations
Migrating from Self-Managed GitLab to GitLab.com
Professional Services EM Scoping - Transformational Services
Scoping a Readiness Assessment
- Professional Services EM Implementation Scoping
- Professional Services EM Scoping - CI/CD Pipeline Migration
- Professional Services EM Scoping - Migrations
Migrating from Self-Managed GitLab to GitLab.com
- Migrating from Self-Managed GitLab to GitLab.com
- Professional Services EM Scoping - Transformational Services
- Scoping a Readiness Assessment
- Professional Services Engagement Management - SOW Creation
- Professional Services Engagement Management - Transacting ProServ business through AWS Marketplace
- Task Prioritization
- Professional Services Engineering Workflows
Artifacts
After Action Reports
Architecture Diagrams
Intake
AWS Intake
On-prem Intake
Internal
15-minute Standup
Blameless Root Cause Analyses
Professional Services Business Operations
Process
Project Execution
Project Kick-off
Sign-off
Standing Calls
Welcome E-mail
- Artifacts
After Action Reports
Architecture Diagrams
- After Action Reports
- Architecture Diagrams
- Intake
AWS Intake
On-prem Intake
- AWS Intake
- On-prem Intake
- Internal
15-minute Standup
Blameless Root Cause Analyses
Professional Services Business Operations
- 15-minute Standup
- Blameless Root Cause Analyses
- Professional Services Business Operations
- Process
- Project Execution
Project Kick-off
Sign-off
Standing Calls
Welcome E-mail
- Project Kick-off
- Sign-off
- Standing Calls
- Welcome E-mail
- Professional Services Instructional Design and Development
- Professional Services Offerings
- Professional Services Offerings Framework
- Professional Services Partner Invoice Example
- Professional Services Practice Management
- Professional Services Pre-Sales Methodology
- Professional Services Project Management
- Professional Services Remote Training Session Setup and Reporting
- Professional Services Technical Architect
- PS Standard SKUs
- Remote Training Facilitation Best Practices
- Selling GitLab Professional Services
- Services to Accelerate Customer Adoption
- Setting up your Development Environment
- Working with Professional Services
- Public Sector
Public Sector Solutions Architects
- Public Sector Solutions Architects
- Renewals Managers
Renewals Managers
Renewals Managers - How we do it
Renewals Managers - What we do
RM Onboarding
- Renewals Managers
- Renewals Managers - How we do it
- Renewals Managers - What we do
- RM Onboarding
- Resources to get started with GitLab
- Success Tiers
Accelerator Development Template Usage Guide
- Accelerator Development Template Usage Guide
- Transitioning Accounts from Pre-Sales to Post-Sales
- Using Salesforce within Customer Success
- Engineering
Architecture
Architecture Design Documents
Logging Blueprint for GitLab
Architecture Design Workflow
Guidelines
Database
Practices
Scalability
Technology Roadmap
Core Development Department
Cross Functional Prioritization
CTO Leadership Team
Deployments and Releases
Deployments
Developer Onboarding
Development
Data Science
AI-Powered Stage
AI Framework Group
AI Model Validation Group
AI Model Validation at GitLab
Projects
UnReview Overview
Custom Models Group
Duo Chat Group
Duo Chat's Technical Strategy - 
Duo Workflow Group
Troubleshooting
ModelOps
MLOps
Database Engineering
Dev Sub-department
Create Stage
Create Stage: Talent Assessments
Create Stage: Tech Leads
Create:Code Creation Group
AI Context Taskforce
Create:Code Creation Group engineering overview
Create:Code Creation Group Milestone Planning
Create:Code Creation: Code Suggestions Guide
Code Suggestions Implementation Guidelines
Code Suggestions Model Evaluation Guide
Code Suggestions Model Rollout Guide
Code Suggestions Testing Guide
Create:Code Review Group
Create:Code Review BE Team
Create:Code Review Backend Engineering Resources
Create:Code Review BE Engineering Manager Responsibilities
Create:Code Review FE Team
Merge Request Report Widgets - DRI list
Create:Editor Extensions Group
Ownership and boundaries - Editor Extensions
Create:Remote Development Group
Create:Remote Development Principles
Cultivating Contributions from the Wider Community
Developer Cheatsheet
Create:Source Code teams
Create:Source Code BE Team
Create:Source Code FE Team
Engineering Managers
Engineering Managers Training Opportunities
How we live our values
Meetings
Monitoring
Objectives & Key Results (OKRs)
Recommended Books for Engineering Managers
Engineers
Conferences
Iteration Retrospectives
Managing Effective Skip Level Meetings
Professional Development
Recommended Books for Engineers
Training Opportunities
Foundations Stage
Design System Engineering Team
Global Search Group
Advanced Global Search Rollout on GitLab.com
Global Search - JTBD
Import and Integrate Group
Personal Productivity Engineering Team
Plan Stage
Plan Frontend Engineer Internship
Plan:Knowledge Engineering Team
Plan:Product Planning Engineering Team
Plan:Project Management Team
Working Groups
Epic Work Items Migration
Work Items API Performance Working Group
Training
Staff Engineers
Transitioning from Individual Contributor to a Manager
Development Department Learning and Development
Development Department Learning and Development - Reliability
Engineering manager role explained
Work Of A Manager
Resources for Staff+ roles
Development Department Performance Indicators
Development OKRs
Development Required Approvals
Engineering Principles
Fulfillment Sub-department
Fulfillment Diversity, inclusion, and belonging
Fulfillment Platform Team
Fulfillment Provision Team
Fulfillment Subscription Management Team
Fulfillment Utilization Team
Growth Stage
Experimentation
Growth Fast Boot September 2019
Growth:Acquisition Group
Growth:Activation Group
Keeping secure coding knowledge fresh in development
Manager Notes
Monitor Stage
Analytics Instrumentation Group
Analytics Instrumentation - Monitoring and troubleshooting
Internal Analytics Infrastructure
Monitor:Platform Insights Group
Optimize Group
Onboarding
Engineering Manager Onboarding
Ops Sub-department
Deploy Stage
Environments Group
Auto DevOps
Environments Group - GitLab Quality Assurance End-to-End Testing for the Environments group
FY21 Celebrations - Ops Sub-department
General Planning Process - Ops Sub-department
Ops Hiring Process
Package Stage
Package Group - GitLab Quality Assurance End-to-End Testing for the Package group
Package Stage - The most important use cases for our customers
Project Plans
CI Catalog
Cluster Web Terminal
Container Registry Metadata Database Self-managed
External CI Keyword
GCP Secrets Integration - Weekly Project Plan
Kubernetes Dashboard
Secrets Manager - Weekly Project Plan
Service Desk Ticket Work Item
Quarterly OKRs - Ops Sub-department
Verify Stage
Project Plans
CI Steps - Key Project Plan
Verify:CI Platform Group
Verify:Pipeline Authoring Group
Pipeline Authoring Frontend Architecture Process
Pipeline Authoring Group - JTBD
Pipeline Authoring Group Resources
Verify:Pipeline Execution Group
Pipeline Execution Group - JTBD
Pipeline Execution Group - Risk Map
Project Plans
CI Data Partitioning - Weekly Project Plan
CI Primary Key Conversions - Weekly Project Plan
Merge Trains Improvements (Fast-forward support) - Weekly Project Plan
Verify:Runner
Runner Group - JTBD
Runner Group - Risk Map
Runner Group - Team Resources
Runner Group - User Stories
Verify:Runner Project Plans
Processes
Development Talent Assessment Process
Follow the Sun Coverage - Development Department
General Information of Development Escalation Process
Development Escalation Process
Hiring Contingent Workers - Development Department
Rollout Plan Process for Development
Sec Section
Application Security Testing Sub-Department
API Security team in the Dynamic Analysis Group
Application Security Testing - Planning
Application Security Testing, Composition Analysis
Composition Analysis Runbooks
Enable Semver Dialect Errors in Sentry
Application Security Testing, Vulnerability Research
Application Security Testing, Vulnerability Research - CNA Processes
Dynamic Analysis Group
Products
Secure Product Metrics
Secret Detection Group
Secret Detection Metrics
Secret Detection Runbooks
Secret Detection Service: General FAQs
Secret Detection Service: Monitoring
Secret Push Protection Monitoring
Secret push protection performance testing
Secret push protection troubleshooting
Secure QA Process
Secure Technical Documentation
Data model for Dependencies Information
Secure Architecture - Feedback (Dismiss, create an issue or a Merge Request)
Static Analysis Group
Retrospective summaries
Static Analysis Group Code Review Process
Static Analysis Group Defined False Positives
Static Analysis Group EC2 development machine setup guide
Static Analysis Group Reaction Rotation
Static Analysis Runbooks
How to monitor and respond to issues with SAST Automatic Vulnerability Resolution?
SAST analyzer deprecation and removal instructions
SAST analyzer rollback to last version in production
Secure / Govern sub-department delineation
Security Risk Management Section
Security Infrastructure
Security Risk Management Planning
Security Risk Management, Security Insights
Developer Vulnerability Management Setup Guide
Setup Guide for Vulnerability Explanation and Resolution
Vulnerability Archive Generation Guide
Vulnerability Explanation and Vulnerability Resolution troubleshooting
Software Supply Chain Security Sub-department
Anti-Abuse Group
Authentication Group
Authorization Group
Compliance Group
Software Supply Chain Security, Security Policies
Security Policies - How we prioritize our current work?
Security Policies - Working on features
Software Supply Chain Security:Pipeline Security Group
Pipeline Security Group - JTBD
Engineering Analytics
Engineering Career Development
Engineering Career Framework
Development Department Career Framework
Dev Career Framework
Backend
Dev Career Framework: Intermediate Backend Engineer
Dev Career Framework: Senior Backend Engineer
Dev Career Framework: Staff Backend Engineer
Dev Career Framework: Principal Engineer
Frontend
Dev Career Framework: Intermediate Frontend Engineer
Dev Career Framework: Senior Frontend Engineer
Dev Career Framework: Staff Frontend Engineer
Fullstack
Dev Career Framework: Intermediate Fullstack Engineer
Dev Career Framework: Senior Fullstack Engineer
Dev Career Framework: Staff Fullstack Engineer
Development Department Career Framework: Intermediate
Development Department Career Framework: Intern
Development Department Career Framework: Principal
Development Department Career Framework: Senior
Development Department Career Framework: Staff
Engineering Career Framework: Associate
Engineering Career Framework: Intermediate
Engineering Career Framework: Intern
Engineering Career Framework: Principal
Engineering Career Framework: Senior
Engineering Career Framework: Staff
Infrastructure Department Career Framework
Associate - Infrastructure Department Career Framework
Core Platform Career Framework
Distribution
Core Platform Career Framework: Intermediate Distribution Engineer
Core Platform Career Framework: Senior Distribution Engineer
Intermediate - Infrastructure Department Career Framework
Intern - Infrastructure Department Career Framework
Principal - Infrastructure Department Career Framework
Senior - Infrastructure Department Career Framework
Staff - Infrastructure Department Career Framework
Quality Department Career Framework
Engineering Productivity Career Framework
Quality Career Framework: Intermediate Backend Engineer, Engineering Productivity
Quality Career Framework: Senior Backend Engineer, Engineering Productivity
Quality Career Framework: Staff Backend Engineer, Engineering Productivity
Software Engineer in Test Career Framework
Quality Department SET Career Framework: Associate
Quality Department SET Career Framework: Intermediate
Quality Department SET Career Framework: Principal
Quality Department SET Career Framework: Senior
Quality Department SET Career Framework: Staff
Support Career Framework
Support Career Framework: Associate Support Engineer
Support Career Framework: Customer Support Representative
Support Career Framework: Intermediate Support Engineer
Support Career Framework: Senior Support Engineer
Support Career Framework: Staff Support Engineer
Mentoring
Engineering Communication
Engineering Poster Boards
Engineering Demo Process
Engineering Error Budgets
Engineering Error Budget Custom Targets
Engineering Error Budgets for Stage Groups
Engineering Function Performance Indicators
Engineering Hiring
Engineering IC Leadership
Tech Lead at GitLab
Engineering Management
Engineering Management Career Development
Engineering Management Project Management
Engineering Manager Hiring
Group Retrospectives
Engineering Mentorship
Engineering Projects
Engineering Secondments
Engineering Team Readmes
Amy Shiel README
Andras Horvath's README
Angela Piotrowski's README
Ben King's README
Chris 'CK' README
Craig Miskell README
Daniel Diniz's README
David Wainaina README
Eduardo Bonet's README
Emily Chang's README
Jane Gianoutsos' README
Juan Silva's README
Kamil Trzci≈Ñski's README
Lee Matos' README
Lyle Kozloff's README
Marin Jankovski's README
Mario Mora's README
Matt Nohr's README
Max Woolf's README
Michael Lun√∏e's README
Mike Dunninger's README
MikeL's README
Nick Veenhof's README
README of Alex Ives
README of Gabriel Yoachum
README of Katrin Leinweber
Rebecca Spainhower's README
Ronnie Alfaro's Readme
Savas Vedova's README
Sean Carroll's Readme
Simon Street's README
Thong Kuah's README
Tom McAtee's README
Engineering Workflow
Code Review Guidelines
Code Review Values
Iteration
Related Engineering Workflows
Release/Feature Determination Workflow
Expansion Development Department
Fast Boot
Frontend Group
Interview Metrics - Frontend
Skillsharing - Frontend
FY25 Engineering get-together subsidy
GitLab Plato HQ Mentoring Program
GitLab Repositories
Guidelines for automation and access tokens
Incident
Infrastructure
Alert Playbook Management
Capacity Planning for GitLab Infrastructure
Career Development in the Infrastructure Department
Cells
Test Platform in Cells
Change Management
Cost Management
GCP CUD
Group Cost Metrics
How to Engage
Infrafin
Infrastructure Analyst Board
Infrastructure Analyst Role
Learning Resources
AWS
GCP
P&L Allocation
Database
Database: Disaster Recovery
Emergency Change Processes for GitLab SaaS
Engineering Productivity team
Direction - GDK
Engineering productivity project management
Flaky tests management and processes
Issue Triage
SPACE: Satisfaction, Performance, Activity, Collaboration, and Efficiency
Test Intelligence
Triage Operations
Issue Triage Onboarding
Wider Community Merge Request Triage
Workflow Automation
Getting Assistance on Infrastructure Platforms
Incident Management
Incident Manager On Call onboarding
Tier-2 Oncall
Incident Review
Infrastructure Department Frequently Asked Questions
Infrastructure Department Performance Indicators
Infrastructure Department Projects
Infrastructure Environments
Environments Canary Stage
Staging Ref environment
Infrastructure Feature Support
Infrastructure Product Management
Network Security Management Procedure
Production
Production Architecture
CI Service Architecture
Disaster Recovery Architecture
Supporting Architecture
Production Readiness Review
Rate Limiting
Bypass Policy
Managing Limits
Rate Limiting Troubleshooting
Release Tools
Service Maturity Model
Team
Cloud Connector Group
Application Performance Group - 2020 Impact
Application Performance Group - Approach and Common Themes
Application Performance Group - Knowledge Sharing
Cloud Connector - Technical vision
Distinguished Engineer, Infrastructure - Andrew Newdigate
FinOps Team
GitLab Dedicated Group
Environment Automation Team
GitLab Dedicated Architecture
From Dedicated to Cells: A Technical Analysis
GitLab Dedicated SLAs
Switchboard team
US Public Sector Services team
Production Engineering Ops Team
Disaster Recovery Practice (DR Gamedays)
EOC Onboarding Buddies
EOC Shadow and EOC Buddy Expectations
On-call handover
Production Engineering Ops Team Roadmaps
FY26 Production Engineering Ops Team Roadmaps
FY26 - Disaster Recovery
FY26 - Hosted Runners
FY26 - Incident Management
FY26 - Patching & OS Modernization
SRE Onboarding
Runway Team
Scalability Group
The Infrastructure Platforms Section
Infrastructure Platforms Tools Index
Runway
Platforms Processes
Calibration
The Infrastructure Platforms Hiring Process
The Infrastructure Platforms OKRs
The Infrastructure Platforms Project Management
Infrastructure Platforms
Data Access Sub Department
Data Access Durability Team
Database Framework Group
Container Registry on PostgreSQL
Crafting Queries with Postgres Ai Plans
Database Group Activity Log
Database Group Stable Counterparts
Database Lexicon - terms and definitions relating to our database
Database Partitioning
Database Strategy
Identifying Database Issues
Introduction to Background Migrations
Introduction to Database Review
Multi-database Background migrations
Partitioning - Issue group search
PostgreSQL 11 sharding with foreign data wrappers and partitioning
PostgreSQL Upgrade Cadence
Sharding GitLab by top-level namespace
Sharding GitLab with CitusDB
Understanding how Indexes Impact Performance on GitLab.com
Working with the GitLab.com database for developers
Workload analysis for GitLab.com
Database Help Workflow
Database Operations Team  (formerly known as the Database Reliablity Engineering (DBRE) team)
DBO Escalation Process
Git Team
Gitaly Team
Debugging the Gitaly service
Developer Experience
Bug Prioritization
Debugging Failing Tests and Test Pipelines
Developer Experience Dashboards
Developer Experience Design Documents
Developer Experience On-call Rotation
Developer Experience Onboarding
Developer Experience Project Management
Developer Tooling team
Development Analytics Group
Create triage policies with the assistance of GitLab Duo Workflow
End-to-end Pipeline Monitoring
Engineering Analytics Team
Feature Readiness
Performance Enablement
Browser Performance Testing
Observability Based Performance Testing at GitLab
Operational Verification
Performance Testing at GitLab
Test Platform in Distribution group
Pipeline Triage
Quality Engineering Learning Resources
Risk Mapping
Test Coverage
Test Governance Group
Test Governance Tips and Tricks
Test Platform Roadmap
GitLab Delivery
Delivery Group
Delivery Team Metrics
Delivery Team Training
Engineering Manager, Delivery
Distribution
Distribution Team Demo
Distribution Team Infrastructure and Maintenance
Distribution Team Infrastructure and Maintenance - Build Infrastructure
Distribution Team Infrastructure and Maintenance - dev.gitlab.org
Distribution Team Infrastructure: ARM
Distribution Team usage of Renovate
Distribution Team Kubernetes and OpenShift release support policy
Distribution Team Merge Request Handling
Distribution Team Training
Distribution Team Triage
Distribution Team Workflow
GitLab Delivery: Self Managed
GitLab Delivery:Framework
Reference Architectures - Validation and Testing
Production Engineering
Observability Team
Capacity Planning
Cost of Observability Stack
Error Budgets
Technical Blueprint
Production Engineering Foundations Team
Production Engineering Group - Project Management
Tenant Scale Group
Cells Infrastructure Team
Geo and Disaster Recovery
Geo and Disaster Recovery - Hierarchy of Agile Work Items
Geo and Disaster Recovery - Planning
Geo and Disaster Recovery - Retrospectives
Geo on staging.gitlab.com
Geo scheduled pipelines
Organizations Team
Innovation at GitLab
Joint R&D OKR Process
Monitoring of GitLab.com
Staging Monitoring
On-Call
Open Source at GitLab
Open Source Growth Strategy
Performance
Policies related to GitLab.com
Backups of GitLab.com
GitLab Teleport Access Policy
Monitoring of GitLab.com
R&D Tax Credits
Recognition in Engineering
Releases
Backports
Internal Releases
Patch Releases
Root Cause Analysis
Starting new teams
Unplanned Upgrade Stop Workflow
- Architecture
Architecture Design Documents
Logging Blueprint for GitLab
Architecture Design Workflow
Guidelines
Database
Practices
Scalability
Technology Roadmap
- Architecture Design Documents
Logging Blueprint for GitLab
- Logging Blueprint for GitLab
- Architecture Design Workflow
- Guidelines
Database
- Database
- Practices
Scalability
- Scalability
- Technology Roadmap
- Core Development Department
- Cross Functional Prioritization
- CTO Leadership Team
- Deployments and Releases
Deployments
- Deployments
- Developer Onboarding
- Development
Data Science
AI-Powered Stage
AI Framework Group
AI Model Validation Group
AI Model Validation at GitLab
Projects
UnReview Overview
Custom Models Group
Duo Chat Group
Duo Chat's Technical Strategy - 
Duo Workflow Group
Troubleshooting
ModelOps
MLOps
Database Engineering
Dev Sub-department
Create Stage
Create Stage: Talent Assessments
Create Stage: Tech Leads
Create:Code Creation Group
AI Context Taskforce
Create:Code Creation Group engineering overview
Create:Code Creation Group Milestone Planning
Create:Code Creation: Code Suggestions Guide
Code Suggestions Implementation Guidelines
Code Suggestions Model Evaluation Guide
Code Suggestions Model Rollout Guide
Code Suggestions Testing Guide
Create:Code Review Group
Create:Code Review BE Team
Create:Code Review Backend Engineering Resources
Create:Code Review BE Engineering Manager Responsibilities
Create:Code Review FE Team
Merge Request Report Widgets - DRI list
Create:Editor Extensions Group
Ownership and boundaries - Editor Extensions
Create:Remote Development Group
Create:Remote Development Principles
Cultivating Contributions from the Wider Community
Developer Cheatsheet
Create:Source Code teams
Create:Source Code BE Team
Create:Source Code FE Team
Engineering Managers
Engineering Managers Training Opportunities
How we live our values
Meetings
Monitoring
Objectives & Key Results (OKRs)
Recommended Books for Engineering Managers
Engineers
Conferences
Iteration Retrospectives
Managing Effective Skip Level Meetings
Professional Development
Recommended Books for Engineers
Training Opportunities
Foundations Stage
Design System Engineering Team
Global Search Group
Advanced Global Search Rollout on GitLab.com
Global Search - JTBD
Import and Integrate Group
Personal Productivity Engineering Team
Plan Stage
Plan Frontend Engineer Internship
Plan:Knowledge Engineering Team
Plan:Product Planning Engineering Team
Plan:Project Management Team
Working Groups
Epic Work Items Migration
Work Items API Performance Working Group
Training
Staff Engineers
Transitioning from Individual Contributor to a Manager
Development Department Learning and Development
Development Department Learning and Development - Reliability
Engineering manager role explained
Work Of A Manager
Resources for Staff+ roles
Development Department Performance Indicators
Development OKRs
Development Required Approvals
Engineering Principles
Fulfillment Sub-department
Fulfillment Diversity, inclusion, and belonging
Fulfillment Platform Team
Fulfillment Provision Team
Fulfillment Subscription Management Team
Fulfillment Utilization Team
Growth Stage
Experimentation
Growth Fast Boot September 2019
Growth:Acquisition Group
Growth:Activation Group
Keeping secure coding knowledge fresh in development
Manager Notes
Monitor Stage
Analytics Instrumentation Group
Analytics Instrumentation - Monitoring and troubleshooting
Internal Analytics Infrastructure
Monitor:Platform Insights Group
Optimize Group
Onboarding
Engineering Manager Onboarding
Ops Sub-department
Deploy Stage
Environments Group
Auto DevOps
Environments Group - GitLab Quality Assurance End-to-End Testing for the Environments group
FY21 Celebrations - Ops Sub-department
General Planning Process - Ops Sub-department
Ops Hiring Process
Package Stage
Package Group - GitLab Quality Assurance End-to-End Testing for the Package group
Package Stage - The most important use cases for our customers
Project Plans
CI Catalog
Cluster Web Terminal
Container Registry Metadata Database Self-managed
External CI Keyword
GCP Secrets Integration - Weekly Project Plan
Kubernetes Dashboard
Secrets Manager - Weekly Project Plan
Service Desk Ticket Work Item
Quarterly OKRs - Ops Sub-department
Verify Stage
Project Plans
CI Steps - Key Project Plan
Verify:CI Platform Group
Verify:Pipeline Authoring Group
Pipeline Authoring Frontend Architecture Process
Pipeline Authoring Group - JTBD
Pipeline Authoring Group Resources
Verify:Pipeline Execution Group
Pipeline Execution Group - JTBD
Pipeline Execution Group - Risk Map
Project Plans
CI Data Partitioning - Weekly Project Plan
CI Primary Key Conversions - Weekly Project Plan
Merge Trains Improvements (Fast-forward support) - Weekly Project Plan
Verify:Runner
Runner Group - JTBD
Runner Group - Risk Map
Runner Group - Team Resources
Runner Group - User Stories
Verify:Runner Project Plans
Processes
Development Talent Assessment Process
Follow the Sun Coverage - Development Department
General Information of Development Escalation Process
Development Escalation Process
Hiring Contingent Workers - Development Department
Rollout Plan Process for Development
Sec Section
Application Security Testing Sub-Department
API Security team in the Dynamic Analysis Group
Application Security Testing - Planning
Application Security Testing, Composition Analysis
Composition Analysis Runbooks
Enable Semver Dialect Errors in Sentry
Application Security Testing, Vulnerability Research
Application Security Testing, Vulnerability Research - CNA Processes
Dynamic Analysis Group
Products
Secure Product Metrics
Secret Detection Group
Secret Detection Metrics
Secret Detection Runbooks
Secret Detection Service: General FAQs
Secret Detection Service: Monitoring
Secret Push Protection Monitoring
Secret push protection performance testing
Secret push protection troubleshooting
Secure QA Process
Secure Technical Documentation
Data model for Dependencies Information
Secure Architecture - Feedback (Dismiss, create an issue or a Merge Request)
Static Analysis Group
Retrospective summaries
Static Analysis Group Code Review Process
Static Analysis Group Defined False Positives
Static Analysis Group EC2 development machine setup guide
Static Analysis Group Reaction Rotation
Static Analysis Runbooks
How to monitor and respond to issues with SAST Automatic Vulnerability Resolution?
SAST analyzer deprecation and removal instructions
SAST analyzer rollback to last version in production
Secure / Govern sub-department delineation
Security Risk Management Section
Security Infrastructure
Security Risk Management Planning
Security Risk Management, Security Insights
Developer Vulnerability Management Setup Guide
Setup Guide for Vulnerability Explanation and Resolution
Vulnerability Archive Generation Guide
Vulnerability Explanation and Vulnerability Resolution troubleshooting
Software Supply Chain Security Sub-department
Anti-Abuse Group
Authentication Group
Authorization Group
Compliance Group
Software Supply Chain Security, Security Policies
Security Policies - How we prioritize our current work?
Security Policies - Working on features
Software Supply Chain Security:Pipeline Security Group
Pipeline Security Group - JTBD
- Data Science
AI-Powered Stage
AI Framework Group
AI Model Validation Group
AI Model Validation at GitLab
Projects
UnReview Overview
Custom Models Group
Duo Chat Group
Duo Chat's Technical Strategy - 
Duo Workflow Group
Troubleshooting
ModelOps
MLOps
- AI-Powered Stage
AI Framework Group
AI Model Validation Group
AI Model Validation at GitLab
Projects
UnReview Overview
Custom Models Group
Duo Chat Group
Duo Chat's Technical Strategy - 
Duo Workflow Group
Troubleshooting
- AI Framework Group
- AI Model Validation Group
AI Model Validation at GitLab
Projects
UnReview Overview
- AI Model Validation at GitLab
- Projects
UnReview Overview
- UnReview Overview
- Custom Models Group
- Duo Chat Group
Duo Chat's Technical Strategy -
- Duo Chat's Technical Strategy -
- Duo Workflow Group
Troubleshooting
- Troubleshooting
- ModelOps
MLOps
- MLOps
- Database Engineering
- Dev Sub-department
Create Stage
Create Stage: Talent Assessments
Create Stage: Tech Leads
Create:Code Creation Group
AI Context Taskforce
Create:Code Creation Group engineering overview
Create:Code Creation Group Milestone Planning
Create:Code Creation: Code Suggestions Guide
Code Suggestions Implementation Guidelines
Code Suggestions Model Evaluation Guide
Code Suggestions Model Rollout Guide
Code Suggestions Testing Guide
Create:Code Review Group
Create:Code Review BE Team
Create:Code Review Backend Engineering Resources
Create:Code Review BE Engineering Manager Responsibilities
Create:Code Review FE Team
Merge Request Report Widgets - DRI list
Create:Editor Extensions Group
Ownership and boundaries - Editor Extensions
Create:Remote Development Group
Create:Remote Development Principles
Cultivating Contributions from the Wider Community
Developer Cheatsheet
Create:Source Code teams
Create:Source Code BE Team
Create:Source Code FE Team
Engineering Managers
Engineering Managers Training Opportunities
How we live our values
Meetings
Monitoring
Objectives & Key Results (OKRs)
Recommended Books for Engineering Managers
Engineers
Conferences
Iteration Retrospectives
Managing Effective Skip Level Meetings
Professional Development
Recommended Books for Engineers
Training Opportunities
Foundations Stage
Design System Engineering Team
Global Search Group
Advanced Global Search Rollout on GitLab.com
Global Search - JTBD
Import and Integrate Group
Personal Productivity Engineering Team
Plan Stage
Plan Frontend Engineer Internship
Plan:Knowledge Engineering Team
Plan:Product Planning Engineering Team
Plan:Project Management Team
Working Groups
Epic Work Items Migration
Work Items API Performance Working Group
Training
Staff Engineers
Transitioning from Individual Contributor to a Manager
- Create Stage
Create Stage: Talent Assessments
Create Stage: Tech Leads
Create:Code Creation Group
AI Context Taskforce
Create:Code Creation Group engineering overview
Create:Code Creation Group Milestone Planning
Create:Code Creation: Code Suggestions Guide
Code Suggestions Implementation Guidelines
Code Suggestions Model Evaluation Guide
Code Suggestions Model Rollout Guide
Code Suggestions Testing Guide
Create:Code Review Group
Create:Code Review BE Team
Create:Code Review Backend Engineering Resources
Create:Code Review BE Engineering Manager Responsibilities
Create:Code Review FE Team
Merge Request Report Widgets - DRI list
Create:Editor Extensions Group
Ownership and boundaries - Editor Extensions
Create:Remote Development Group
Create:Remote Development Principles
Cultivating Contributions from the Wider Community
Developer Cheatsheet
Create:Source Code teams
Create:Source Code BE Team
Create:Source Code FE Team
Engineering Managers
Engineering Managers Training Opportunities
How we live our values
Meetings
Monitoring
Objectives & Key Results (OKRs)
Recommended Books for Engineering Managers
Engineers
Conferences
Iteration Retrospectives
Managing Effective Skip Level Meetings
Professional Development
Recommended Books for Engineers
Training Opportunities
- Create Stage: Talent Assessments
- Create Stage: Tech Leads
- Create:Code Creation Group
AI Context Taskforce
Create:Code Creation Group engineering overview
Create:Code Creation Group Milestone Planning
Create:Code Creation: Code Suggestions Guide
Code Suggestions Implementation Guidelines
Code Suggestions Model Evaluation Guide
Code Suggestions Model Rollout Guide
Code Suggestions Testing Guide
- AI Context Taskforce
- Create:Code Creation Group engineering overview
- Create:Code Creation Group Milestone Planning
- Create:Code Creation: Code Suggestions Guide
Code Suggestions Implementation Guidelines
Code Suggestions Model Evaluation Guide
Code Suggestions Model Rollout Guide
Code Suggestions Testing Guide
- Code Suggestions Implementation Guidelines
- Code Suggestions Model Evaluation Guide
- Code Suggestions Model Rollout Guide
- Code Suggestions Testing Guide
- Create:Code Review Group
Create:Code Review BE Team
Create:Code Review Backend Engineering Resources
Create:Code Review BE Engineering Manager Responsibilities
Create:Code Review FE Team
Merge Request Report Widgets - DRI list
- Create:Code Review BE Team
Create:Code Review Backend Engineering Resources
Create:Code Review BE Engineering Manager Responsibilities
- Create:Code Review Backend Engineering Resources
- Create:Code Review BE Engineering Manager Responsibilities
- Create:Code Review FE Team
- Merge Request Report Widgets - DRI list
- Create:Editor Extensions Group
Ownership and boundaries - Editor Extensions
- Ownership and boundaries - Editor Extensions
- Create:Remote Development Group
Create:Remote Development Principles
Cultivating Contributions from the Wider Community
Developer Cheatsheet
- Create:Remote Development Principles
- Cultivating Contributions from the Wider Community
- Developer Cheatsheet
- Create:Source Code teams
Create:Source Code BE Team
Create:Source Code FE Team
- Create:Source Code BE Team
- Create:Source Code FE Team
- Engineering Managers
Engineering Managers Training Opportunities
How we live our values
Meetings
Monitoring
Objectives & Key Results (OKRs)
Recommended Books for Engineering Managers
- Engineering Managers Training Opportunities
- How we live our values
- Meetings
- Monitoring
- Objectives & Key Results (OKRs)
- Recommended Books for Engineering Managers
- Engineers
Conferences
Iteration Retrospectives
Managing Effective Skip Level Meetings
Professional Development
Recommended Books for Engineers
Training Opportunities
- Conferences
- Iteration Retrospectives
- Managing Effective Skip Level Meetings
- Professional Development
- Recommended Books for Engineers
- Training Opportunities
- Foundations Stage
Design System Engineering Team
Global Search Group
Advanced Global Search Rollout on GitLab.com
Global Search - JTBD
Import and Integrate Group
Personal Productivity Engineering Team
- Design System Engineering Team
- Global Search Group
Advanced Global Search Rollout on GitLab.com
Global Search - JTBD
- Advanced Global Search Rollout on GitLab.com
- Global Search - JTBD
- Import and Integrate Group
- Personal Productivity Engineering Team
- Plan Stage
Plan Frontend Engineer Internship
Plan:Knowledge Engineering Team
Plan:Product Planning Engineering Team
Plan:Project Management Team
Working Groups
Epic Work Items Migration
Work Items API Performance Working Group
- Plan Frontend Engineer Internship
- Plan:Knowledge Engineering Team
- Plan:Product Planning Engineering Team
- Plan:Project Management Team
- Working Groups
Epic Work Items Migration
Work Items API Performance Working Group
- Epic Work Items Migration
- Work Items API Performance Working Group
- Training
Staff Engineers
Transitioning from Individual Contributor to a Manager
- Staff Engineers
- Transitioning from Individual Contributor to a Manager
- Development Department Learning and Development
Development Department Learning and Development - Reliability
Engineering manager role explained
Work Of A Manager
Resources for Staff+ roles
- Development Department Learning and Development - Reliability
- Engineering manager role explained
Work Of A Manager
- Work Of A Manager
- Resources for Staff+ roles
- Development Department Performance Indicators
- Development OKRs
- Development Required Approvals
- Engineering Principles
- Fulfillment Sub-department
Fulfillment Diversity, inclusion, and belonging
Fulfillment Platform Team
Fulfillment Provision Team
Fulfillment Subscription Management Team
Fulfillment Utilization Team
- Fulfillment Diversity, inclusion, and belonging
- Fulfillment Platform Team
- Fulfillment Provision Team
- Fulfillment Subscription Management Team
- Fulfillment Utilization Team
- Growth Stage
Experimentation
Growth Fast Boot September 2019
Growth:Acquisition Group
Growth:Activation Group
- Experimentation
- Growth Fast Boot September 2019
- Growth:Acquisition Group
- Growth:Activation Group
- Keeping secure coding knowledge fresh in development
- Manager Notes
- Monitor Stage
Analytics Instrumentation Group
Analytics Instrumentation - Monitoring and troubleshooting
Internal Analytics Infrastructure
Monitor:Platform Insights Group
Optimize Group
- Analytics Instrumentation Group
Analytics Instrumentation - Monitoring and troubleshooting
Internal Analytics Infrastructure
- Analytics Instrumentation - Monitoring and troubleshooting
- Internal Analytics Infrastructure
- Monitor:Platform Insights Group
- Optimize Group
- Onboarding
Engineering Manager Onboarding
- Engineering Manager Onboarding
- Ops Sub-department
Deploy Stage
Environments Group
Auto DevOps
Environments Group - GitLab Quality Assurance End-to-End Testing for the Environments group
FY21 Celebrations - Ops Sub-department
General Planning Process - Ops Sub-department
Ops Hiring Process
Package Stage
Package Group - GitLab Quality Assurance End-to-End Testing for the Package group
Package Stage - The most important use cases for our customers
Project Plans
CI Catalog
Cluster Web Terminal
Container Registry Metadata Database Self-managed
External CI Keyword
GCP Secrets Integration - Weekly Project Plan
Kubernetes Dashboard
Secrets Manager - Weekly Project Plan
Service Desk Ticket Work Item
Quarterly OKRs - Ops Sub-department
Verify Stage
Project Plans
CI Steps - Key Project Plan
Verify:CI Platform Group
Verify:Pipeline Authoring Group
Pipeline Authoring Frontend Architecture Process
Pipeline Authoring Group - JTBD
Pipeline Authoring Group Resources
Verify:Pipeline Execution Group
Pipeline Execution Group - JTBD
Pipeline Execution Group - Risk Map
Project Plans
CI Data Partitioning - Weekly Project Plan
CI Primary Key Conversions - Weekly Project Plan
Merge Trains Improvements (Fast-forward support) - Weekly Project Plan
Verify:Runner
Runner Group - JTBD
Runner Group - Risk Map
Runner Group - Team Resources
Runner Group - User Stories
Verify:Runner Project Plans
- Deploy Stage
Environments Group
Auto DevOps
Environments Group - GitLab Quality Assurance End-to-End Testing for the Environments group
- Environments Group
Auto DevOps
Environments Group - GitLab Quality Assurance End-to-End Testing for the Environments group
- Auto DevOps
- Environments Group - GitLab Quality Assurance End-to-End Testing for the Environments group
- FY21 Celebrations - Ops Sub-department
- General Planning Process - Ops Sub-department
- Ops Hiring Process
- Package Stage
Package Group - GitLab Quality Assurance End-to-End Testing for the Package group
Package Stage - The most important use cases for our customers
- Package Group - GitLab Quality Assurance End-to-End Testing for the Package group
- Package Stage - The most important use cases for our customers
- Project Plans
CI Catalog
Cluster Web Terminal
Container Registry Metadata Database Self-managed
External CI Keyword
GCP Secrets Integration - Weekly Project Plan
Kubernetes Dashboard
Secrets Manager - Weekly Project Plan
Service Desk Ticket Work Item
- CI Catalog
- Cluster Web Terminal
- Container Registry Metadata Database Self-managed
- External CI Keyword
- GCP Secrets Integration - Weekly Project Plan
- Kubernetes Dashboard
- Secrets Manager - Weekly Project Plan
- Service Desk Ticket Work Item
- Quarterly OKRs - Ops Sub-department
- Verify Stage
Project Plans
CI Steps - Key Project Plan
Verify:CI Platform Group
Verify:Pipeline Authoring Group
Pipeline Authoring Frontend Architecture Process
Pipeline Authoring Group - JTBD
Pipeline Authoring Group Resources
Verify:Pipeline Execution Group
Pipeline Execution Group - JTBD
Pipeline Execution Group - Risk Map
Project Plans
CI Data Partitioning - Weekly Project Plan
CI Primary Key Conversions - Weekly Project Plan
Merge Trains Improvements (Fast-forward support) - Weekly Project Plan
Verify:Runner
Runner Group - JTBD
Runner Group - Risk Map
Runner Group - Team Resources
Runner Group - User Stories
Verify:Runner Project Plans
- Project Plans
CI Steps - Key Project Plan
- CI Steps - Key Project Plan
- Verify:CI Platform Group
- Verify:Pipeline Authoring Group
Pipeline Authoring Frontend Architecture Process
Pipeline Authoring Group - JTBD
Pipeline Authoring Group Resources
- Pipeline Authoring Frontend Architecture Process
- Pipeline Authoring Group - JTBD
- Pipeline Authoring Group Resources
- Verify:Pipeline Execution Group
Pipeline Execution Group - JTBD
Pipeline Execution Group - Risk Map
Project Plans
CI Data Partitioning - Weekly Project Plan
CI Primary Key Conversions - Weekly Project Plan
Merge Trains Improvements (Fast-forward support) - Weekly Project Plan
- Pipeline Execution Group - JTBD
- Pipeline Execution Group - Risk Map
- Project Plans
CI Data Partitioning - Weekly Project Plan
CI Primary Key Conversions - Weekly Project Plan
Merge Trains Improvements (Fast-forward support) - Weekly Project Plan
- CI Data Partitioning - Weekly Project Plan
- CI Primary Key Conversions - Weekly Project Plan
- Merge Trains Improvements (Fast-forward support) - Weekly Project Plan
- Verify:Runner
Runner Group - JTBD
Runner Group - Risk Map
Runner Group - Team Resources
Runner Group - User Stories
Verify:Runner Project Plans
- Runner Group - JTBD
- Runner Group - Risk Map
- Runner Group - Team Resources
- Runner Group - User Stories
- Verify:Runner Project Plans
- Processes
Development Talent Assessment Process
Follow the Sun Coverage - Development Department
General Information of Development Escalation Process
Development Escalation Process
Hiring Contingent Workers - Development Department
Rollout Plan Process for Development
- Development Talent Assessment Process
- Follow the Sun Coverage - Development Department
- General Information of Development Escalation Process
Development Escalation Process
- Development Escalation Process
- Hiring Contingent Workers - Development Department
- Rollout Plan Process for Development
- Sec Section
Application Security Testing Sub-Department
API Security team in the Dynamic Analysis Group
Application Security Testing - Planning
Application Security Testing, Composition Analysis
Composition Analysis Runbooks
Enable Semver Dialect Errors in Sentry
Application Security Testing, Vulnerability Research
Application Security Testing, Vulnerability Research - CNA Processes
Dynamic Analysis Group
Products
Secure Product Metrics
Secret Detection Group
Secret Detection Metrics
Secret Detection Runbooks
Secret Detection Service: General FAQs
Secret Detection Service: Monitoring
Secret Push Protection Monitoring
Secret push protection performance testing
Secret push protection troubleshooting
Secure QA Process
Secure Technical Documentation
Data model for Dependencies Information
Secure Architecture - Feedback (Dismiss, create an issue or a Merge Request)
Static Analysis Group
Retrospective summaries
Static Analysis Group Code Review Process
Static Analysis Group Defined False Positives
Static Analysis Group EC2 development machine setup guide
Static Analysis Group Reaction Rotation
Static Analysis Runbooks
How to monitor and respond to issues with SAST Automatic Vulnerability Resolution?
SAST analyzer deprecation and removal instructions
SAST analyzer rollback to last version in production
Secure / Govern sub-department delineation
Security Risk Management Section
Security Infrastructure
Security Risk Management Planning
Security Risk Management, Security Insights
Developer Vulnerability Management Setup Guide
Setup Guide for Vulnerability Explanation and Resolution
Vulnerability Archive Generation Guide
Vulnerability Explanation and Vulnerability Resolution troubleshooting
Software Supply Chain Security Sub-department
Anti-Abuse Group
Authentication Group
Authorization Group
Compliance Group
Software Supply Chain Security, Security Policies
Security Policies - How we prioritize our current work?
Security Policies - Working on features
Software Supply Chain Security:Pipeline Security Group
Pipeline Security Group - JTBD
- Application Security Testing Sub-Department
API Security team in the Dynamic Analysis Group
Application Security Testing - Planning
Application Security Testing, Composition Analysis
Composition Analysis Runbooks
Enable Semver Dialect Errors in Sentry
Application Security Testing, Vulnerability Research
Application Security Testing, Vulnerability Research - CNA Processes
Dynamic Analysis Group
Products
Secure Product Metrics
Secret Detection Group
Secret Detection Metrics
Secret Detection Runbooks
Secret Detection Service: General FAQs
Secret Detection Service: Monitoring
Secret Push Protection Monitoring
Secret push protection performance testing
Secret push protection troubleshooting
Secure QA Process
Secure Technical Documentation
Data model for Dependencies Information
Secure Architecture - Feedback (Dismiss, create an issue or a Merge Request)
Static Analysis Group
Retrospective summaries
Static Analysis Group Code Review Process
Static Analysis Group Defined False Positives
Static Analysis Group EC2 development machine setup guide
Static Analysis Group Reaction Rotation
Static Analysis Runbooks
How to monitor and respond to issues with SAST Automatic Vulnerability Resolution?
SAST analyzer deprecation and removal instructions
SAST analyzer rollback to last version in production
- API Security team in the Dynamic Analysis Group
- Application Security Testing - Planning
- Application Security Testing, Composition Analysis
Composition Analysis Runbooks
Enable Semver Dialect Errors in Sentry
- Composition Analysis Runbooks
Enable Semver Dialect Errors in Sentry
- Enable Semver Dialect Errors in Sentry
- Application Security Testing, Vulnerability Research
Application Security Testing, Vulnerability Research - CNA Processes
- Application Security Testing, Vulnerability Research - CNA Processes
- Dynamic Analysis Group
- Products
Secure Product Metrics
- Secure Product Metrics
- Secret Detection Group
Secret Detection Metrics
Secret Detection Runbooks
Secret Detection Service: General FAQs
Secret Detection Service: Monitoring
Secret Push Protection Monitoring
Secret push protection performance testing
Secret push protection troubleshooting
- Secret Detection Metrics
- Secret Detection Runbooks
Secret Detection Service: General FAQs
Secret Detection Service: Monitoring
Secret Push Protection Monitoring
Secret push protection performance testing
Secret push protection troubleshooting
- Secret Detection Service: General FAQs
- Secret Detection Service: Monitoring
- Secret Push Protection Monitoring
- Secret push protection performance testing
- Secret push protection troubleshooting
- Secure QA Process
- Secure Technical Documentation
Data model for Dependencies Information
Secure Architecture - Feedback (Dismiss, create an issue or a Merge Request)
- Data model for Dependencies Information
- Secure Architecture - Feedback (Dismiss, create an issue or a Merge Request)
- Static Analysis Group
Retrospective summaries
Static Analysis Group Code Review Process
Static Analysis Group Defined False Positives
Static Analysis Group EC2 development machine setup guide
Static Analysis Group Reaction Rotation
Static Analysis Runbooks
How to monitor and respond to issues with SAST Automatic Vulnerability Resolution?
SAST analyzer deprecation and removal instructions
SAST analyzer rollback to last version in production
- Retrospective summaries
- Static Analysis Group Code Review Process
- Static Analysis Group Defined False Positives
- Static Analysis Group EC2 development machine setup guide
- Static Analysis Group Reaction Rotation
- Static Analysis Runbooks
How to monitor and respond to issues with SAST Automatic Vulnerability Resolution?
SAST analyzer deprecation and removal instructions
SAST analyzer rollback to last version in production
- How to monitor and respond to issues with SAST Automatic Vulnerability Resolution?
- SAST analyzer deprecation and removal instructions
- SAST analyzer rollback to last version in production
- Secure / Govern sub-department delineation
- Security Risk Management Section
Security Infrastructure
Security Risk Management Planning
Security Risk Management, Security Insights
Developer Vulnerability Management Setup Guide
Setup Guide for Vulnerability Explanation and Resolution
Vulnerability Archive Generation Guide
Vulnerability Explanation and Vulnerability Resolution troubleshooting
- Security Infrastructure
- Security Risk Management Planning
- Security Risk Management, Security Insights
Developer Vulnerability Management Setup Guide
Setup Guide for Vulnerability Explanation and Resolution
Vulnerability Archive Generation Guide
Vulnerability Explanation and Vulnerability Resolution troubleshooting
- Developer Vulnerability Management Setup Guide
- Setup Guide for Vulnerability Explanation and Resolution
- Vulnerability Archive Generation Guide
- Vulnerability Explanation and Vulnerability Resolution troubleshooting
- Software Supply Chain Security Sub-department
Anti-Abuse Group
Authentication Group
Authorization Group
Compliance Group
Software Supply Chain Security, Security Policies
Security Policies - How we prioritize our current work?
Security Policies - Working on features
Software Supply Chain Security:Pipeline Security Group
Pipeline Security Group - JTBD
- Anti-Abuse Group
- Authentication Group
- Authorization Group
- Compliance Group
- Software Supply Chain Security, Security Policies
Security Policies - How we prioritize our current work?
Security Policies - Working on features
- Security Policies - How we prioritize our current work?
- Security Policies - Working on features
- Software Supply Chain Security:Pipeline Security Group
Pipeline Security Group - JTBD
- Pipeline Security Group - JTBD
- Engineering Analytics
- Engineering Career Development
Engineering Career Framework
Development Department Career Framework
Dev Career Framework
Backend
Dev Career Framework: Intermediate Backend Engineer
Dev Career Framework: Senior Backend Engineer
Dev Career Framework: Staff Backend Engineer
Dev Career Framework: Principal Engineer
Frontend
Dev Career Framework: Intermediate Frontend Engineer
Dev Career Framework: Senior Frontend Engineer
Dev Career Framework: Staff Frontend Engineer
Fullstack
Dev Career Framework: Intermediate Fullstack Engineer
Dev Career Framework: Senior Fullstack Engineer
Dev Career Framework: Staff Fullstack Engineer
Development Department Career Framework: Intermediate
Development Department Career Framework: Intern
Development Department Career Framework: Principal
Development Department Career Framework: Senior
Development Department Career Framework: Staff
Engineering Career Framework: Associate
Engineering Career Framework: Intermediate
Engineering Career Framework: Intern
Engineering Career Framework: Principal
Engineering Career Framework: Senior
Engineering Career Framework: Staff
Infrastructure Department Career Framework
Associate - Infrastructure Department Career Framework
Core Platform Career Framework
Distribution
Core Platform Career Framework: Intermediate Distribution Engineer
Core Platform Career Framework: Senior Distribution Engineer
Intermediate - Infrastructure Department Career Framework
Intern - Infrastructure Department Career Framework
Principal - Infrastructure Department Career Framework
Senior - Infrastructure Department Career Framework
Staff - Infrastructure Department Career Framework
Quality Department Career Framework
Engineering Productivity Career Framework
Quality Career Framework: Intermediate Backend Engineer, Engineering Productivity
Quality Career Framework: Senior Backend Engineer, Engineering Productivity
Quality Career Framework: Staff Backend Engineer, Engineering Productivity
Software Engineer in Test Career Framework
Quality Department SET Career Framework: Associate
Quality Department SET Career Framework: Intermediate
Quality Department SET Career Framework: Principal
Quality Department SET Career Framework: Senior
Quality Department SET Career Framework: Staff
Support Career Framework
Support Career Framework: Associate Support Engineer
Support Career Framework: Customer Support Representative
Support Career Framework: Intermediate Support Engineer
Support Career Framework: Senior Support Engineer
Support Career Framework: Staff Support Engineer
Mentoring
- Engineering Career Framework
Development Department Career Framework
Dev Career Framework
Backend
Dev Career Framework: Intermediate Backend Engineer
Dev Career Framework: Senior Backend Engineer
Dev Career Framework: Staff Backend Engineer
Dev Career Framework: Principal Engineer
Frontend
Dev Career Framework: Intermediate Frontend Engineer
Dev Career Framework: Senior Frontend Engineer
Dev Career Framework: Staff Frontend Engineer
Fullstack
Dev Career Framework: Intermediate Fullstack Engineer
Dev Career Framework: Senior Fullstack Engineer
Dev Career Framework: Staff Fullstack Engineer
Development Department Career Framework: Intermediate
Development Department Career Framework: Intern
Development Department Career Framework: Principal
Development Department Career Framework: Senior
Development Department Career Framework: Staff
Engineering Career Framework: Associate
Engineering Career Framework: Intermediate
Engineering Career Framework: Intern
Engineering Career Framework: Principal
Engineering Career Framework: Senior
Engineering Career Framework: Staff
Infrastructure Department Career Framework
Associate - Infrastructure Department Career Framework
Core Platform Career Framework
Distribution
Core Platform Career Framework: Intermediate Distribution Engineer
Core Platform Career Framework: Senior Distribution Engineer
Intermediate - Infrastructure Department Career Framework
Intern - Infrastructure Department Career Framework
Principal - Infrastructure Department Career Framework
Senior - Infrastructure Department Career Framework
Staff - Infrastructure Department Career Framework
Quality Department Career Framework
Engineering Productivity Career Framework
Quality Career Framework: Intermediate Backend Engineer, Engineering Productivity
Quality Career Framework: Senior Backend Engineer, Engineering Productivity
Quality Career Framework: Staff Backend Engineer, Engineering Productivity
Software Engineer in Test Career Framework
Quality Department SET Career Framework: Associate
Quality Department SET Career Framework: Intermediate
Quality Department SET Career Framework: Principal
Quality Department SET Career Framework: Senior
Quality Department SET Career Framework: Staff
Support Career Framework
Support Career Framework: Associate Support Engineer
Support Career Framework: Customer Support Representative
Support Career Framework: Intermediate Support Engineer
Support Career Framework: Senior Support Engineer
Support Career Framework: Staff Support Engineer
- Development Department Career Framework
Dev Career Framework
Backend
Dev Career Framework: Intermediate Backend Engineer
Dev Career Framework: Senior Backend Engineer
Dev Career Framework: Staff Backend Engineer
Dev Career Framework: Principal Engineer
Frontend
Dev Career Framework: Intermediate Frontend Engineer
Dev Career Framework: Senior Frontend Engineer
Dev Career Framework: Staff Frontend Engineer
Fullstack
Dev Career Framework: Intermediate Fullstack Engineer
Dev Career Framework: Senior Fullstack Engineer
Dev Career Framework: Staff Fullstack Engineer
Development Department Career Framework: Intermediate
Development Department Career Framework: Intern
Development Department Career Framework: Principal
Development Department Career Framework: Senior
Development Department Career Framework: Staff
- Dev Career Framework
Backend
Dev Career Framework: Intermediate Backend Engineer
Dev Career Framework: Senior Backend Engineer
Dev Career Framework: Staff Backend Engineer
Dev Career Framework: Principal Engineer
Frontend
Dev Career Framework: Intermediate Frontend Engineer
Dev Career Framework: Senior Frontend Engineer
Dev Career Framework: Staff Frontend Engineer
Fullstack
Dev Career Framework: Intermediate Fullstack Engineer
Dev Career Framework: Senior Fullstack Engineer
Dev Career Framework: Staff Fullstack Engineer
- Backend
Dev Career Framework: Intermediate Backend Engineer
Dev Career Framework: Senior Backend Engineer
Dev Career Framework: Staff Backend Engineer
- Dev Career Framework: Intermediate Backend Engineer
- Dev Career Framework: Senior Backend Engineer
- Dev Career Framework: Staff Backend Engineer
- Dev Career Framework: Principal Engineer
- Frontend
Dev Career Framework: Intermediate Frontend Engineer
Dev Career Framework: Senior Frontend Engineer
Dev Career Framework: Staff Frontend Engineer
- Dev Career Framework: Intermediate Frontend Engineer
- Dev Career Framework: Senior Frontend Engineer
- Dev Career Framework: Staff Frontend Engineer
- Fullstack
Dev Career Framework: Intermediate Fullstack Engineer
Dev Career Framework: Senior Fullstack Engineer
Dev Career Framework: Staff Fullstack Engineer
- Dev Career Framework: Intermediate Fullstack Engineer
- Dev Career Framework: Senior Fullstack Engineer
- Dev Career Framework: Staff Fullstack Engineer
- Development Department Career Framework: Intermediate
- Development Department Career Framework: Intern
- Development Department Career Framework: Principal
- Development Department Career Framework: Senior
- Development Department Career Framework: Staff
- Engineering Career Framework: Associate
- Engineering Career Framework: Intermediate
- Engineering Career Framework: Intern
- Engineering Career Framework: Principal
- Engineering Career Framework: Senior
- Engineering Career Framework: Staff
- Infrastructure Department Career Framework
Associate - Infrastructure Department Career Framework
Core Platform Career Framework
Distribution
Core Platform Career Framework: Intermediate Distribution Engineer
Core Platform Career Framework: Senior Distribution Engineer
Intermediate - Infrastructure Department Career Framework
Intern - Infrastructure Department Career Framework
Principal - Infrastructure Department Career Framework
Senior - Infrastructure Department Career Framework
Staff - Infrastructure Department Career Framework
- Associate - Infrastructure Department Career Framework
- Core Platform Career Framework
Distribution
Core Platform Career Framework: Intermediate Distribution Engineer
Core Platform Career Framework: Senior Distribution Engineer
- Distribution
Core Platform Career Framework: Intermediate Distribution Engineer
Core Platform Career Framework: Senior Distribution Engineer
- Core Platform Career Framework: Intermediate Distribution Engineer
- Core Platform Career Framework: Senior Distribution Engineer
- Intermediate - Infrastructure Department Career Framework
- Intern - Infrastructure Department Career Framework
- Principal - Infrastructure Department Career Framework
- Senior - Infrastructure Department Career Framework
- Staff - Infrastructure Department Career Framework
- Quality Department Career Framework
Engineering Productivity Career Framework
Quality Career Framework: Intermediate Backend Engineer, Engineering Productivity
Quality Career Framework: Senior Backend Engineer, Engineering Productivity
Quality Career Framework: Staff Backend Engineer, Engineering Productivity
Software Engineer in Test Career Framework
Quality Department SET Career Framework: Associate
Quality Department SET Career Framework: Intermediate
Quality Department SET Career Framework: Principal
Quality Department SET Career Framework: Senior
Quality Department SET Career Framework: Staff
- Engineering Productivity Career Framework
Quality Career Framework: Intermediate Backend Engineer, Engineering Productivity
Quality Career Framework: Senior Backend Engineer, Engineering Productivity
Quality Career Framework: Staff Backend Engineer, Engineering Productivity
- Quality Career Framework: Intermediate Backend Engineer, Engineering Productivity
- Quality Career Framework: Senior Backend Engineer, Engineering Productivity
- Quality Career Framework: Staff Backend Engineer, Engineering Productivity
- Software Engineer in Test Career Framework
Quality Department SET Career Framework: Associate
Quality Department SET Career Framework: Intermediate
Quality Department SET Career Framework: Principal
Quality Department SET Career Framework: Senior
Quality Department SET Career Framework: Staff
- Quality Department SET Career Framework: Associate
- Quality Department SET Career Framework: Intermediate
- Quality Department SET Career Framework: Principal
- Quality Department SET Career Framework: Senior
- Quality Department SET Career Framework: Staff
- Support Career Framework
Support Career Framework: Associate Support Engineer
Support Career Framework: Customer Support Representative
Support Career Framework: Intermediate Support Engineer
Support Career Framework: Senior Support Engineer
Support Career Framework: Staff Support Engineer
- Support Career Framework: Associate Support Engineer
- Support Career Framework: Customer Support Representative
- Support Career Framework: Intermediate Support Engineer
- Support Career Framework: Senior Support Engineer
- Support Career Framework: Staff Support Engineer
- Mentoring
- Engineering Communication
Engineering Poster Boards
- Engineering Poster Boards
- Engineering Demo Process
- Engineering Error Budgets
Engineering Error Budget Custom Targets
Engineering Error Budgets for Stage Groups
- Engineering Error Budget Custom Targets
- Engineering Error Budgets for Stage Groups
- Engineering Function Performance Indicators
- Engineering Hiring
- Engineering IC Leadership
Tech Lead at GitLab
- Tech Lead at GitLab
- Engineering Management
Engineering Management Career Development
Engineering Management Project Management
Engineering Manager Hiring
Group Retrospectives
- Engineering Management Career Development
- Engineering Management Project Management
- Engineering Manager Hiring
- Group Retrospectives
- Engineering Mentorship
- Engineering Projects
- Engineering Secondments
- Engineering Team Readmes
Amy Shiel README
Andras Horvath's README
Angela Piotrowski's README
Ben King's README
Chris 'CK' README
Craig Miskell README
Daniel Diniz's README
David Wainaina README
Eduardo Bonet's README
Emily Chang's README
Jane Gianoutsos' README
Juan Silva's README
Kamil Trzci≈Ñski's README
Lee Matos' README
Lyle Kozloff's README
Marin Jankovski's README
Mario Mora's README
Matt Nohr's README
Max Woolf's README
Michael Lun√∏e's README
Mike Dunninger's README
MikeL's README
Nick Veenhof's README
README of Alex Ives
README of Gabriel Yoachum
README of Katrin Leinweber
Rebecca Spainhower's README
Ronnie Alfaro's Readme
Savas Vedova's README
Sean Carroll's Readme
Simon Street's README
Thong Kuah's README
Tom McAtee's README
- Amy Shiel README
- Andras Horvath's README
- Angela Piotrowski's README
- Ben King's README
- Chris 'CK' README
- Craig Miskell README
- Daniel Diniz's README
- David Wainaina README
- Eduardo Bonet's README
- Emily Chang's README
- Jane Gianoutsos' README
- Juan Silva's README
- Kamil Trzci≈Ñski's README
- Lee Matos' README
- Lyle Kozloff's README
- Marin Jankovski's README
- Mario Mora's README
- Matt Nohr's README
- Max Woolf's README
- Michael Lun√∏e's README
- Mike Dunninger's README
- MikeL's README
- Nick Veenhof's README
- README of Alex Ives
- README of Gabriel Yoachum
- README of Katrin Leinweber
- Rebecca Spainhower's README
- Ronnie Alfaro's Readme
- Savas Vedova's README
- Sean Carroll's Readme
- Simon Street's README
- Thong Kuah's README
- Tom McAtee's README
- Engineering Workflow
Code Review Guidelines
Code Review Values
Iteration
Related Engineering Workflows
Release/Feature Determination Workflow
- Code Review Guidelines
- Code Review Values
- Iteration
- Related Engineering Workflows
- Release/Feature Determination Workflow
- Expansion Development Department
- Fast Boot
- Frontend Group
Interview Metrics - Frontend
Skillsharing - Frontend
- Interview Metrics - Frontend
- Skillsharing - Frontend
- FY25 Engineering get-together subsidy
- GitLab Plato HQ Mentoring Program
- GitLab Repositories
- Guidelines for automation and access tokens
- Incident
- Infrastructure
Alert Playbook Management
Capacity Planning for GitLab Infrastructure
Career Development in the Infrastructure Department
Cells
Test Platform in Cells
Change Management
Cost Management
GCP CUD
Group Cost Metrics
How to Engage
Infrafin
Infrastructure Analyst Board
Infrastructure Analyst Role
Learning Resources
AWS
GCP
P&L Allocation
Database
Database: Disaster Recovery
Emergency Change Processes for GitLab SaaS
Engineering Productivity team
Direction - GDK
Engineering productivity project management
Flaky tests management and processes
Issue Triage
SPACE: Satisfaction, Performance, Activity, Collaboration, and Efficiency
Test Intelligence
Triage Operations
Issue Triage Onboarding
Wider Community Merge Request Triage
Workflow Automation
Getting Assistance on Infrastructure Platforms
Incident Management
Incident Manager On Call onboarding
Tier-2 Oncall
Incident Review
Infrastructure Department Frequently Asked Questions
Infrastructure Department Performance Indicators
Infrastructure Department Projects
Infrastructure Environments
Environments Canary Stage
Staging Ref environment
Infrastructure Feature Support
Infrastructure Product Management
Network Security Management Procedure
Production
Production Architecture
CI Service Architecture
Disaster Recovery Architecture
Supporting Architecture
Production Readiness Review
Rate Limiting
Bypass Policy
Managing Limits
Rate Limiting Troubleshooting
Release Tools
Service Maturity Model
Team
Cloud Connector Group
Application Performance Group - 2020 Impact
Application Performance Group - Approach and Common Themes
Application Performance Group - Knowledge Sharing
Cloud Connector - Technical vision
Distinguished Engineer, Infrastructure - Andrew Newdigate
FinOps Team
GitLab Dedicated Group
Environment Automation Team
GitLab Dedicated Architecture
From Dedicated to Cells: A Technical Analysis
GitLab Dedicated SLAs
Switchboard team
US Public Sector Services team
Production Engineering Ops Team
Disaster Recovery Practice (DR Gamedays)
EOC Onboarding Buddies
EOC Shadow and EOC Buddy Expectations
On-call handover
Production Engineering Ops Team Roadmaps
FY26 Production Engineering Ops Team Roadmaps
FY26 - Disaster Recovery
FY26 - Hosted Runners
FY26 - Incident Management
FY26 - Patching & OS Modernization
SRE Onboarding
Runway Team
Scalability Group
The Infrastructure Platforms Section
Infrastructure Platforms Tools Index
Runway
Platforms Processes
Calibration
The Infrastructure Platforms Hiring Process
The Infrastructure Platforms OKRs
The Infrastructure Platforms Project Management
- Alert Playbook Management
- Capacity Planning for GitLab Infrastructure
- Career Development in the Infrastructure Department
- Cells
Test Platform in Cells
- Test Platform in Cells
- Change Management
- Cost Management
GCP CUD
Group Cost Metrics
How to Engage
Infrafin
Infrastructure Analyst Board
Infrastructure Analyst Role
Learning Resources
AWS
GCP
P&L Allocation
- GCP CUD
- Group Cost Metrics
- How to Engage
- Infrafin
- Infrastructure Analyst Board
- Infrastructure Analyst Role
- Learning Resources
AWS
GCP
- AWS
- GCP
- P&L Allocation
- Database
Database: Disaster Recovery
- Database: Disaster Recovery
- Emergency Change Processes for GitLab SaaS
- Engineering Productivity team
Direction - GDK
Engineering productivity project management
Flaky tests management and processes
Issue Triage
SPACE: Satisfaction, Performance, Activity, Collaboration, and Efficiency
Test Intelligence
Triage Operations
Issue Triage Onboarding
Wider Community Merge Request Triage
Workflow Automation
- Direction - GDK
- Engineering productivity project management
- Flaky tests management and processes
- Issue Triage
- SPACE: Satisfaction, Performance, Activity, Collaboration, and Efficiency
- Test Intelligence
- Triage Operations
Issue Triage Onboarding
- Issue Triage Onboarding
- Wider Community Merge Request Triage
- Workflow Automation
- Getting Assistance on Infrastructure Platforms
- Incident Management
Incident Manager On Call onboarding
Tier-2 Oncall
- Incident Manager On Call onboarding
- Tier-2 Oncall
- Incident Review
- Infrastructure Department Frequently Asked Questions
- Infrastructure Department Performance Indicators
- Infrastructure Department Projects
- Infrastructure Environments
Environments Canary Stage
Staging Ref environment
- Environments Canary Stage
- Staging Ref environment
- Infrastructure Feature Support
- Infrastructure Product Management
- Network Security Management Procedure
- Production
Production Architecture
CI Service Architecture
Disaster Recovery Architecture
Supporting Architecture
Production Readiness Review
- Production Architecture
CI Service Architecture
Disaster Recovery Architecture
Supporting Architecture
- CI Service Architecture
- Disaster Recovery Architecture
- Supporting Architecture
- Production Readiness Review
- Rate Limiting
Bypass Policy
Managing Limits
Rate Limiting Troubleshooting
- Bypass Policy
- Managing Limits
- Rate Limiting Troubleshooting
- Release Tools
- Service Maturity Model
- Team
Cloud Connector Group
Application Performance Group - 2020 Impact
Application Performance Group - Approach and Common Themes
Application Performance Group - Knowledge Sharing
Cloud Connector - Technical vision
Distinguished Engineer, Infrastructure - Andrew Newdigate
FinOps Team
GitLab Dedicated Group
Environment Automation Team
GitLab Dedicated Architecture
From Dedicated to Cells: A Technical Analysis
GitLab Dedicated SLAs
Switchboard team
US Public Sector Services team
Production Engineering Ops Team
Disaster Recovery Practice (DR Gamedays)
EOC Onboarding Buddies
EOC Shadow and EOC Buddy Expectations
On-call handover
Production Engineering Ops Team Roadmaps
FY26 Production Engineering Ops Team Roadmaps
FY26 - Disaster Recovery
FY26 - Hosted Runners
FY26 - Incident Management
FY26 - Patching & OS Modernization
SRE Onboarding
Runway Team
Scalability Group
- Cloud Connector Group
Application Performance Group - 2020 Impact
Application Performance Group - Approach and Common Themes
Application Performance Group - Knowledge Sharing
Cloud Connector - Technical vision
- Application Performance Group - 2020 Impact
- Application Performance Group - Approach and Common Themes
- Application Performance Group - Knowledge Sharing
- Cloud Connector - Technical vision
- Distinguished Engineer, Infrastructure - Andrew Newdigate
- FinOps Team
- GitLab Dedicated Group
Environment Automation Team
GitLab Dedicated Architecture
From Dedicated to Cells: A Technical Analysis
GitLab Dedicated SLAs
Switchboard team
US Public Sector Services team
- Environment Automation Team
- GitLab Dedicated Architecture
From Dedicated to Cells: A Technical Analysis
- From Dedicated to Cells: A Technical Analysis
- GitLab Dedicated SLAs
- Switchboard team
- US Public Sector Services team
- Production Engineering Ops Team
Disaster Recovery Practice (DR Gamedays)
EOC Onboarding Buddies
EOC Shadow and EOC Buddy Expectations
On-call handover
Production Engineering Ops Team Roadmaps
FY26 Production Engineering Ops Team Roadmaps
FY26 - Disaster Recovery
FY26 - Hosted Runners
FY26 - Incident Management
FY26 - Patching & OS Modernization
SRE Onboarding
- Disaster Recovery Practice (DR Gamedays)
- EOC Onboarding Buddies
- EOC Shadow and EOC Buddy Expectations
- On-call handover
- Production Engineering Ops Team Roadmaps
FY26 Production Engineering Ops Team Roadmaps
FY26 - Disaster Recovery
FY26 - Hosted Runners
FY26 - Incident Management
FY26 - Patching & OS Modernization
- FY26 Production Engineering Ops Team Roadmaps
FY26 - Disaster Recovery
FY26 - Hosted Runners
FY26 - Incident Management
FY26 - Patching & OS Modernization
- FY26 - Disaster Recovery
- FY26 - Hosted Runners
- FY26 - Incident Management
- FY26 - Patching & OS Modernization
- SRE Onboarding
- Runway Team
- Scalability Group
- The Infrastructure Platforms Section
Infrastructure Platforms Tools Index
Runway
Platforms Processes
Calibration
The Infrastructure Platforms Hiring Process
The Infrastructure Platforms OKRs
The Infrastructure Platforms Project Management
- Infrastructure Platforms Tools Index
Runway
- Runway
- Platforms Processes
Calibration
- Calibration
- The Infrastructure Platforms Hiring Process
- The Infrastructure Platforms OKRs
- The Infrastructure Platforms Project Management
- Infrastructure Platforms
Data Access Sub Department
Data Access Durability Team
Database Framework Group
Container Registry on PostgreSQL
Crafting Queries with Postgres Ai Plans
Database Group Activity Log
Database Group Stable Counterparts
Database Lexicon - terms and definitions relating to our database
Database Partitioning
Database Strategy
Identifying Database Issues
Introduction to Background Migrations
Introduction to Database Review
Multi-database Background migrations
Partitioning - Issue group search
PostgreSQL 11 sharding with foreign data wrappers and partitioning
PostgreSQL Upgrade Cadence
Sharding GitLab by top-level namespace
Sharding GitLab with CitusDB
Understanding how Indexes Impact Performance on GitLab.com
Working with the GitLab.com database for developers
Workload analysis for GitLab.com
Database Help Workflow
Database Operations Team  (formerly known as the Database Reliablity Engineering (DBRE) team)
DBO Escalation Process
Git Team
Gitaly Team
Debugging the Gitaly service
Developer Experience
Bug Prioritization
Debugging Failing Tests and Test Pipelines
Developer Experience Dashboards
Developer Experience Design Documents
Developer Experience On-call Rotation
Developer Experience Onboarding
Developer Experience Project Management
Developer Tooling team
Development Analytics Group
Create triage policies with the assistance of GitLab Duo Workflow
End-to-end Pipeline Monitoring
Engineering Analytics Team
Feature Readiness
Performance Enablement
Browser Performance Testing
Observability Based Performance Testing at GitLab
Operational Verification
Performance Testing at GitLab
Test Platform in Distribution group
Pipeline Triage
Quality Engineering Learning Resources
Risk Mapping
Test Coverage
Test Governance Group
Test Governance Tips and Tricks
Test Platform Roadmap
GitLab Delivery
Delivery Group
Delivery Team Metrics
Delivery Team Training
Engineering Manager, Delivery
Distribution
Distribution Team Demo
Distribution Team Infrastructure and Maintenance
Distribution Team Infrastructure and Maintenance - Build Infrastructure
Distribution Team Infrastructure and Maintenance - dev.gitlab.org
Distribution Team Infrastructure: ARM
Distribution Team usage of Renovate
Distribution Team Kubernetes and OpenShift release support policy
Distribution Team Merge Request Handling
Distribution Team Training
Distribution Team Triage
Distribution Team Workflow
GitLab Delivery: Self Managed
GitLab Delivery:Framework
Reference Architectures - Validation and Testing
Production Engineering
Observability Team
Capacity Planning
Cost of Observability Stack
Error Budgets
Technical Blueprint
Production Engineering Foundations Team
Production Engineering Group - Project Management
Tenant Scale Group
Cells Infrastructure Team
Geo and Disaster Recovery
Geo and Disaster Recovery - Hierarchy of Agile Work Items
Geo and Disaster Recovery - Planning
Geo and Disaster Recovery - Retrospectives
Geo on staging.gitlab.com
Geo scheduled pipelines
Organizations Team
- Data Access Sub Department
Data Access Durability Team
Database Framework Group
Container Registry on PostgreSQL
Crafting Queries with Postgres Ai Plans
Database Group Activity Log
Database Group Stable Counterparts
Database Lexicon - terms and definitions relating to our database
Database Partitioning
Database Strategy
Identifying Database Issues
Introduction to Background Migrations
Introduction to Database Review
Multi-database Background migrations
Partitioning - Issue group search
PostgreSQL 11 sharding with foreign data wrappers and partitioning
PostgreSQL Upgrade Cadence
Sharding GitLab by top-level namespace
Sharding GitLab with CitusDB
Understanding how Indexes Impact Performance on GitLab.com
Working with the GitLab.com database for developers
Workload analysis for GitLab.com
Database Help Workflow
Database Operations Team  (formerly known as the Database Reliablity Engineering (DBRE) team)
DBO Escalation Process
Git Team
Gitaly Team
Debugging the Gitaly service
- Data Access Durability Team
- Database Framework Group
Container Registry on PostgreSQL
Crafting Queries with Postgres Ai Plans
Database Group Activity Log
Database Group Stable Counterparts
Database Lexicon - terms and definitions relating to our database
Database Partitioning
Database Strategy
Identifying Database Issues
Introduction to Background Migrations
Introduction to Database Review
Multi-database Background migrations
Partitioning - Issue group search
PostgreSQL 11 sharding with foreign data wrappers and partitioning
PostgreSQL Upgrade Cadence
Sharding GitLab by top-level namespace
Sharding GitLab with CitusDB
Understanding how Indexes Impact Performance on GitLab.com
Working with the GitLab.com database for developers
Workload analysis for GitLab.com
- Container Registry on PostgreSQL
- Crafting Queries with Postgres Ai Plans
- Database Group Activity Log
- Database Group Stable Counterparts
- Database Lexicon - terms and definitions relating to our database
- Database Partitioning
- Database Strategy
- Identifying Database Issues
- Introduction to Background Migrations
- Introduction to Database Review
- Multi-database Background migrations
- Partitioning - Issue group search
- PostgreSQL 11 sharding with foreign data wrappers and partitioning
- PostgreSQL Upgrade Cadence
- Sharding GitLab by top-level namespace
- Sharding GitLab with CitusDB
- Understanding how Indexes Impact Performance on GitLab.com
- Working with the GitLab.com database for developers
- Workload analysis for GitLab.com
- Database Help Workflow
- Database Operations Team  (formerly known as the Database Reliablity Engineering (DBRE) team)
DBO Escalation Process
- DBO Escalation Process
- Git Team
- Gitaly Team
Debugging the Gitaly service
- Debugging the Gitaly service
- Developer Experience
Bug Prioritization
Debugging Failing Tests and Test Pipelines
Developer Experience Dashboards
Developer Experience Design Documents
Developer Experience On-call Rotation
Developer Experience Onboarding
Developer Experience Project Management
Developer Tooling team
Development Analytics Group
Create triage policies with the assistance of GitLab Duo Workflow
End-to-end Pipeline Monitoring
Engineering Analytics Team
Feature Readiness
Performance Enablement
Browser Performance Testing
Observability Based Performance Testing at GitLab
Operational Verification
Performance Testing at GitLab
Test Platform in Distribution group
Pipeline Triage
Quality Engineering Learning Resources
Risk Mapping
Test Coverage
Test Governance Group
Test Governance Tips and Tricks
Test Platform Roadmap
- Bug Prioritization
- Debugging Failing Tests and Test Pipelines
- Developer Experience Dashboards
- Developer Experience Design Documents
- Developer Experience On-call Rotation
- Developer Experience Onboarding
- Developer Experience Project Management
- Developer Tooling team
- Development Analytics Group
Create triage policies with the assistance of GitLab Duo Workflow
- Create triage policies with the assistance of GitLab Duo Workflow
- End-to-end Pipeline Monitoring
- Engineering Analytics Team
- Feature Readiness
- Performance Enablement
Browser Performance Testing
Observability Based Performance Testing at GitLab
Operational Verification
Performance Testing at GitLab
Test Platform in Distribution group
- Browser Performance Testing
- Observability Based Performance Testing at GitLab
- Operational Verification
- Performance Testing at GitLab
- Test Platform in Distribution group
- Pipeline Triage
- Quality Engineering Learning Resources
- Risk Mapping
- Test Coverage
- Test Governance Group
- Test Governance Tips and Tricks
- Test Platform Roadmap
- GitLab Delivery
Delivery Group
Delivery Team Metrics
Delivery Team Training
Engineering Manager, Delivery
Distribution
Distribution Team Demo
Distribution Team Infrastructure and Maintenance
Distribution Team Infrastructure and Maintenance - Build Infrastructure
Distribution Team Infrastructure and Maintenance - dev.gitlab.org
Distribution Team Infrastructure: ARM
Distribution Team usage of Renovate
Distribution Team Kubernetes and OpenShift release support policy
Distribution Team Merge Request Handling
Distribution Team Training
Distribution Team Triage
Distribution Team Workflow
GitLab Delivery: Self Managed
GitLab Delivery:Framework
Reference Architectures - Validation and Testing
- Delivery Group
Delivery Team Metrics
Delivery Team Training
Engineering Manager, Delivery
- Delivery Team Metrics
- Delivery Team Training
- Engineering Manager, Delivery
- Distribution
Distribution Team Demo
Distribution Team Infrastructure and Maintenance
Distribution Team Infrastructure and Maintenance - Build Infrastructure
Distribution Team Infrastructure and Maintenance - dev.gitlab.org
Distribution Team Infrastructure: ARM
Distribution Team usage of Renovate
Distribution Team Kubernetes and OpenShift release support policy
Distribution Team Merge Request Handling
Distribution Team Training
Distribution Team Triage
Distribution Team Workflow
- Distribution Team Demo
- Distribution Team Infrastructure and Maintenance
Distribution Team Infrastructure and Maintenance - Build Infrastructure
Distribution Team Infrastructure and Maintenance - dev.gitlab.org
Distribution Team Infrastructure: ARM
Distribution Team usage of Renovate
- Distribution Team Infrastructure and Maintenance - Build Infrastructure
- Distribution Team Infrastructure and Maintenance - dev.gitlab.org
- Distribution Team Infrastructure: ARM
- Distribution Team usage of Renovate
- Distribution Team Kubernetes and OpenShift release support policy
- Distribution Team Merge Request Handling
- Distribution Team Training
- Distribution Team Triage
- Distribution Team Workflow
- GitLab Delivery: Self Managed
- GitLab Delivery:Framework
Reference Architectures - Validation and Testing
- Reference Architectures - Validation and Testing
- Production Engineering
Observability Team
Capacity Planning
Cost of Observability Stack
Error Budgets
Technical Blueprint
Production Engineering Foundations Team
Production Engineering Group - Project Management
- Observability Team
Capacity Planning
Cost of Observability Stack
Error Budgets
Technical Blueprint
- Capacity Planning
- Cost of Observability Stack
- Error Budgets
- Technical Blueprint
- Production Engineering Foundations Team
- Production Engineering Group - Project Management
- Tenant Scale Group
Cells Infrastructure Team
Geo and Disaster Recovery
Geo and Disaster Recovery - Hierarchy of Agile Work Items
Geo and Disaster Recovery - Planning
Geo and Disaster Recovery - Retrospectives
Geo on staging.gitlab.com
Geo scheduled pipelines
Organizations Team
- Cells Infrastructure Team
- Geo and Disaster Recovery
Geo and Disaster Recovery - Hierarchy of Agile Work Items
Geo and Disaster Recovery - Planning
Geo and Disaster Recovery - Retrospectives
Geo on staging.gitlab.com
Geo scheduled pipelines
- Geo and Disaster Recovery - Hierarchy of Agile Work Items
- Geo and Disaster Recovery - Planning
- Geo and Disaster Recovery - Retrospectives
- Geo on staging.gitlab.com
- Geo scheduled pipelines
- Organizations Team
- Innovation at GitLab
- Joint R&D OKR Process
- Monitoring of GitLab.com
Staging Monitoring
- Staging Monitoring
- On-Call
- Open Source at GitLab
Open Source Growth Strategy
- Open Source Growth Strategy
- Performance
- Policies related to GitLab.com
Backups of GitLab.com
GitLab Teleport Access Policy
Monitoring of GitLab.com
- Backups of GitLab.com
- GitLab Teleport Access Policy
- Monitoring of GitLab.com
- R&D Tax Credits
- Recognition in Engineering
- Releases
Backports
Internal Releases
Patch Releases
- Backports
- Internal Releases
- Patch Releases
- Root Cause Analysis
- Starting new teams
- Unplanned Upgrade Stop Workflow
- Enterprise Data Team
Data Governance
Data Catalog
Data Quality
Data Team Data Management Page
Data Team - How We Work
Contributing to the Data Team Project
CI Jobs You Should Know About on Any MR
Preparing Your MR for Merging
Working in the GitLab Web IDE
Data Development
Data Team - Planning Process
Data Team Calendar - Meetings
Data Triage Guide
dbt Change Workflow
Functional Analytics Center of Excellence
Merge Request Roles and Responsibilities
New Data Source
Data Team Organization
Analytics Engineering at GitLab
Data Analytics at GitLab
Data Platform at GitLab
Data Science Handbook
Data Science Project Development Approach
Data Steering Committee at GitLab
Data Team Internships
Data Team Learning and Resources
Data Team Programs
Data For Product Managers
Enterprise Data & Insights Team Operating Principles
Learnings From Internships
SRE Internship
Data Team Platform
AWS Data Team Guide
Data Infrastructure
Data pipelines
Data Platform Security
Web Application Penetration Testing Process
Data Team CI Jobs
Data with GitLab Duo
Duo Inspiration Hub
dbt Guide
Enterprise Data Warehouse
GDPR deletions
Getting Started With CI/CD for Data Science Pipelines
Jupyter Guide
Monte Carlo Guide
Permifrost
Python Guide
Python/Tools package management and inventory
RStudio Guide
SAFE Data Guide
Snowflake Guide
Clustering in Snowflake
Snowflake SNS integration for Snowflake SnowPipe and task for failure
Snowflake warehouse optimization
Snowplow
SQL Style Guide
Tableau
Handbook Embedding Demonstration Page
Tableau Admin Guide
Tableau Developer Guide
Tableau Developer Tips and Tricks
Tableau Style Guide
Tableau Project Leaders Guide
Using Feast
- Data Governance
Data Catalog
Data Quality
Data Team Data Management Page
- Data Catalog
- Data Quality
- Data Team Data Management Page
- Data Team - How We Work
Contributing to the Data Team Project
CI Jobs You Should Know About on Any MR
Preparing Your MR for Merging
Working in the GitLab Web IDE
Data Development
Data Team - Planning Process
Data Team Calendar - Meetings
Data Triage Guide
dbt Change Workflow
Functional Analytics Center of Excellence
Merge Request Roles and Responsibilities
New Data Source
- Contributing to the Data Team Project
CI Jobs You Should Know About on Any MR
Preparing Your MR for Merging
Working in the GitLab Web IDE
- CI Jobs You Should Know About on Any MR
- Preparing Your MR for Merging
- Working in the GitLab Web IDE
- Data Development
- Data Team - Planning Process
- Data Team Calendar - Meetings
- Data Triage Guide
- dbt Change Workflow
- Functional Analytics Center of Excellence
- Merge Request Roles and Responsibilities
- New Data Source
- Data Team Organization
Analytics Engineering at GitLab
Data Analytics at GitLab
Data Platform at GitLab
Data Science Handbook
Data Science Project Development Approach
Data Steering Committee at GitLab
Data Team Internships
Data Team Learning and Resources
Data Team Programs
Data For Product Managers
Enterprise Data & Insights Team Operating Principles
Learnings From Internships
SRE Internship
- Analytics Engineering at GitLab
- Data Analytics at GitLab
- Data Platform at GitLab
- Data Science Handbook
Data Science Project Development Approach
- Data Science Project Development Approach
- Data Steering Committee at GitLab
- Data Team Internships
- Data Team Learning and Resources
- Data Team Programs
Data For Product Managers
- Data For Product Managers
- Enterprise Data & Insights Team Operating Principles
- Learnings From Internships
SRE Internship
- SRE Internship
- Data Team Platform
AWS Data Team Guide
Data Infrastructure
Data pipelines
Data Platform Security
Web Application Penetration Testing Process
Data Team CI Jobs
Data with GitLab Duo
Duo Inspiration Hub
dbt Guide
Enterprise Data Warehouse
GDPR deletions
Getting Started With CI/CD for Data Science Pipelines
Jupyter Guide
Monte Carlo Guide
Permifrost
Python Guide
Python/Tools package management and inventory
RStudio Guide
SAFE Data Guide
Snowflake Guide
Clustering in Snowflake
Snowflake SNS integration for Snowflake SnowPipe and task for failure
Snowflake warehouse optimization
Snowplow
SQL Style Guide
Tableau
Handbook Embedding Demonstration Page
Tableau Admin Guide
Tableau Developer Guide
Tableau Developer Tips and Tricks
Tableau Style Guide
Tableau Project Leaders Guide
Using Feast
- AWS Data Team Guide
- Data Infrastructure
- Data pipelines
- Data Platform Security
Web Application Penetration Testing Process
- Web Application Penetration Testing Process
- Data Team CI Jobs
- Data with GitLab Duo
Duo Inspiration Hub
- Duo Inspiration Hub
- dbt Guide
- Enterprise Data Warehouse
- GDPR deletions
- Getting Started With CI/CD for Data Science Pipelines
- Jupyter Guide
- Monte Carlo Guide
- Permifrost
- Python Guide
- Python/Tools package management and inventory
- RStudio Guide
- SAFE Data Guide
- Snowflake Guide
Clustering in Snowflake
Snowflake SNS integration for Snowflake SnowPipe and task for failure
- Clustering in Snowflake
- Snowflake SNS integration for Snowflake SnowPipe and task for failure
- Snowflake warehouse optimization
- Snowplow
- SQL Style Guide
- Tableau
Handbook Embedding Demonstration Page
Tableau Admin Guide
Tableau Developer Guide
Tableau Developer Tips and Tricks
Tableau Style Guide
Tableau Project Leaders Guide
- Handbook Embedding Demonstration Page
- Tableau Admin Guide
- Tableau Developer Guide
Tableau Developer Tips and Tricks
Tableau Style Guide
- Tableau Developer Tips and Tricks
- Tableau Style Guide
- Tableau Project Leaders Guide
- Using Feast
- Entity-Specific Information
Entity-Specific Employment Policies
GitLab GmbH (Germany) information & benefits
GitLab Iberia s.r.l. (Spain) Information and Benefits
GitLab Israel Ltd. information & benefits
- Entity-Specific Employment Policies
- GitLab GmbH (Germany) information & benefits
- GitLab Iberia s.r.l. (Spain) Information and Benefits
- GitLab Israel Ltd. information & benefits
- Executive Business Administrators (EBAs)
CEO Scheduling & Preferences
E-Group Scheduling
VP Scheduling
- CEO Scheduling & Preferences
- E-Group Scheduling
- VP Scheduling
- Finance
Accounting and Reporting
Financial Operations
Billing Operations
Billing Operations, GPO
NetSuite Tech Stack Guide
Accounts Payable
Coupa Tech Stack Guide
Navan Expense Tech Stack Guide
Navan Physical Card
Virtual Card Guide for Accounts Payable
Authorization Matrix
Committee Composition
Finance Growth and Development
CFO Shadow Program
Finance Learning and Development
Finance Learning and Development
Finance Mentorship Program
Under Construction - FinBT Mentorship Program
Finance Team Performance Indicators
Financial Planning & Analysis
Adaptive Insights
Corporate FP&A
FP&A Definitions
FP&A Metrics
FP&A Processes
FP&A Team Structure
G&A Finance
GTM Analytics Hub
Headcount Metrics and Processes
R&D Finance
Hosting
GitLab Finance Team READMEs
Brian Robin's README
Brijen Joshi's README
James (Jim) Gladen's README
James Shen's README
Julie Malloy's README
Kelsey Turcotte's README
Nabitha Rao's README
Simon Mundy's README
Global Travel and Expense Policy
Investor Relations
Payroll
Sales Compensation Plan
Spending Company Money
The GitLab Procurement Team
Charitable Contribution Requests
Contingent Worker Policy
Coupa FAQ
External Consultant Orientation & Access Deprovisioning
Field Marketing and Events
Home Office Equipment and Supplies
Individual Use Software
Non-Cost related Agreements
Tips for Submitting a Zip Request
Vendor Guidelines
Legacy Vendor Terms and Conditions v1
Vendor Terms and Conditions
Virtual Cards
The GitLab Tax Team
The Internal Audit Function
Sarbanes-Oxley (SOX) Program
Timekeeping Policies and Procedures
Travel Safety and Security
Sponsored Travel
- Accounting and Reporting
Financial Operations
Billing Operations
Billing Operations, GPO
NetSuite Tech Stack Guide
- Financial Operations
Billing Operations
Billing Operations, GPO
NetSuite Tech Stack Guide
- Billing Operations
- Billing Operations, GPO
- NetSuite Tech Stack Guide
- Accounts Payable
Coupa Tech Stack Guide
Navan Expense Tech Stack Guide
Navan Physical Card
Virtual Card Guide for Accounts Payable
- Coupa Tech Stack Guide
- Navan Expense Tech Stack Guide
- Navan Physical Card
- Virtual Card Guide for Accounts Payable
- Authorization Matrix
- Committee Composition
- Finance Growth and Development
CFO Shadow Program
Finance Learning and Development
Finance Learning and Development
Finance Mentorship Program
Under Construction - FinBT Mentorship Program
- CFO Shadow Program
- Finance Learning and Development
- Finance Learning and Development
- Finance Mentorship Program
- Under Construction - FinBT Mentorship Program
- Finance Team Performance Indicators
- Financial Planning & Analysis
Adaptive Insights
Corporate FP&A
FP&A Definitions
FP&A Metrics
FP&A Processes
FP&A Team Structure
G&A Finance
GTM Analytics Hub
Headcount Metrics and Processes
R&D Finance
Hosting
- Adaptive Insights
- Corporate FP&A
- FP&A Definitions
- FP&A Metrics
- FP&A Processes
- FP&A Team Structure
- G&A Finance
- GTM Analytics Hub
- Headcount Metrics and Processes
- R&D Finance
Hosting
- Hosting
- GitLab Finance Team READMEs
Brian Robin's README
Brijen Joshi's README
James (Jim) Gladen's README
James Shen's README
Julie Malloy's README
Kelsey Turcotte's README
Nabitha Rao's README
Simon Mundy's README
- Brian Robin's README
- Brijen Joshi's README
- James (Jim) Gladen's README
- James Shen's README
- Julie Malloy's README
- Kelsey Turcotte's README
- Nabitha Rao's README
- Simon Mundy's README
- Global Travel and Expense Policy
- Investor Relations
- Payroll
- Sales Compensation Plan
- Spending Company Money
- The GitLab Procurement Team
Charitable Contribution Requests
Contingent Worker Policy
Coupa FAQ
External Consultant Orientation & Access Deprovisioning
Field Marketing and Events
Home Office Equipment and Supplies
Individual Use Software
Non-Cost related Agreements
Tips for Submitting a Zip Request
Vendor Guidelines
Legacy Vendor Terms and Conditions v1
Vendor Terms and Conditions
Virtual Cards
- Charitable Contribution Requests
- Contingent Worker Policy
- Coupa FAQ
- External Consultant Orientation & Access Deprovisioning
- Field Marketing and Events
- Home Office Equipment and Supplies
- Individual Use Software
- Non-Cost related Agreements
- Tips for Submitting a Zip Request
- Vendor Guidelines
Legacy Vendor Terms and Conditions v1
Vendor Terms and Conditions
- Legacy Vendor Terms and Conditions v1
- Vendor Terms and Conditions
- Virtual Cards
- The GitLab Tax Team
- The Internal Audit Function
Sarbanes-Oxley (SOX) Program
- Sarbanes-Oxley (SOX) Program
- Timekeeping Policies and Procedures
- Travel Safety and Security
Sponsored Travel
- Sponsored Travel
- GitLab Alliances Handbook
GitLab Integration Instructions
- GitLab Integration Instructions
- GitLab Channel Partner Program
Channel Partner Tools and Resources
Channel Partners: Working with GitLab
Developing your GitLab Practice
Channel Services Catalog
GitLab Channel Program Guide
Marketing Development Funds
GitLab Partner Champions Program
Partner Technical Presales Enablement
Channel Partner Implementation Services
Channel Partner Migration Services
Partner Training, Accreditations, and Enablement
- Channel Partner Tools and Resources
- Channel Partners: Working with GitLab
- Developing your GitLab Practice
Channel Services Catalog
- Channel Services Catalog
- GitLab Channel Program Guide
Marketing Development Funds
- Marketing Development Funds
- GitLab Partner Champions Program
- Partner Technical Presales Enablement
Channel Partner Implementation Services
Channel Partner Migration Services
- Channel Partner Implementation Services
- Channel Partner Migration Services
- Partner Training, Accreditations, and Enablement
- GitLab Communication
Ally Resources
Ask Me Anything
Confidentiality levels
Deep Dives
GitLab Communication ‚Äî Zoom
GitLab Webinars on Zoom
GitLab Communication Chat
GitLab Video Playbook
Power of the Pause
Top Misused Terms - GitLab Communication
- Ally Resources
- Ask Me Anything
- Confidentiality levels
- Deep Dives
- GitLab Communication ‚Äî Zoom
GitLab Webinars on Zoom
- GitLab Webinars on Zoom
- GitLab Communication Chat
- GitLab Video Playbook
- Power of the Pause
- Top Misused Terms - GitLab Communication
- GitLab's Guide to Total Rewards
Benefits
General & Entity Specific Benefits & Information
Financial Wellness
GitLab BV (Belgium) Benefits
GitLab BV (Finland) Benefits
GitLab BV (Netherlands) Benefits
GitLab Canada Corp
GitLab France S.A.S.
GitLab GK (Japan) Benefits
GitLab Inc (US) Benefits
Total Rewards Processes & Audits for US benefits
GitLab Ireland Ltd
GitLab Korea Limited Benefits
GitLab LTD (UK) Benefits
GitLab Singapore Pte Ltd
Global Expansion
Global Upside Benefits
Papaya-Global
PTY LTD Benefits
Remote.com
Leave of Absence Tool Kit for Managers and Team Members
Modern Health
Compensation
Annual Compensation Review Cycle
Compensation Review Cycle Inputs
The Compensation Calculator
Compensation Calculator
Equity Compensation
Incentives at GitLab
- Benefits
General & Entity Specific Benefits & Information
Financial Wellness
GitLab BV (Belgium) Benefits
GitLab BV (Finland) Benefits
GitLab BV (Netherlands) Benefits
GitLab Canada Corp
GitLab France S.A.S.
GitLab GK (Japan) Benefits
GitLab Inc (US) Benefits
Total Rewards Processes & Audits for US benefits
GitLab Ireland Ltd
GitLab Korea Limited Benefits
GitLab LTD (UK) Benefits
GitLab Singapore Pte Ltd
Global Expansion
Global Upside Benefits
Papaya-Global
PTY LTD Benefits
Remote.com
Leave of Absence Tool Kit for Managers and Team Members
Modern Health
- General & Entity Specific Benefits & Information
Financial Wellness
GitLab BV (Belgium) Benefits
GitLab BV (Finland) Benefits
GitLab BV (Netherlands) Benefits
GitLab Canada Corp
GitLab France S.A.S.
GitLab GK (Japan) Benefits
GitLab Inc (US) Benefits
Total Rewards Processes & Audits for US benefits
GitLab Ireland Ltd
GitLab Korea Limited Benefits
GitLab LTD (UK) Benefits
GitLab Singapore Pte Ltd
Global Expansion
Global Upside Benefits
Papaya-Global
PTY LTD Benefits
Remote.com
- Financial Wellness
- GitLab BV (Belgium) Benefits
- GitLab BV (Finland) Benefits
- GitLab BV (Netherlands) Benefits
- GitLab Canada Corp
- GitLab France S.A.S.
- GitLab GK (Japan) Benefits
- GitLab Inc (US) Benefits
Total Rewards Processes & Audits for US benefits
- Total Rewards Processes & Audits for US benefits
- GitLab Ireland Ltd
- GitLab Korea Limited Benefits
- GitLab LTD (UK) Benefits
- GitLab Singapore Pte Ltd
- Global Expansion
- Global Upside Benefits
- Papaya-Global
- PTY LTD Benefits
- Remote.com
- Leave of Absence Tool Kit for Managers and Team Members
- Modern Health
- Compensation
Annual Compensation Review Cycle
Compensation Review Cycle Inputs
The Compensation Calculator
Compensation Calculator
- Annual Compensation Review Cycle
Compensation Review Cycle Inputs
- Compensation Review Cycle Inputs
- The Compensation Calculator
Compensation Calculator
- Compensation Calculator
- Equity Compensation
- Incentives at GitLab
- Hiring & Talent Acquisition Handbook
Candidate Handbook Page
Recruitment Privacy Policy
Conducting a GitLab Interview
Contractor Conversions
Emerging Talent @ GitLab
GitLab talent ambassador
Greenhouse
Interviewer Prep Requirements
Interviewing at GitLab - Customer Support
Interviewing at GitLab - Infrastructure
Panel Interviews
Technical Interviews
Job Families
MERGE: Ongoing Development for Associate Engineers
ModernLoop
Referral Operations
Referral Program and Process
Sourcing
Talent Acquisition Alignment
Talent Acquisition Process Framework
Candidate Experience Specialist Responsibilities
Evergreen Requisitions
GitLab Talent Acquisition Process Framework for Talent Pools
Internal Hiring Process
Talent Acquisition Job Offer Process
Talent Acquisition Process - Acquisitions
Talent Acquisition Process - Hiring Manager Tasks
Talent Acquisition Process Framework for Creating REQs
Talent Acquisition Process Framework for REQs
Triad Process
Talent Acquisition Productivity
- Candidate Handbook Page
Recruitment Privacy Policy
- Recruitment Privacy Policy
- Conducting a GitLab Interview
- Contractor Conversions
- Emerging Talent @ GitLab
- GitLab talent ambassador
- Greenhouse
- Interviewer Prep Requirements
Interviewing at GitLab - Customer Support
Interviewing at GitLab - Infrastructure
Panel Interviews
Technical Interviews
- Interviewing at GitLab - Customer Support
- Interviewing at GitLab - Infrastructure
- Panel Interviews
- Technical Interviews
- Job Families
- MERGE: Ongoing Development for Associate Engineers
- ModernLoop
- Referral Operations
- Referral Program and Process
- Sourcing
- Talent Acquisition Alignment
- Talent Acquisition Process Framework
Candidate Experience Specialist Responsibilities
Evergreen Requisitions
GitLab Talent Acquisition Process Framework for Talent Pools
Internal Hiring Process
Talent Acquisition Job Offer Process
Talent Acquisition Process - Acquisitions
Talent Acquisition Process - Hiring Manager Tasks
Talent Acquisition Process Framework for Creating REQs
Talent Acquisition Process Framework for REQs
Triad Process
- Candidate Experience Specialist Responsibilities
- Evergreen Requisitions
- GitLab Talent Acquisition Process Framework for Talent Pools
- Internal Hiring Process
- Talent Acquisition Job Offer Process
- Talent Acquisition Process - Acquisitions
- Talent Acquisition Process - Hiring Manager Tasks
- Talent Acquisition Process Framework for Creating REQs
- Talent Acquisition Process Framework for REQs
- Triad Process
- Talent Acquisition Productivity
- IT
End User Services
GitLab IT 101
GitLab Laptop Management
Access Requests (AR)
Access Requests (AR) FAQs
How To Use Gmail Delegate
How To Use Google Calendar Delegate
How To Use Google Drive Sharing
Information Technology (IT) Department
Okta
Okta FAQs
Okta Admin Onboarding
- End User Services
GitLab IT 101
GitLab Laptop Management
Access Requests (AR)
Access Requests (AR) FAQs
How To Use Gmail Delegate
How To Use Google Calendar Delegate
How To Use Google Drive Sharing
- GitLab IT 101
- GitLab Laptop Management
Access Requests (AR)
Access Requests (AR) FAQs
- Access Requests (AR)
Access Requests (AR) FAQs
- Access Requests (AR) FAQs
- How To Use Gmail Delegate
- How To Use Google Calendar Delegate
- How To Use Google Drive Sharing
- Information Technology (IT) Department
- Okta
Okta FAQs
- Okta FAQs
- Okta Admin Onboarding
- IT Enterprise Applications
Business Technology - Tech Stack Details
Documentation
Policies
Business Continuity Plan
Procedures
Enterprise Applications READMEs
Analissa 'Ana' Moreno's README
Arif Willis-Browne's README
Barbara Roncato's README
Bien Balaba's README
Caroline Swanson's README
Chavit Casabar's README
David Kim README
Derek Isla's README
Kavya Nanjappa's README
Louis Dwans README
Marc Di Sabatino's README
Monali Bhide's README
Nico Sandoval's README
Renz Santos's README
Rey Manlangit's README
Sarah Pang's README
Sharath Shanker's README
Xander Liwanag's README
Infrastructure Reference Links
Organizational Structure
Architecture & Integrations
Enterprise Application Guides
Coupa End Users Guide
Coupa End Users Quick Guide
Coupa Prepaid Automation Process
Coupa Supplier Management
Coupa Virtual Card Guide
Finance Guides
Finance System Guides
HelpLab Information Guide
Navan Expense End Users Guide
NS Custom Field guide
Product Catalog Guide
Salesforce Mobile App Users Guide
Zip End Users Guide
Zuora - Enterprise Application Guides
Zuora Collect module
Enterprise Applications - CRM Team
Finance Systems Access Requests
Quote to Cash Documentation
Quote to Cash Entity Relationship Diagrams
Troubleshooting: True Ups, Licenses + EULAs
Enterprise Applications - PMO
Governance and IT Program Management
Enterprise Applications Team G&A (Finance Systems)
IT Compliance
IT Enterprise Applications Services
Rolly
Services
Robotic Process Automation (RPA)
Tech Stack Applications
Tech Stack Guide Reference
Tools
Postman
- Business Technology - Tech Stack Details
- Documentation
Policies
Business Continuity Plan
Procedures
- Policies
Business Continuity Plan
- Business Continuity Plan
- Procedures
- Enterprise Applications READMEs
Analissa 'Ana' Moreno's README
Arif Willis-Browne's README
Barbara Roncato's README
Bien Balaba's README
Caroline Swanson's README
Chavit Casabar's README
David Kim README
Derek Isla's README
Kavya Nanjappa's README
Louis Dwans README
Marc Di Sabatino's README
Monali Bhide's README
Nico Sandoval's README
Renz Santos's README
Rey Manlangit's README
Sarah Pang's README
Sharath Shanker's README
Xander Liwanag's README
- Analissa 'Ana' Moreno's README
- Arif Willis-Browne's README
- Barbara Roncato's README
- Bien Balaba's README
- Caroline Swanson's README
- Chavit Casabar's README
- David Kim README
- Derek Isla's README
- Kavya Nanjappa's README
- Louis Dwans README
- Marc Di Sabatino's README
- Monali Bhide's README
- Nico Sandoval's README
- Renz Santos's README
- Rey Manlangit's README
- Sarah Pang's README
- Sharath Shanker's README
- Xander Liwanag's README
- Infrastructure Reference Links
- Organizational Structure
Architecture & Integrations
Enterprise Application Guides
Coupa End Users Guide
Coupa End Users Quick Guide
Coupa Prepaid Automation Process
Coupa Supplier Management
Coupa Virtual Card Guide
Finance Guides
Finance System Guides
HelpLab Information Guide
Navan Expense End Users Guide
NS Custom Field guide
Product Catalog Guide
Salesforce Mobile App Users Guide
Zip End Users Guide
Zuora - Enterprise Application Guides
Zuora Collect module
Enterprise Applications - CRM Team
Finance Systems Access Requests
Quote to Cash Documentation
Quote to Cash Entity Relationship Diagrams
Troubleshooting: True Ups, Licenses + EULAs
Enterprise Applications - PMO
Governance and IT Program Management
Enterprise Applications Team G&A (Finance Systems)
IT Compliance
IT Enterprise Applications Services
- Architecture & Integrations
- Enterprise Application Guides
Coupa End Users Guide
Coupa End Users Quick Guide
Coupa Prepaid Automation Process
Coupa Supplier Management
Coupa Virtual Card Guide
Finance Guides
Finance System Guides
HelpLab Information Guide
Navan Expense End Users Guide
NS Custom Field guide
Product Catalog Guide
Salesforce Mobile App Users Guide
Zip End Users Guide
Zuora - Enterprise Application Guides
Zuora Collect module
- Coupa End Users Guide
- Coupa End Users Quick Guide
- Coupa Prepaid Automation Process
- Coupa Supplier Management
- Coupa Virtual Card Guide
- Finance Guides
Finance System Guides
- Finance System Guides
- HelpLab Information Guide
- Navan Expense End Users Guide
- NS Custom Field guide
- Product Catalog Guide
- Salesforce Mobile App Users Guide
- Zip End Users Guide
- Zuora - Enterprise Application Guides
- Zuora Collect module
- Enterprise Applications - CRM Team
Finance Systems Access Requests
Quote to Cash Documentation
Quote to Cash Entity Relationship Diagrams
Troubleshooting: True Ups, Licenses + EULAs
- Finance Systems Access Requests
- Quote to Cash Documentation
Quote to Cash Entity Relationship Diagrams
Troubleshooting: True Ups, Licenses + EULAs
- Quote to Cash Entity Relationship Diagrams
- Troubleshooting: True Ups, Licenses + EULAs
- Enterprise Applications - PMO
Governance and IT Program Management
- Governance and IT Program Management
- Enterprise Applications Team G&A (Finance Systems)
- IT Compliance
- IT Enterprise Applications Services
- Rolly
- Services
Robotic Process Automation (RPA)
- Robotic Process Automation (RPA)
- Tech Stack Applications
- Tech Stack Guide Reference
- Tools
Postman
- Postman
- Labor and Employment Notices
Offboarding Documents & Notices
- Offboarding Documents & Notices
- Leadership
1-1
Suggested 1:1 Agenda and Daily Standup Format
Biggest Tailwinds
Book clubs
Building Trust at GitLab
Coaching
Compensation Review Conversations
Crucial Conversations
Effective Delegation
Emotional Intelligence
Clifton Strengths:Unlocking Team Potential at Gitlab
Psychological Safety
Psychological Safety Short Course
GitLab Onsites - Getting your team together in person
High Output Management
Identifying & Addressing Burnout
Making Decisions
Managing Conflict
Leading through Adversity
No Matrix Organization
Skip Level Meetings - Overview
Underperformance
Workforce Planning
- 1-1
Suggested 1:1 Agenda and Daily Standup Format
- Suggested 1:1 Agenda and Daily Standup Format
- Biggest Tailwinds
- Book clubs
- Building Trust at GitLab
- Coaching
- Compensation Review Conversations
- Crucial Conversations
- Effective Delegation
- Emotional Intelligence
Clifton Strengths:Unlocking Team Potential at Gitlab
Psychological Safety
Psychological Safety Short Course
- Clifton Strengths:Unlocking Team Potential at Gitlab
- Psychological Safety
- Psychological Safety Short Course
- GitLab Onsites - Getting your team together in person
- High Output Management
- Identifying & Addressing Burnout
- Making Decisions
- Managing Conflict
Leading through Adversity
- Leading through Adversity
- No Matrix Organization
- Skip Level Meetings - Overview
- Underperformance
- Workforce Planning
- Legal & Corporate Affairs ("LACA")
Agile Planning Terms
Agile Planning Terms V1
AI Functionality Terms
AI Functionality Terms V1
AI Functionality Terms V2
AI Functionality Terms V3
Anti-Corruption Policy
Anti-Fraud Policy
Anti-Retaliation Policy
Code of Business Conduct & Ethics
Commercial Legal
Content Removal Guidelines
Contract Management and Storage
Corporate & Compliance Legal
Corporate Communications Policy
DORA (Digital Operational Resilience Act) Mapping
EU Illegal Content Report Form
External Materials Compliance Checklist
Fulfillment Reseller Flow-Through Terms
GitLab Acceptable Use Policy
GitLab API Terms of Use
GitLab Data Processing Addendum and Standard Contractual Clauses
GitLab for Education Program Agreement
GitLab for Open Source Program Agreement
GitLab Inc. Philanthropy Policy
GitLab Legal Team READMEs
Emily Plotkin's README
Joel Fluss' README
Miguel Silva's README
Rashmi Chachra's README
Stacy's readme
GitLab Modern Slavery Act Transparency Statement
GitLab Privacy
Customer Product Usage Information
Data Protection Impact Assessment (DPIA)
Employee Privacy Policy
FAQ - Customer Product Usage Events
Guidelines for Law Enforcement Requests
Personal Data Requests
GitLab Professional Services Terms
GitLab Related Party Transactions Policy
GitLab SAFE Framework
GitLab Subscription Agreement
GitLab Testing Agreement
GitLab Testing Agreement v1
GitLab Testing Agreement v2
GitLab Testing Agreement V3
GitLab Testing Agreement v4
GitLab's Ethics and Compliance Program
GitLab AI Ethics Principles for Product Development
Learning Content Accessibility Guidelines
Guidelines for Use of Third-party IP in External Materials
Guidelines on public discussion of competitor product features
Legacy Terms and Agreements
GitLab Professional Services Agreement V2
GitLab Professional Services Agreement V3
GitLab Subscription Agreement V5
Legacy v1: GitLab Open Source Program Agreement
Legacy v1: GitLab Professional Services Agreement
LEGACY: GitLab Subscription Agreement
LEGACY: GitLab Subscription Agreement V3
LEGACY: GitLab Subscription Agreement V4
LEGACY: Privacy Statement
Legal, Employment at GitLab: A Strategic Partnership
Marketing Guide: Collaborating with GitLab Legal
Materials Legal Review Process
Non-Disclosure Agreement Process
Partner Code of Ethics
Patents
Policies
GitLab Website Terms of Use
Policies related to Gifts and Contributions
Use of Third-party Trademarks in GitLab
Process for UX Research Prize Draws
Procurement Guide: Collaborating with GitLab Legal
Product and Intellectual Property
Publicity Waiver and Release Guidelines and Process
Record Retention Policy
Reseller Agreement
Risk Management and Dispute Resolution
Sales Guide | Collaborating with GitLab Legal
Stategy & Legal Operations
NAVEX Compliance Courses
Sustainability
Earth Month
GitLab Fiscal Year 2023 (FY23) ESG Report
Sustainability Training
Team Member Sustainability Guide
Technology Partner Agreement
Trade Compliance
Trademarks at GitLab
UX Research Team Promotional Rules
Vendor Data Processing Addendum
Whistleblowing at GitLab
- Agile Planning Terms
- Agile Planning Terms V1
- AI Functionality Terms
- AI Functionality Terms V1
- AI Functionality Terms V2
- AI Functionality Terms V3
- Anti-Corruption Policy
- Anti-Fraud Policy
- Anti-Retaliation Policy
- Code of Business Conduct & Ethics
- Commercial Legal
- Content Removal Guidelines
- Contract Management and Storage
- Corporate & Compliance Legal
- Corporate Communications Policy
- DORA (Digital Operational Resilience Act) Mapping
- EU Illegal Content Report Form
- External Materials Compliance Checklist
- Fulfillment Reseller Flow-Through Terms
- GitLab Acceptable Use Policy
- GitLab API Terms of Use
- GitLab Data Processing Addendum and Standard Contractual Clauses
- GitLab for Education Program Agreement
- GitLab for Open Source Program Agreement
- GitLab Inc. Philanthropy Policy
- GitLab Legal Team READMEs
Emily Plotkin's README
Joel Fluss' README
Miguel Silva's README
Rashmi Chachra's README
Stacy's readme
- Emily Plotkin's README
- Joel Fluss' README
- Miguel Silva's README
- Rashmi Chachra's README
- Stacy's readme
- GitLab Modern Slavery Act Transparency Statement
- GitLab Privacy
Customer Product Usage Information
Data Protection Impact Assessment (DPIA)
Employee Privacy Policy
FAQ - Customer Product Usage Events
Guidelines for Law Enforcement Requests
Personal Data Requests
- Customer Product Usage Information
- Data Protection Impact Assessment (DPIA)
- Employee Privacy Policy
- FAQ - Customer Product Usage Events
- Guidelines for Law Enforcement Requests
- Personal Data Requests
- GitLab Professional Services Terms
- GitLab Related Party Transactions Policy
- GitLab SAFE Framework
- GitLab Subscription Agreement
- GitLab Testing Agreement
- GitLab Testing Agreement v1
- GitLab Testing Agreement v2
- GitLab Testing Agreement V3
- GitLab Testing Agreement v4
- GitLab's Ethics and Compliance Program
GitLab AI Ethics Principles for Product Development
Learning Content Accessibility Guidelines
- GitLab AI Ethics Principles for Product Development
- Learning Content Accessibility Guidelines
- Guidelines for Use of Third-party IP in External Materials
- Guidelines on public discussion of competitor product features
- Legacy Terms and Agreements
GitLab Professional Services Agreement V2
GitLab Professional Services Agreement V3
GitLab Subscription Agreement V5
Legacy v1: GitLab Open Source Program Agreement
Legacy v1: GitLab Professional Services Agreement
LEGACY: GitLab Subscription Agreement
LEGACY: GitLab Subscription Agreement V3
LEGACY: GitLab Subscription Agreement V4
LEGACY: Privacy Statement
- GitLab Professional Services Agreement V2
- GitLab Professional Services Agreement V3
- GitLab Subscription Agreement V5
- Legacy v1: GitLab Open Source Program Agreement
- Legacy v1: GitLab Professional Services Agreement
- LEGACY: GitLab Subscription Agreement
- LEGACY: GitLab Subscription Agreement V3
- LEGACY: GitLab Subscription Agreement V4
- LEGACY: Privacy Statement
- Legal, Employment at GitLab: A Strategic Partnership
- Marketing Guide: Collaborating with GitLab Legal
- Materials Legal Review Process
- Non-Disclosure Agreement Process
- Partner Code of Ethics
- Patents
- Policies
GitLab Website Terms of Use
Policies related to Gifts and Contributions
Use of Third-party Trademarks in GitLab
- GitLab Website Terms of Use
- Policies related to Gifts and Contributions
- Use of Third-party Trademarks in GitLab
- Process for UX Research Prize Draws
- Procurement Guide: Collaborating with GitLab Legal
- Product and Intellectual Property
- Publicity Waiver and Release Guidelines and Process
- Record Retention Policy
- Reseller Agreement
- Risk Management and Dispute Resolution
- Sales Guide | Collaborating with GitLab Legal
- Stategy & Legal Operations
NAVEX Compliance Courses
- NAVEX Compliance Courses
- Sustainability
Earth Month
GitLab Fiscal Year 2023 (FY23) ESG Report
Sustainability Training
Team Member Sustainability Guide
- Earth Month
- GitLab Fiscal Year 2023 (FY23) ESG Report
- Sustainability Training
- Team Member Sustainability Guide
- Technology Partner Agreement
- Trade Compliance
- Trademarks at GitLab
- UX Research Team Promotional Rules
- Vendor Data Processing Addendum
- Whistleblowing at GitLab
- Marketing
Account Based Marketing
Blog Handbook
Blog dashboard
Git Guide for Blog Contributors
GitLab Release Posts
Manual Release Post Kickoff
Release Post Scheduling
Brand and Product Marketing
Brand
Brand Activation Handbook
Trademark Guidelines
GitLab swag program
The GitLab Brand Strategy team
The GitLab Content Style Guide
The naming process at GitLab
Brand Creative Handbook
Brand Video
Virtual Recording Equipment Guide
GitLab Content Strategy & Ops
Blog style guide
Content Marketing
Product and Solution Marketing
2019 DevOps Dozen
2019 DevOps Dozen - Best DevOps Solution Provider Executive: Sid Sijbrandij
2019 DevOps Dozen - Best DevOps Solution Provider: GitLab
Analyst Relations
Analyst Resources for SDR and Sales Enablement Topics
Forrester Total Economic Impact‚Ñ¢ (TEI) Study Commissioned By GitLab, June 2020
Industry Analyst Briefings at GitLab
Industry Analyst Relations Inquiry
Competitive Intelligence
Application Security Market Analysis
CI/CD Tools Primer
Customer Advocacy at GitLab
DEPRECATED-Demos
CI/CD Deep Dive Demo
Click Through Demos
Conference Booth Setup
Integration Demos
Plan to Monitor (p2m) Demo
Running Click-throughs off-line
Scaled Agile Framework and GitLab
Set up GitLab CE or EE on Azure Container Service
Set up GitLab CE or EE on Google Kubernetes Engine
Simulation demos
DevOps tools
Enablement
Cloud Native Ecosystem Sales Enablement
GitLab CI/CD for GitHub FAQ
GitLab Secure and Govern Integrations - WhiteSource
GitLab.com Subscriptions
Enterprise IT Roles
Getting Started with Agile/DevOps Metrics
GitLab tiers
GitLab tiers for sales assessment
Hidden IT Groups
Build
Deliver Secure Applications
Improve Cycle Time
Modernize applications
Organize
Protect IT Group
Run
Test
Market Insights
Market Segmentation
Market Strategy and Insights
Peer Reviews
Persona snippets
Buyer Personas
Alex Persona snippets
Casey Persona snippets
Dakota Persona snippets
Erin Persona snippets
Kennedy Persona snippets
User Personas
Cameron Persona snippets
Delaney Persona snippets
Devon Persona snippets
Parker Persona snippets
Rachel Persona snippets
Sacha Persona snippets
Sidney Persona snippets
pmm inventory
PMM Metrics
Product and Solution Marketing Asset Inventory
Product and Solution Marketing Metrics
Product and Solution Marketing On-Boarding and Other How-to's
101 - Creating Kubernetes cluster
101 - No Tissues with Issues
103 - Maintaining common slides across decks
104 - Epic Templates - Repeatable sets of issues
105 - Issue Automation - Keeping your issues squeaky clean
Keeping Yourself Informed
Product and Solution Marketing Group Conversations How-to
Product and Solution Marketing Project Management Overview
Product Marketing Messaging
Product Marketing Professional Development
Product Marketing Team
Product Marketing Onboarding
Product Release Updates
Public Sector Go To Market
QBR Support
Reseller Marketing Kit
Roles Personas
Buyer Personas
Day in the Life for the Security Operations Engineer persona
Solutions Go-to-market
Auxiliary Solution Resource: Agile
Agile Message House Template
Usecase: Template - Keywords
Auxiliary Solution Resource: Continuous Delivery
Continuous Delivery Message House
Auxiliary Solution Resource: GitOps
GitOps Message House Template
Usecase: Template - Keywords
DevOps Solution Resource: Continuous Integration
CI Message House
Runner Message House
DevOps Solution Resource: DevOps Platform
DevOps Platform Message House
DevOps Solution Resource: DevSecOps
DevSecOps Message House
DevOps Solution Resource: Software Compliance
DevSecOps Solution Resource: Automated Software Delivery
Proposed Use Case - Incident Management
Proposed Usecase: Data Science
Data Science Usecase: Keywords
Data Science Usecase: Message House
Technical Marketing BOM Elements
Use case: GitLab + Google Cloud
Usecase: Artifact Management
Usecase: Template
Message House Template
Usecase: Template - Keywords
Wedge conversation: Source Code Management
Version Control & Collaboration Message House
Travel Priorities
Chief Marketing Officer
CI/CD GTM Sales Plays
Sales Play: Upsell Premium to Ultimate
Upsell Premium to Ultimate message house
Upsell Premium to Ultimate sales play planner
CMO Shadow Program
Core DevOps Solutions
Corporate Communications Handbook
Corporate Communications Resources and Trainings
GitLab Incident Communications Plan
GitLab Speakers Resources
Demand Generation
Demand Generation Campaigns Team
Content in Campaigns
Direct Mail
Landing Page Creation
Developer Relations
Community Learning Pathway: Course Resources
Community Programs
Community Programs Workflows
GitLab for Education Program Workflows
GitLab for Open Source Program Workflows
GitLab for Startups Program Workflows
Education Program
Pricing and Packaging - GitLab for Campuses
Open Source Program
Startups Program
Contributor Success Team
Code Contributor Program Email templates
Community pairing sessions
Contributor Success Team - Code Contributor User Journey
GitLab Community Hackathons
GitLab Nominations for Community Swag
GitLab Notable Contributor Selection Process
How to recognize organizations within the contributor ecosystem for GitLab
Innovation Pitch Competion
Merge Request Coach Lifecycle
Metrics & Tableau Dashboards
Workflows for working with community contributions
Core Team
Developer Advocacy
Community Newsletter
Consultancy workflows for Developer Advocates
Content library and workflows for Developer Advocates
Developer Advocacy CFPs
Developer Advocacy Community Response Process
Developer Advocacy on Social Media
Developer Advocacy Team Calendar
Developer Advocacy: Mentoring and Coaching
Developer Advocate Team Workflow
Hacker News
Learn Developer Advocacy
OSS Contributions
Projects
Developer Relations - Content Effectiveness
Developer Relations Content Requests
Developer Relations Department Performance Indicators
Developer Relations Events
Developer Relations Program Management
Developer Relations workflow: UTM Tracking Strategy
Developer Relations Workflows and Tools
Cloud Resources for Developer Relations
Code of Conduct Enforcement
Common Room workflows
Community Discord workflow
Developer Relations tools: Zapier
Developer Relations workflow: Team Budgets
Developer Relations Workflows: Content Review
E-mail response workflow
Forum workflow
Reddit response workflow
Stack Overflow: Tagged Questions and GitLab Collective Overview
Swag: Process & FAQ
Twitter response workflow
Zendesk for GitLab Developer Relations
Developer Relations: Program Resources
GitLab Co-Create Initiative
A Compatibility Guide for Corporate Contributors: Navigating Project License Requirements:
Co-Create Action Plan - FY26Q1
GitLab Community Apps
Campaign Manager
GitLab Contributors Program
GitLab Meetup Checklist
Leading Organizations
Strategic Plans
Contributor Program Unification & Growth Plan
Technical Marketing
GitLab.com logins for demos
Guide to Working the Booth at Events
How Tos
Adding CTAs to Learn@GitLab YouTube Videos
Autogenerating comparison infographics using Figma
Creating an AWS EKS cluster for a GitLab demo
Creating and Publishing Technical Marketing Demo Videos
Publish a video on YouTube
Making Better Videos
Technical Marketing Asset to Stakeholder Matrix
Technical Marketing Content Library
Digital Experience Handbook
Accessibility
Analytics
Google Lighthouse
Tracking Web Events with Google Tag Manager
Buyer Experience Repository
Coding Standards for Digital Experience
Contentful CMS
Contentful CMS 'The Source' Pages
Contentful CMS Custom Pages
Contentful CMS Solutions Pages
Editing content in Contentful
Known knowns & feature wishlist
Partner Microsites
Core Marketing Site Architecture Plan
Data Dictionary
Decap CMS
Dex Bot
DEX Code Review Guidelines
DEX Core Web Vitals
Digital definitions
Digital Experience: Foundations Agenda
Engineering A/B tests
Engineering GitLab Product
Engineering Marketo
Figma Process
Image Guidelines
Incident Response Matrix
Localization best practices
Major League Hacking Fellows
Marketing Cookies
Marketing Site Approval Process
Marketo page template
Navigation Repository
OneTrust
OneTrust Cookie Consent Implementation
Field Marketing
Field Marketing Epics
Field Marketing Owned Virtual Events
FY22 Marketing Plan
FY23 Marketing Plan
GitLab Event Information
Event Requirements
GitLab Marketing Team READMEs
Ashley Kramer's README
Brian Tabbert README (Director, Sales Development (AMER))
Christine Lee README (VP, Marketing Ops & Analytics)
Dave Steer README (VP Product Marketing)
Jean-Baptiste Larramendy README (AVP, Sales Dev)
Laura Duggan's README
Lauren Barker's README
Michael 'dnsmichi' Friedrich README (Staff Developer Advocate)
Nathan Dubord's README
Nikki Roth Silverberg README (Staff Marketing Operations Manager)
Salina Tran | Senior Marketing Operations Manager
GitLab Positioning FAQs
Global Channel Marketing
Channel  Marketing Epics
Channel Marketing Menu of Services
Global Channel Marketing - MDF Operations Process
Hyperscaler Campaign
Growth Direction
Inbound Marketing Handbook
Search Marketing
GitLab SEO strategy
Marketing web analytics
SEO Content Manual
Sitebulb
Testing for conversion at GitLab
Website Health Resolution
Integrated Campaigns
[NAME] Campaign
CI/CD Campaign
DevSecOps 2.0 Campaign
Integrated Marketing
Corporate Event Marketing at GitLab
Digital Strategy
Digital Strategy Management
Digital Marketing changes of note
GitLab PMG Team
Social Marketing Handbook
Open Social Media Strategies from GitLab
Social Advocacy Curator Program
Social Media Community Management
Social Media Project Management and Admin
Social Media Reporting
Team Member Social Media Advocacy
Intra-Department Learning: Marketing Functional Conversations
Journeys
Lifecycle Marketing
Email Best Practices
Emails & Nurture Programs
Emails Processes
Localization
Localization Engineering
Smartling (retired)
Marketing - Emergency Response
Marketing Analytics
Allocadia
Google Analytics 4
Marketing Analytics - Analytics Engineering
Marketing Analytics Data Overview and General Information
Marketing Analytics Data - L2R Models
Marketing Analytics Data - SFDC Models
Marketing Dashboards
TD: Campaign Performance
Marketing Metrics
Marketing Third-Party Scripts
Marketing Career Development - Overview
Contributor Success Career Framework
Contributor Success Career Framework: Intermediate Fullstack Engineer
Contributor Success Career Framework: Senior Fullstack Engineer
Contributor Success Career Framework: Staff Fullstack Engineer
Marketing Career Development - Career Paths
Marketing Department Efficiency Working Group - FY24
Marketing Operations
6sense
Adobe Marketo Measure (formerly known as Bizible)
AI in Marketing
Asana
Backblaze
Brilliant
Campaigns and Programs
Cognism
Email Management
Operational Email Sends
Goldcast
Groove.co
Hightouch
iconik
Impartner
Iterable
JiffleNow
Lead Lifecycle Management
Learning Marketing Operations
List Imports
Litmus
Marketing Owned System Provisioning Instructions
Marketing Technology Tiering System
Marketo
Marketo Interesting Moments
Marketo Tech Stack Guide
Marketo program/campaign support
MQL SLAs
Mutiny
ON24
PathFactory
Content Library
PathFactory Analytics
PathFactory for Sales
Qualified
Rev
Ringlead
Self-Service List Imports
Terminus Email Experiences
Traction Lead Complete
Typeform
UserGems
Vartopia
Vimeo
Workato
YouTube uses and access
zapier
Zoominfo
Marketing Performance Indicators
Marketing Project Management Guidelines
Epics project management guidelines
Issue and Kanban boards project management guidelines
Issues project management guidelines
Labels project management guidelines
Managing Commitment
Marketing Groups and Projects guidelines
Milestones project management guidelines
Marketing Strategy & Platforms
Marketing Team Processes - How We Work
Prescriptive Buyer Journeys
Sales Development
Tanuki Tech
Sales Plays
Sales Play: Expand with Package
Sales Play: Infrastructure Automation with GitOps
Sales Play: GitOps for First Order
SMB Marketing
Team Member Social Media Policy
The Source Handbook
User Engagement
UTM Strategy
Virtual Events
External Virtual Events
Self-Service Virtual Events
Webcasts
Webex Webcasts
- Account Based Marketing
- Blog Handbook
Blog dashboard
Git Guide for Blog Contributors
GitLab Release Posts
Manual Release Post Kickoff
Release Post Scheduling
- Blog dashboard
- Git Guide for Blog Contributors
- GitLab Release Posts
Manual Release Post Kickoff
Release Post Scheduling
- Manual Release Post Kickoff
- Release Post Scheduling
- Brand and Product Marketing
Brand
Brand Activation Handbook
Trademark Guidelines
GitLab swag program
The GitLab Brand Strategy team
The GitLab Content Style Guide
The naming process at GitLab
Brand Creative Handbook
Brand Video
Virtual Recording Equipment Guide
GitLab Content Strategy & Ops
Blog style guide
Content Marketing
Product and Solution Marketing
2019 DevOps Dozen
2019 DevOps Dozen - Best DevOps Solution Provider Executive: Sid Sijbrandij
2019 DevOps Dozen - Best DevOps Solution Provider: GitLab
Analyst Relations
Analyst Resources for SDR and Sales Enablement Topics
Forrester Total Economic Impact‚Ñ¢ (TEI) Study Commissioned By GitLab, June 2020
Industry Analyst Briefings at GitLab
Industry Analyst Relations Inquiry
Competitive Intelligence
Application Security Market Analysis
CI/CD Tools Primer
Customer Advocacy at GitLab
DEPRECATED-Demos
CI/CD Deep Dive Demo
Click Through Demos
Conference Booth Setup
Integration Demos
Plan to Monitor (p2m) Demo
Running Click-throughs off-line
Scaled Agile Framework and GitLab
Set up GitLab CE or EE on Azure Container Service
Set up GitLab CE or EE on Google Kubernetes Engine
Simulation demos
DevOps tools
Enablement
Cloud Native Ecosystem Sales Enablement
GitLab CI/CD for GitHub FAQ
GitLab Secure and Govern Integrations - WhiteSource
GitLab.com Subscriptions
Enterprise IT Roles
Getting Started with Agile/DevOps Metrics
GitLab tiers
GitLab tiers for sales assessment
Hidden IT Groups
Build
Deliver Secure Applications
Improve Cycle Time
Modernize applications
Organize
Protect IT Group
Run
Test
Market Insights
Market Segmentation
Market Strategy and Insights
Peer Reviews
Persona snippets
Buyer Personas
Alex Persona snippets
Casey Persona snippets
Dakota Persona snippets
Erin Persona snippets
Kennedy Persona snippets
User Personas
Cameron Persona snippets
Delaney Persona snippets
Devon Persona snippets
Parker Persona snippets
Rachel Persona snippets
Sacha Persona snippets
Sidney Persona snippets
pmm inventory
PMM Metrics
Product and Solution Marketing Asset Inventory
Product and Solution Marketing Metrics
Product and Solution Marketing On-Boarding and Other How-to's
101 - Creating Kubernetes cluster
101 - No Tissues with Issues
103 - Maintaining common slides across decks
104 - Epic Templates - Repeatable sets of issues
105 - Issue Automation - Keeping your issues squeaky clean
Keeping Yourself Informed
Product and Solution Marketing Group Conversations How-to
Product and Solution Marketing Project Management Overview
Product Marketing Messaging
Product Marketing Professional Development
Product Marketing Team
Product Marketing Onboarding
Product Release Updates
Public Sector Go To Market
QBR Support
Reseller Marketing Kit
Roles Personas
Buyer Personas
Day in the Life for the Security Operations Engineer persona
Solutions Go-to-market
Auxiliary Solution Resource: Agile
Agile Message House Template
Usecase: Template - Keywords
Auxiliary Solution Resource: Continuous Delivery
Continuous Delivery Message House
Auxiliary Solution Resource: GitOps
GitOps Message House Template
Usecase: Template - Keywords
DevOps Solution Resource: Continuous Integration
CI Message House
Runner Message House
DevOps Solution Resource: DevOps Platform
DevOps Platform Message House
DevOps Solution Resource: DevSecOps
DevSecOps Message House
DevOps Solution Resource: Software Compliance
DevSecOps Solution Resource: Automated Software Delivery
Proposed Use Case - Incident Management
Proposed Usecase: Data Science
Data Science Usecase: Keywords
Data Science Usecase: Message House
Technical Marketing BOM Elements
Use case: GitLab + Google Cloud
Usecase: Artifact Management
Usecase: Template
Message House Template
Usecase: Template - Keywords
Wedge conversation: Source Code Management
Version Control & Collaboration Message House
Travel Priorities
- Brand
Brand Activation Handbook
Trademark Guidelines
GitLab swag program
The GitLab Brand Strategy team
The GitLab Content Style Guide
The naming process at GitLab
- Brand Activation Handbook
Trademark Guidelines
- Trademark Guidelines
- GitLab swag program
- The GitLab Brand Strategy team
- The GitLab Content Style Guide
- The naming process at GitLab
- Brand Creative Handbook
- Brand Video
Virtual Recording Equipment Guide
- Virtual Recording Equipment Guide
- GitLab Content Strategy & Ops
Blog style guide
Content Marketing
- Blog style guide
- Content Marketing
- Product and Solution Marketing
2019 DevOps Dozen
2019 DevOps Dozen - Best DevOps Solution Provider Executive: Sid Sijbrandij
2019 DevOps Dozen - Best DevOps Solution Provider: GitLab
Analyst Relations
Analyst Resources for SDR and Sales Enablement Topics
Forrester Total Economic Impact‚Ñ¢ (TEI) Study Commissioned By GitLab, June 2020
Industry Analyst Briefings at GitLab
Industry Analyst Relations Inquiry
Competitive Intelligence
Application Security Market Analysis
CI/CD Tools Primer
Customer Advocacy at GitLab
DEPRECATED-Demos
CI/CD Deep Dive Demo
Click Through Demos
Conference Booth Setup
Integration Demos
Plan to Monitor (p2m) Demo
Running Click-throughs off-line
Scaled Agile Framework and GitLab
Set up GitLab CE or EE on Azure Container Service
Set up GitLab CE or EE on Google Kubernetes Engine
Simulation demos
DevOps tools
Enablement
Cloud Native Ecosystem Sales Enablement
GitLab CI/CD for GitHub FAQ
GitLab Secure and Govern Integrations - WhiteSource
GitLab.com Subscriptions
Enterprise IT Roles
Getting Started with Agile/DevOps Metrics
GitLab tiers
GitLab tiers for sales assessment
Hidden IT Groups
Build
Deliver Secure Applications
Improve Cycle Time
Modernize applications
Organize
Protect IT Group
Run
Test
Market Insights
Market Segmentation
Market Strategy and Insights
Peer Reviews
Persona snippets
Buyer Personas
Alex Persona snippets
Casey Persona snippets
Dakota Persona snippets
Erin Persona snippets
Kennedy Persona snippets
User Personas
Cameron Persona snippets
Delaney Persona snippets
Devon Persona snippets
Parker Persona snippets
Rachel Persona snippets
Sacha Persona snippets
Sidney Persona snippets
pmm inventory
PMM Metrics
Product and Solution Marketing Asset Inventory
Product and Solution Marketing Metrics
Product and Solution Marketing On-Boarding and Other How-to's
101 - Creating Kubernetes cluster
101 - No Tissues with Issues
103 - Maintaining common slides across decks
104 - Epic Templates - Repeatable sets of issues
105 - Issue Automation - Keeping your issues squeaky clean
Keeping Yourself Informed
Product and Solution Marketing Group Conversations How-to
Product and Solution Marketing Project Management Overview
Product Marketing Messaging
Product Marketing Professional Development
Product Marketing Team
Product Marketing Onboarding
Product Release Updates
Public Sector Go To Market
QBR Support
Reseller Marketing Kit
Roles Personas
Buyer Personas
Day in the Life for the Security Operations Engineer persona
Solutions Go-to-market
Auxiliary Solution Resource: Agile
Agile Message House Template
Usecase: Template - Keywords
Auxiliary Solution Resource: Continuous Delivery
Continuous Delivery Message House
Auxiliary Solution Resource: GitOps
GitOps Message House Template
Usecase: Template - Keywords
DevOps Solution Resource: Continuous Integration
CI Message House
Runner Message House
DevOps Solution Resource: DevOps Platform
DevOps Platform Message House
DevOps Solution Resource: DevSecOps
DevSecOps Message House
DevOps Solution Resource: Software Compliance
DevSecOps Solution Resource: Automated Software Delivery
Proposed Use Case - Incident Management
Proposed Usecase: Data Science
Data Science Usecase: Keywords
Data Science Usecase: Message House
Technical Marketing BOM Elements
Use case: GitLab + Google Cloud
Usecase: Artifact Management
Usecase: Template
Message House Template
Usecase: Template - Keywords
Wedge conversation: Source Code Management
Version Control & Collaboration Message House
Travel Priorities
- 2019 DevOps Dozen
2019 DevOps Dozen - Best DevOps Solution Provider Executive: Sid Sijbrandij
2019 DevOps Dozen - Best DevOps Solution Provider: GitLab
- 2019 DevOps Dozen - Best DevOps Solution Provider Executive: Sid Sijbrandij
- 2019 DevOps Dozen - Best DevOps Solution Provider: GitLab
- Analyst Relations
Analyst Resources for SDR and Sales Enablement Topics
Forrester Total Economic Impact‚Ñ¢ (TEI) Study Commissioned By GitLab, June 2020
Industry Analyst Briefings at GitLab
Industry Analyst Relations Inquiry
- Analyst Resources for SDR and Sales Enablement Topics
- Forrester Total Economic Impact‚Ñ¢ (TEI) Study Commissioned By GitLab, June 2020
- Industry Analyst Briefings at GitLab
- Industry Analyst Relations Inquiry
- Competitive Intelligence
Application Security Market Analysis
CI/CD Tools Primer
- Application Security Market Analysis
- CI/CD Tools Primer
- Customer Advocacy at GitLab
- DEPRECATED-Demos
CI/CD Deep Dive Demo
Click Through Demos
Conference Booth Setup
Integration Demos
Plan to Monitor (p2m) Demo
Running Click-throughs off-line
Scaled Agile Framework and GitLab
Set up GitLab CE or EE on Azure Container Service
Set up GitLab CE or EE on Google Kubernetes Engine
Simulation demos
- CI/CD Deep Dive Demo
- Click Through Demos
- Conference Booth Setup
- Integration Demos
- Plan to Monitor (p2m) Demo
- Running Click-throughs off-line
- Scaled Agile Framework and GitLab
- Set up GitLab CE or EE on Azure Container Service
- Set up GitLab CE or EE on Google Kubernetes Engine
- Simulation demos
- DevOps tools
- Enablement
Cloud Native Ecosystem Sales Enablement
GitLab CI/CD for GitHub FAQ
GitLab Secure and Govern Integrations - WhiteSource
GitLab.com Subscriptions
- Cloud Native Ecosystem Sales Enablement
- GitLab CI/CD for GitHub FAQ
- GitLab Secure and Govern Integrations - WhiteSource
- GitLab.com Subscriptions
- Enterprise IT Roles
- Getting Started with Agile/DevOps Metrics
- GitLab tiers
- GitLab tiers for sales assessment
- Hidden IT Groups
Build
Deliver Secure Applications
Improve Cycle Time
Modernize applications
Organize
Protect IT Group
Run
Test
- Build
Deliver Secure Applications
Improve Cycle Time
Modernize applications
- Deliver Secure Applications
- Improve Cycle Time
- Modernize applications
- Organize
- Protect IT Group
- Run
- Test
- Market Insights
- Market Segmentation
- Market Strategy and Insights
- Peer Reviews
- Persona snippets
Buyer Personas
Alex Persona snippets
Casey Persona snippets
Dakota Persona snippets
Erin Persona snippets
Kennedy Persona snippets
User Personas
Cameron Persona snippets
Delaney Persona snippets
Devon Persona snippets
Parker Persona snippets
Rachel Persona snippets
Sacha Persona snippets
Sidney Persona snippets
- Buyer Personas
Alex Persona snippets
Casey Persona snippets
Dakota Persona snippets
Erin Persona snippets
Kennedy Persona snippets
- Alex Persona snippets
- Casey Persona snippets
- Dakota Persona snippets
- Erin Persona snippets
- Kennedy Persona snippets
- User Personas
Cameron Persona snippets
Delaney Persona snippets
Devon Persona snippets
Parker Persona snippets
Rachel Persona snippets
Sacha Persona snippets
Sidney Persona snippets
- Cameron Persona snippets
- Delaney Persona snippets
- Devon Persona snippets
- Parker Persona snippets
- Rachel Persona snippets
- Sacha Persona snippets
- Sidney Persona snippets
- pmm inventory
- PMM Metrics
- Product and Solution Marketing Asset Inventory
- Product and Solution Marketing Metrics
- Product and Solution Marketing On-Boarding and Other How-to's
101 - Creating Kubernetes cluster
101 - No Tissues with Issues
103 - Maintaining common slides across decks
104 - Epic Templates - Repeatable sets of issues
105 - Issue Automation - Keeping your issues squeaky clean
Keeping Yourself Informed
Product and Solution Marketing Group Conversations How-to
Product and Solution Marketing Project Management Overview
- 101 - Creating Kubernetes cluster
- 101 - No Tissues with Issues
- 103 - Maintaining common slides across decks
- 104 - Epic Templates - Repeatable sets of issues
- 105 - Issue Automation - Keeping your issues squeaky clean
- Keeping Yourself Informed
- Product and Solution Marketing Group Conversations How-to
- Product and Solution Marketing Project Management Overview
- Product Marketing Messaging
- Product Marketing Professional Development
- Product Marketing Team
Product Marketing Onboarding
- Product Marketing Onboarding
- Product Release Updates
- Public Sector Go To Market
- QBR Support
- Reseller Marketing Kit
- Roles Personas
Buyer Personas
Day in the Life for the Security Operations Engineer persona
- Buyer Personas
- Day in the Life for the Security Operations Engineer persona
- Solutions Go-to-market
Auxiliary Solution Resource: Agile
Agile Message House Template
Usecase: Template - Keywords
Auxiliary Solution Resource: Continuous Delivery
Continuous Delivery Message House
Auxiliary Solution Resource: GitOps
GitOps Message House Template
Usecase: Template - Keywords
DevOps Solution Resource: Continuous Integration
CI Message House
Runner Message House
DevOps Solution Resource: DevOps Platform
DevOps Platform Message House
DevOps Solution Resource: DevSecOps
DevSecOps Message House
DevOps Solution Resource: Software Compliance
DevSecOps Solution Resource: Automated Software Delivery
Proposed Use Case - Incident Management
Proposed Usecase: Data Science
Data Science Usecase: Keywords
Data Science Usecase: Message House
Technical Marketing BOM Elements
Use case: GitLab + Google Cloud
Usecase: Artifact Management
Usecase: Template
Message House Template
Usecase: Template - Keywords
Wedge conversation: Source Code Management
Version Control & Collaboration Message House
- Auxiliary Solution Resource: Agile
Agile Message House Template
Usecase: Template - Keywords
- Agile Message House Template
- Usecase: Template - Keywords
- Auxiliary Solution Resource: Continuous Delivery
Continuous Delivery Message House
- Continuous Delivery Message House
- Auxiliary Solution Resource: GitOps
GitOps Message House Template
Usecase: Template - Keywords
- GitOps Message House Template
- Usecase: Template - Keywords
- DevOps Solution Resource: Continuous Integration
CI Message House
Runner Message House
- CI Message House
- Runner Message House
- DevOps Solution Resource: DevOps Platform
DevOps Platform Message House
- DevOps Platform Message House
- DevOps Solution Resource: DevSecOps
DevSecOps Message House
- DevSecOps Message House
- DevOps Solution Resource: Software Compliance
- DevSecOps Solution Resource: Automated Software Delivery
- Proposed Use Case - Incident Management
- Proposed Usecase: Data Science
Data Science Usecase: Keywords
Data Science Usecase: Message House
- Data Science Usecase: Keywords
- Data Science Usecase: Message House
- Technical Marketing BOM Elements
- Use case: GitLab + Google Cloud
- Usecase: Artifact Management
- Usecase: Template
Message House Template
Usecase: Template - Keywords
- Message House Template
- Usecase: Template - Keywords
- Wedge conversation: Source Code Management
Version Control & Collaboration Message House
- Version Control & Collaboration Message House
- Travel Priorities
- Chief Marketing Officer
- CI/CD GTM Sales Plays
Sales Play: Upsell Premium to Ultimate
Upsell Premium to Ultimate message house
Upsell Premium to Ultimate sales play planner
- Sales Play: Upsell Premium to Ultimate
- Upsell Premium to Ultimate message house
- Upsell Premium to Ultimate sales play planner
- CMO Shadow Program
- Core DevOps Solutions
- Corporate Communications Handbook
Corporate Communications Resources and Trainings
GitLab Incident Communications Plan
GitLab Speakers Resources
- Corporate Communications Resources and Trainings
- GitLab Incident Communications Plan
- GitLab Speakers Resources
- Demand Generation
Demand Generation Campaigns Team
Content in Campaigns
Direct Mail
Landing Page Creation
- Demand Generation Campaigns Team
Content in Campaigns
Direct Mail
Landing Page Creation
- Content in Campaigns
- Direct Mail
- Landing Page Creation
- Developer Relations
Community Learning Pathway: Course Resources
Community Programs
Community Programs Workflows
GitLab for Education Program Workflows
GitLab for Open Source Program Workflows
GitLab for Startups Program Workflows
Education Program
Pricing and Packaging - GitLab for Campuses
Open Source Program
Startups Program
Contributor Success Team
Code Contributor Program Email templates
Community pairing sessions
Contributor Success Team - Code Contributor User Journey
GitLab Community Hackathons
GitLab Nominations for Community Swag
GitLab Notable Contributor Selection Process
How to recognize organizations within the contributor ecosystem for GitLab
Innovation Pitch Competion
Merge Request Coach Lifecycle
Metrics & Tableau Dashboards
Workflows for working with community contributions
Core Team
Developer Advocacy
Community Newsletter
Consultancy workflows for Developer Advocates
Content library and workflows for Developer Advocates
Developer Advocacy CFPs
Developer Advocacy Community Response Process
Developer Advocacy on Social Media
Developer Advocacy Team Calendar
Developer Advocacy: Mentoring and Coaching
Developer Advocate Team Workflow
Hacker News
Learn Developer Advocacy
OSS Contributions
Projects
Developer Relations - Content Effectiveness
Developer Relations Content Requests
Developer Relations Department Performance Indicators
Developer Relations Events
Developer Relations Program Management
Developer Relations workflow: UTM Tracking Strategy
Developer Relations Workflows and Tools
Cloud Resources for Developer Relations
Code of Conduct Enforcement
Common Room workflows
Community Discord workflow
Developer Relations tools: Zapier
Developer Relations workflow: Team Budgets
Developer Relations Workflows: Content Review
E-mail response workflow
Forum workflow
Reddit response workflow
Stack Overflow: Tagged Questions and GitLab Collective Overview
Swag: Process & FAQ
Twitter response workflow
Zendesk for GitLab Developer Relations
Developer Relations: Program Resources
GitLab Co-Create Initiative
A Compatibility Guide for Corporate Contributors: Navigating Project License Requirements:
Co-Create Action Plan - FY26Q1
GitLab Community Apps
Campaign Manager
GitLab Contributors Program
GitLab Meetup Checklist
Leading Organizations
Strategic Plans
Contributor Program Unification & Growth Plan
Technical Marketing
GitLab.com logins for demos
Guide to Working the Booth at Events
How Tos
Adding CTAs to Learn@GitLab YouTube Videos
Autogenerating comparison infographics using Figma
Creating an AWS EKS cluster for a GitLab demo
Creating and Publishing Technical Marketing Demo Videos
Publish a video on YouTube
Making Better Videos
Technical Marketing Asset to Stakeholder Matrix
Technical Marketing Content Library
- Community Learning Pathway: Course Resources
- Community Programs
Community Programs Workflows
GitLab for Education Program Workflows
GitLab for Open Source Program Workflows
GitLab for Startups Program Workflows
Education Program
Pricing and Packaging - GitLab for Campuses
Open Source Program
Startups Program
- Community Programs Workflows
GitLab for Education Program Workflows
GitLab for Open Source Program Workflows
GitLab for Startups Program Workflows
- GitLab for Education Program Workflows
- GitLab for Open Source Program Workflows
- GitLab for Startups Program Workflows
- Education Program
Pricing and Packaging - GitLab for Campuses
- Pricing and Packaging - GitLab for Campuses
- Open Source Program
- Startups Program
- Contributor Success Team
Code Contributor Program Email templates
Community pairing sessions
Contributor Success Team - Code Contributor User Journey
GitLab Community Hackathons
GitLab Nominations for Community Swag
GitLab Notable Contributor Selection Process
How to recognize organizations within the contributor ecosystem for GitLab
Innovation Pitch Competion
Merge Request Coach Lifecycle
Metrics & Tableau Dashboards
Workflows for working with community contributions
- Code Contributor Program Email templates
- Community pairing sessions
- Contributor Success Team - Code Contributor User Journey
- GitLab Community Hackathons
- GitLab Nominations for Community Swag
- GitLab Notable Contributor Selection Process
- How to recognize organizations within the contributor ecosystem for GitLab
- Innovation Pitch Competion
- Merge Request Coach Lifecycle
- Metrics & Tableau Dashboards
- Workflows for working with community contributions
- Core Team
- Developer Advocacy
Community Newsletter
Consultancy workflows for Developer Advocates
Content library and workflows for Developer Advocates
Developer Advocacy CFPs
Developer Advocacy Community Response Process
Developer Advocacy on Social Media
Developer Advocacy Team Calendar
Developer Advocacy: Mentoring and Coaching
Developer Advocate Team Workflow
Hacker News
Learn Developer Advocacy
OSS Contributions
Projects
- Community Newsletter
- Consultancy workflows for Developer Advocates
- Content library and workflows for Developer Advocates
- Developer Advocacy CFPs
- Developer Advocacy Community Response Process
- Developer Advocacy on Social Media
- Developer Advocacy Team Calendar
- Developer Advocacy: Mentoring and Coaching
- Developer Advocate Team Workflow
- Hacker News
- Learn Developer Advocacy
- OSS Contributions
- Projects
- Developer Relations - Content Effectiveness
- Developer Relations Content Requests
- Developer Relations Department Performance Indicators
- Developer Relations Events
- Developer Relations Program Management
- Developer Relations workflow: UTM Tracking Strategy
- Developer Relations Workflows and Tools
Cloud Resources for Developer Relations
Code of Conduct Enforcement
Common Room workflows
Community Discord workflow
Developer Relations tools: Zapier
Developer Relations workflow: Team Budgets
Developer Relations Workflows: Content Review
E-mail response workflow
Forum workflow
Reddit response workflow
Stack Overflow: Tagged Questions and GitLab Collective Overview
Swag: Process & FAQ
Twitter response workflow
Zendesk for GitLab Developer Relations
- Cloud Resources for Developer Relations
- Code of Conduct Enforcement
- Common Room workflows
- Community Discord workflow
- Developer Relations tools: Zapier
- Developer Relations workflow: Team Budgets
- Developer Relations Workflows: Content Review
- E-mail response workflow
- Forum workflow
- Reddit response workflow
- Stack Overflow: Tagged Questions and GitLab Collective Overview
- Swag: Process & FAQ
- Twitter response workflow
- Zendesk for GitLab Developer Relations
- Developer Relations: Program Resources
- GitLab Co-Create Initiative
A Compatibility Guide for Corporate Contributors: Navigating Project License Requirements:
Co-Create Action Plan - FY26Q1
- A Compatibility Guide for Corporate Contributors: Navigating Project License Requirements:
- Co-Create Action Plan - FY26Q1
- GitLab Community Apps
Campaign Manager
- Campaign Manager
- GitLab Contributors Program
- GitLab Meetup Checklist
- Leading Organizations
- Strategic Plans
Contributor Program Unification & Growth Plan
- Contributor Program Unification & Growth Plan
- Technical Marketing
GitLab.com logins for demos
Guide to Working the Booth at Events
How Tos
Adding CTAs to Learn@GitLab YouTube Videos
Autogenerating comparison infographics using Figma
Creating an AWS EKS cluster for a GitLab demo
Creating and Publishing Technical Marketing Demo Videos
Publish a video on YouTube
Making Better Videos
Technical Marketing Asset to Stakeholder Matrix
Technical Marketing Content Library
- GitLab.com logins for demos
- Guide to Working the Booth at Events
- How Tos
Adding CTAs to Learn@GitLab YouTube Videos
Autogenerating comparison infographics using Figma
Creating an AWS EKS cluster for a GitLab demo
Creating and Publishing Technical Marketing Demo Videos
Publish a video on YouTube
- Adding CTAs to Learn@GitLab YouTube Videos
- Autogenerating comparison infographics using Figma
- Creating an AWS EKS cluster for a GitLab demo
- Creating and Publishing Technical Marketing Demo Videos
- Publish a video on YouTube
- Making Better Videos
- Technical Marketing Asset to Stakeholder Matrix
- Technical Marketing Content Library
- Digital Experience Handbook
Accessibility
Analytics
Google Lighthouse
Tracking Web Events with Google Tag Manager
Buyer Experience Repository
Coding Standards for Digital Experience
Contentful CMS
Contentful CMS 'The Source' Pages
Contentful CMS Custom Pages
Contentful CMS Solutions Pages
Editing content in Contentful
Known knowns & feature wishlist
Partner Microsites
Core Marketing Site Architecture Plan
Data Dictionary
Decap CMS
Dex Bot
DEX Code Review Guidelines
DEX Core Web Vitals
Digital definitions
Digital Experience: Foundations Agenda
Engineering A/B tests
Engineering GitLab Product
Engineering Marketo
Figma Process
Image Guidelines
Incident Response Matrix
Localization best practices
Major League Hacking Fellows
Marketing Cookies
Marketing Site Approval Process
Marketo page template
Navigation Repository
OneTrust
OneTrust Cookie Consent Implementation
- Accessibility
- Analytics
Google Lighthouse
Tracking Web Events with Google Tag Manager
- Google Lighthouse
- Tracking Web Events with Google Tag Manager
- Buyer Experience Repository
- Coding Standards for Digital Experience
- Contentful CMS
Contentful CMS 'The Source' Pages
Contentful CMS Custom Pages
Contentful CMS Solutions Pages
Editing content in Contentful
Known knowns & feature wishlist
Partner Microsites
- Contentful CMS 'The Source' Pages
- Contentful CMS Custom Pages
- Contentful CMS Solutions Pages
- Editing content in Contentful
- Known knowns & feature wishlist
- Partner Microsites
- Core Marketing Site Architecture Plan
- Data Dictionary
- Decap CMS
- Dex Bot
- DEX Code Review Guidelines
- DEX Core Web Vitals
- Digital definitions
- Digital Experience: Foundations Agenda
- Engineering A/B tests
- Engineering GitLab Product
- Engineering Marketo
- Figma Process
- Image Guidelines
- Incident Response Matrix
- Localization best practices
- Major League Hacking Fellows
- Marketing Cookies
- Marketing Site Approval Process
- Marketo page template
- Navigation Repository
- OneTrust
- OneTrust Cookie Consent Implementation
- Field Marketing
Field Marketing Epics
Field Marketing Owned Virtual Events
- Field Marketing Epics
- Field Marketing Owned Virtual Events
- FY22 Marketing Plan
- FY23 Marketing Plan
- GitLab Event Information
Event Requirements
- Event Requirements
- GitLab Marketing Team READMEs
Ashley Kramer's README
Brian Tabbert README (Director, Sales Development (AMER))
Christine Lee README (VP, Marketing Ops & Analytics)
Dave Steer README (VP Product Marketing)
Jean-Baptiste Larramendy README (AVP, Sales Dev)
Laura Duggan's README
Lauren Barker's README
Michael 'dnsmichi' Friedrich README (Staff Developer Advocate)
Nathan Dubord's README
Nikki Roth Silverberg README (Staff Marketing Operations Manager)
Salina Tran | Senior Marketing Operations Manager
- Ashley Kramer's README
- Brian Tabbert README (Director, Sales Development (AMER))
- Christine Lee README (VP, Marketing Ops & Analytics)
- Dave Steer README (VP Product Marketing)
- Jean-Baptiste Larramendy README (AVP, Sales Dev)
- Laura Duggan's README
- Lauren Barker's README
- Michael 'dnsmichi' Friedrich README (Staff Developer Advocate)
- Nathan Dubord's README
- Nikki Roth Silverberg README (Staff Marketing Operations Manager)
- Salina Tran | Senior Marketing Operations Manager
- GitLab Positioning FAQs
- Global Channel Marketing
Channel  Marketing Epics
Channel Marketing Menu of Services
Global Channel Marketing - MDF Operations Process
Hyperscaler Campaign
- Channel  Marketing Epics
Channel Marketing Menu of Services
- Channel Marketing Menu of Services
- Global Channel Marketing - MDF Operations Process
- Hyperscaler Campaign
- Growth Direction
- Inbound Marketing Handbook
Search Marketing
GitLab SEO strategy
Marketing web analytics
SEO Content Manual
Sitebulb
Testing for conversion at GitLab
Website Health Resolution
- Search Marketing
GitLab SEO strategy
Marketing web analytics
SEO Content Manual
Sitebulb
Testing for conversion at GitLab
Website Health Resolution
- GitLab SEO strategy
- Marketing web analytics
- SEO Content Manual
- Sitebulb
- Testing for conversion at GitLab
- Website Health Resolution
- Integrated Campaigns
[NAME] Campaign
CI/CD Campaign
DevSecOps 2.0 Campaign
- [NAME] Campaign
- CI/CD Campaign
- DevSecOps 2.0 Campaign
- Integrated Marketing
Corporate Event Marketing at GitLab
Digital Strategy
Digital Strategy Management
Digital Marketing changes of note
GitLab PMG Team
Social Marketing Handbook
Open Social Media Strategies from GitLab
Social Advocacy Curator Program
Social Media Community Management
Social Media Project Management and Admin
Social Media Reporting
Team Member Social Media Advocacy
- Corporate Event Marketing at GitLab
- Digital Strategy
Digital Strategy Management
Digital Marketing changes of note
GitLab PMG Team
Social Marketing Handbook
Open Social Media Strategies from GitLab
Social Advocacy Curator Program
Social Media Community Management
Social Media Project Management and Admin
Social Media Reporting
Team Member Social Media Advocacy
- Digital Strategy Management
Digital Marketing changes of note
- Digital Marketing changes of note
- GitLab PMG Team
- Social Marketing Handbook
Open Social Media Strategies from GitLab
Social Advocacy Curator Program
Social Media Community Management
Social Media Project Management and Admin
Social Media Reporting
Team Member Social Media Advocacy
- Open Social Media Strategies from GitLab
- Social Advocacy Curator Program
- Social Media Community Management
- Social Media Project Management and Admin
- Social Media Reporting
- Team Member Social Media Advocacy
- Intra-Department Learning: Marketing Functional Conversations
- Journeys
- Lifecycle Marketing
Email Best Practices
Emails & Nurture Programs
Emails Processes
- Email Best Practices
- Emails & Nurture Programs
- Emails Processes
- Localization
Localization Engineering
Smartling (retired)
- Localization Engineering
- Smartling (retired)
- Marketing - Emergency Response
- Marketing Analytics
Allocadia
Google Analytics 4
Marketing Analytics - Analytics Engineering
Marketing Analytics Data Overview and General Information
Marketing Analytics Data - L2R Models
Marketing Analytics Data - SFDC Models
Marketing Dashboards
TD: Campaign Performance
Marketing Metrics
Marketing Third-Party Scripts
- Allocadia
- Google Analytics 4
- Marketing Analytics - Analytics Engineering
- Marketing Analytics Data Overview and General Information
Marketing Analytics Data - L2R Models
Marketing Analytics Data - SFDC Models
- Marketing Analytics Data - L2R Models
- Marketing Analytics Data - SFDC Models
- Marketing Dashboards
TD: Campaign Performance
- TD: Campaign Performance
- Marketing Metrics
- Marketing Third-Party Scripts
- Marketing Career Development - Overview
Contributor Success Career Framework
Contributor Success Career Framework: Intermediate Fullstack Engineer
Contributor Success Career Framework: Senior Fullstack Engineer
Contributor Success Career Framework: Staff Fullstack Engineer
Marketing Career Development - Career Paths
- Contributor Success Career Framework
Contributor Success Career Framework: Intermediate Fullstack Engineer
Contributor Success Career Framework: Senior Fullstack Engineer
Contributor Success Career Framework: Staff Fullstack Engineer
- Contributor Success Career Framework: Intermediate Fullstack Engineer
- Contributor Success Career Framework: Senior Fullstack Engineer
- Contributor Success Career Framework: Staff Fullstack Engineer
- Marketing Career Development - Career Paths
- Marketing Department Efficiency Working Group - FY24
- Marketing Operations
6sense
Adobe Marketo Measure (formerly known as Bizible)
AI in Marketing
Asana
Backblaze
Brilliant
Campaigns and Programs
Cognism
Email Management
Operational Email Sends
Goldcast
Groove.co
Hightouch
iconik
Impartner
Iterable
JiffleNow
Lead Lifecycle Management
Learning Marketing Operations
List Imports
Litmus
Marketing Owned System Provisioning Instructions
Marketing Technology Tiering System
Marketo
Marketo Interesting Moments
Marketo Tech Stack Guide
Marketo program/campaign support
MQL SLAs
Mutiny
ON24
PathFactory
Content Library
PathFactory Analytics
PathFactory for Sales
Qualified
Rev
Ringlead
Self-Service List Imports
Terminus Email Experiences
Traction Lead Complete
Typeform
UserGems
Vartopia
Vimeo
Workato
YouTube uses and access
zapier
Zoominfo
- 6sense
- Adobe Marketo Measure (formerly known as Bizible)
- AI in Marketing
- Asana
- Backblaze
- Brilliant
- Campaigns and Programs
- Cognism
- Email Management
Operational Email Sends
- Operational Email Sends
- Goldcast
- Groove.co
- Hightouch
- iconik
- Impartner
- Iterable
- JiffleNow
- Lead Lifecycle Management
- Learning Marketing Operations
- List Imports
- Litmus
- Marketing Owned System Provisioning Instructions
- Marketing Technology Tiering System
- Marketo
Marketo Interesting Moments
Marketo Tech Stack Guide
- Marketo Interesting Moments
- Marketo Tech Stack Guide
- Marketo program/campaign support
- MQL SLAs
- Mutiny
- ON24
- PathFactory
Content Library
PathFactory Analytics
PathFactory for Sales
- Content Library
- PathFactory Analytics
- PathFactory for Sales
- Qualified
- Rev
- Ringlead
- Self-Service List Imports
- Terminus Email Experiences
- Traction Lead Complete
- Typeform
- UserGems
- Vartopia
- Vimeo
- Workato
- YouTube uses and access
- zapier
- Zoominfo
- Marketing Performance Indicators
- Marketing Project Management Guidelines
Epics project management guidelines
Issue and Kanban boards project management guidelines
Issues project management guidelines
Labels project management guidelines
Managing Commitment
Marketing Groups and Projects guidelines
Milestones project management guidelines
- Epics project management guidelines
- Issue and Kanban boards project management guidelines
- Issues project management guidelines
- Labels project management guidelines
- Managing Commitment
- Marketing Groups and Projects guidelines
- Milestones project management guidelines
- Marketing Strategy & Platforms
- Marketing Team Processes - How We Work
- Prescriptive Buyer Journeys
- Sales Development
Tanuki Tech
- Tanuki Tech
- Sales Plays
Sales Play: Expand with Package
Sales Play: Infrastructure Automation with GitOps
Sales Play: GitOps for First Order
- Sales Play: Expand with Package
- Sales Play: Infrastructure Automation with GitOps
Sales Play: GitOps for First Order
- Sales Play: GitOps for First Order
- SMB Marketing
- Team Member Social Media Policy
- The Source Handbook
- User Engagement
- UTM Strategy
- Virtual Events
External Virtual Events
Self-Service Virtual Events
Webcasts
Webex Webcasts
- External Virtual Events
- Self-Service Virtual Events
- Webcasts
Webex Webcasts
- Webex Webcasts
- People Group
360 Feedback
Anti-Harassment Policy
Competencies
Contracts, Background Screenings, Probation Periods & PIAA
Directly Responsible Individuals (DRI)
Employment Solutions - Overview
Engagement Surveys and Employer Awards
Frequently Requested
Gender and Sexual Orientation Identity Definitions and FAQ
GitLab Internal Acceptable Use Policy
GitLab Offboarding
GitLab Offboarding FAQ
GitLab Offboarding Standards
GitLab Onboarding
GitLab Onboarding Buddies
Merge Request Buddies
TaNewKi Tips
GitLab People Connect
GiveLab Volunteer Initiatives
Guidance on Feedback
Incident Response
Learning & Development
Career Development and Mobility
Your Individual Growth Plan (IGP) Journey
Elevate Programs
Elevate
Elevate Applied
Elevate Applied 1:1 Coaching
Elevate+
Elevate+ Participant Hub
Elevate+ Round 3 Pilot - FY25 Q3
ElevatePrep
GitLab 101
GitLab 201
Growth and Development Fund
Growth and Development Processing Documentation for Talent Development
Tax Impacts of Different Growth & Development Benefits
Handbook-First Approach to Interactive Learning
Hone Partnership
Internship for Learning
Learning Initiatives
Past Learning Initiatives
Radical Candor at GitLab
LevelUp
Legacy Level Up - Thought Industries
Mentoring at GitLab
GitLab Company-Wide Mentorship Program
New to Leadership and Management
Self-Paced External Trainings
Team Workshops
Transitioning to a manager role
Building high performing teams
Work with the Learning and Development Team
New Hires, Celebrations and Significant Life Events
Organizational Change Management
Paid Time Off at GitLab
People Business Partner Team
People Compliance at GitLab
People Compliance Reporting
Affirmative Action Plan Information
People Group Calendars
GitLab Team Member Calendar
Programs Calendar - People Managers
People Group Engineering
Employment Issues
Miscellaneous
Nominator bot
Offboarding Automation Flow
Onboarding Automation Flow
Organization Change Automation Flow
People Operations Internal Handbook
Slack
Team PTO Calendar
People Group Program Management
People Group Project Program
People Group READMEs
Cassiana Gudgenov's README
Tre Ely's README
People Group Spotlight program
People Group Systems Architecture
People Group Tech Stack Guide
People Operations Team
People Analytics
Data Guide to People Data Analysis
People Analytics Data Governance
People Analytics Survey Support
People Analytics Tableau Dashboard Overview
People Operations, Technology & Analytics Team Operating Principles
People Success Performance Indicators
Promotion Document Style Guide
Promotions and Transfers
Pronoun Guidance and Information
Quarterly Talent Review (QTR)
Relocation
Talent Assessment
Talent brand
Content library - life at GitLab
People communications & team member engagement
Process for employer awards
Tracking reviews
Talent Development Program
Team Member Relations at GitLab
Using GitLab at GitLab
Visas
Workday Guide
- 360 Feedback
- Anti-Harassment Policy
- Competencies
- Contracts, Background Screenings, Probation Periods & PIAA
- Directly Responsible Individuals (DRI)
- Employment Solutions - Overview
- Engagement Surveys and Employer Awards
- Frequently Requested
- Gender and Sexual Orientation Identity Definitions and FAQ
- GitLab Internal Acceptable Use Policy
- GitLab Offboarding
GitLab Offboarding FAQ
GitLab Offboarding Standards
- GitLab Offboarding FAQ
- GitLab Offboarding Standards
- GitLab Onboarding
GitLab Onboarding Buddies
Merge Request Buddies
TaNewKi Tips
- GitLab Onboarding Buddies
- Merge Request Buddies
- TaNewKi Tips
- GitLab People Connect
- GiveLab Volunteer Initiatives
- Guidance on Feedback
- Incident Response
- Learning & Development
Career Development and Mobility
Your Individual Growth Plan (IGP) Journey
Elevate Programs
Elevate
Elevate Applied
Elevate Applied 1:1 Coaching
Elevate+
Elevate+ Participant Hub
Elevate+ Round 3 Pilot - FY25 Q3
ElevatePrep
GitLab 101
GitLab 201
Growth and Development Fund
Growth and Development Processing Documentation for Talent Development
Tax Impacts of Different Growth & Development Benefits
Handbook-First Approach to Interactive Learning
Hone Partnership
Internship for Learning
Learning Initiatives
Past Learning Initiatives
Radical Candor at GitLab
LevelUp
Legacy Level Up - Thought Industries
Mentoring at GitLab
GitLab Company-Wide Mentorship Program
New to Leadership and Management
Self-Paced External Trainings
Team Workshops
Transitioning to a manager role
Building high performing teams
Work with the Learning and Development Team
- Career Development and Mobility
Your Individual Growth Plan (IGP) Journey
- Your Individual Growth Plan (IGP) Journey
- Elevate Programs
Elevate
Elevate Applied
Elevate Applied 1:1 Coaching
Elevate+
Elevate+ Participant Hub
Elevate+ Round 3 Pilot - FY25 Q3
ElevatePrep
- Elevate
- Elevate Applied
Elevate Applied 1:1 Coaching
- Elevate Applied 1:1 Coaching
- Elevate+
Elevate+ Participant Hub
Elevate+ Round 3 Pilot - FY25 Q3
- Elevate+ Participant Hub
- Elevate+ Round 3 Pilot - FY25 Q3
- ElevatePrep
- GitLab 101
- GitLab 201
- Growth and Development Fund
Growth and Development Processing Documentation for Talent Development
Tax Impacts of Different Growth & Development Benefits
- Growth and Development Processing Documentation for Talent Development
- Tax Impacts of Different Growth & Development Benefits
- Handbook-First Approach to Interactive Learning
- Hone Partnership
- Internship for Learning
- Learning Initiatives
Past Learning Initiatives
Radical Candor at GitLab
- Past Learning Initiatives
- Radical Candor at GitLab
- LevelUp
Legacy Level Up - Thought Industries
- Legacy Level Up - Thought Industries
- Mentoring at GitLab
GitLab Company-Wide Mentorship Program
- GitLab Company-Wide Mentorship Program
- New to Leadership and Management
- Self-Paced External Trainings
- Team Workshops
- Transitioning to a manager role
Building high performing teams
- Building high performing teams
- Work with the Learning and Development Team
- New Hires, Celebrations and Significant Life Events
- Organizational Change Management
- Paid Time Off at GitLab
- People Business Partner Team
- People Compliance at GitLab
People Compliance Reporting
Affirmative Action Plan Information
- People Compliance Reporting
Affirmative Action Plan Information
- Affirmative Action Plan Information
- People Group Calendars
GitLab Team Member Calendar
Programs Calendar - People Managers
- GitLab Team Member Calendar
- Programs Calendar - People Managers
- People Group Engineering
Employment Issues
Miscellaneous
Nominator bot
Offboarding Automation Flow
Onboarding Automation Flow
Organization Change Automation Flow
People Operations Internal Handbook
Slack
Team PTO Calendar
- Employment Issues
- Miscellaneous
- Nominator bot
- Offboarding Automation Flow
- Onboarding Automation Flow
- Organization Change Automation Flow
- People Operations Internal Handbook
- Slack
- Team PTO Calendar
- People Group Program Management
- People Group Project Program
- People Group READMEs
Cassiana Gudgenov's README
Tre Ely's README
- Cassiana Gudgenov's README
- Tre Ely's README
- People Group Spotlight program
- People Group Systems Architecture
- People Group Tech Stack Guide
- People Operations Team
People Analytics
Data Guide to People Data Analysis
People Analytics Data Governance
People Analytics Survey Support
People Analytics Tableau Dashboard Overview
People Operations, Technology & Analytics Team Operating Principles
- People Analytics
Data Guide to People Data Analysis
People Analytics Data Governance
People Analytics Survey Support
People Analytics Tableau Dashboard Overview
- Data Guide to People Data Analysis
- People Analytics Data Governance
- People Analytics Survey Support
- People Analytics Tableau Dashboard Overview
- People Operations, Technology & Analytics Team Operating Principles
- People Success Performance Indicators
- Promotion Document Style Guide
- Promotions and Transfers
- Pronoun Guidance and Information
- Quarterly Talent Review (QTR)
- Relocation
- Talent Assessment
- Talent brand
Content library - life at GitLab
People communications & team member engagement
Process for employer awards
Tracking reviews
- Content library - life at GitLab
- People communications & team member engagement
- Process for employer awards
- Tracking reviews
- Talent Development Program
- Team Member Relations at GitLab
- Using GitLab at GitLab
- Visas
- Workday Guide
- People Policies
GitLab France S.A.S. Remote Work Charter
GitLab France S.A.S. Right to Disconnect Charter
GitLab Ireland Ltd Right to Disconnect Policy
Leave of Absence
United States Leave of Absence Policies
People Policies - GitLab Inc (USA)
- GitLab France S.A.S. Remote Work Charter
- GitLab France S.A.S. Right to Disconnect Charter
- GitLab Ireland Ltd Right to Disconnect Policy
- Leave of Absence
United States Leave of Absence Policies
- United States Leave of Absence Policies
- People Policies - GitLab Inc (USA)
- Product Development
Product Development Flow
Feature flags in development of GitLab
Phase template
Product Development Budgeting Process
Product Development Flow Success Metrics
Product Development Roles and Responsibilities
R&D Interlock
- Product Development Flow
Feature flags in development of GitLab
Phase template
Product Development Budgeting Process
Product Development Flow Success Metrics
- Feature flags in development of GitLab
- Phase template
- Product Development Budgeting Process
- Product Development Flow Success Metrics
- Product Development Roles and Responsibilities
- R&D Interlock
- Product Handbook
AI-assisted features
AI Continuity Plan
UX maturity guidelines for AI-assisted features
UX support for AI-assisted features
Collaboration on shared feature and experience areas
Collaboration on merge requests experience
Collaboration on work items framework
GitLab Product Management
Product Internship - Best Practices
Product Management CDF and Competencies
Product Management Learning and Development
The Product Manager Role at GitLab
Personas
Organization Archetype
Product Group and Team Pages
Analytics Section
Fulfillment Guide
How the growth section works
Plan:Project Management
Product Data Insights
Crash Course for Product Stage Resources
dbt Cheat Sheet
Engineering Metrics
Engineering Metrics Dashboards
Experimentation Design & Analysis
Guide to Engineering Analytics Data
PDI Dashboards, Analysis, & Insights
Product Data Insights Data Models Cheat Sheet
Team Processes
Product Technical Program Manager
Verify Product Group
Product Leadership Team Resources
CPO Shadow Program
People Group for Product Management
Product Leadership
Product Principles
Product Processes
Analytics Instrumentation Guide
Our Commitment to Individual User Privacy in relation to Service Usage Data
Continuous Interviews
Cross Functional Prioritization
Customer Issues Prioritization Framework
Dogfooding for R&D
GitLab Early Access Program Direction
Joint R&D OKR Process
Making GIFs
New Product Introduction (NPI) Process
Product Customer Advisory Board
Product Management Tips and Tricks
Product Manager SAFE Guidance
Product Milestones
Product Procedures
Product Team Board Meeting Prep
Sensing Mechanisms
Tiering Strategy & Guidance for Product Managers
Using GitLab to plan work
Product sections, stages, groups, and categories
Features by Group
Features Category Quick Lookup
GitLab the Product
Advantages of a single application
Data flow GitLab vs. multiple applications
UX Department
Assessing Category Maturity
Category Maturity - Competitor Comparison
Category Maturity Scorecards
Competitor Evaluations
Design collaborator's playbook
Documenting research insights in Dovetail
GitLab Navigation
Navigation inventory
How to create a user persona
How we work
Cross-stage design collaboration
Design Pods
Figma provisioning and deprovisioning
Product Design Manager Pairs
Product Design Pairs
Jobs to be Done at GitLab
Anatomy of a JTBD Canvas
JTBD - Beyond the Playbook
JTBD Research Playbook
Validated GitLab JTBD Canvases and Opportunity Scores
Pajamas Design System
Pajamas Design Review Process
Product Design
Hiring Product Designers
Product Design Manager Workflows
UX Themes
UX Theme Workshops
Product Designer Workflow
A Guide for Designing with AI
Merge Request Reviews
Merge Request Reviews
Product Designer Design Tools
Product Designer Priorities and Capacity Management
Remote Design Sprint
Technical Writing
Hiring Technical Writers
Think Big & Think Small Meetings
UX Department Learning and Development
GitLab-sponsored Tufts University Human Factors/Engineering Psychology Capstone Course
UX Department Performance Indicators
System Usability Scale
System Usability Scale responder outreach
User Satisfaction (USAT) Survey
UX Forum
UX Heuristics
UX Research at GitLab
Analyzing and synthesizing user research data
Analyzing survey verbatim
Attending a research event
Choosing a research methodology
Collecting useful data
Community contributions for Actionable Insights
Comparative testing for navigation
Creating a first click study in Qualtrics
Creating and managing a research participant panel
Defining goals, objectives, and hypotheses
Diary studies
Doing UX research in the AI space
Evaluating navigation
Facilitating user interviews
Finding SaaS users
First click testing for navigation
Foundational research
How the UX Research team operates at GitLab
How to Conduct UX Research Workshops
How to find existing research
How to recruit UX Research participants
The Common Screener: an efficient way to screen for multiple studies
UX research recruiting email tips
How to write an effective screener
Interview Carousel - Becoming a better interviewer 15 minutes at a time
Kano Survey for feature prioritization
Longitudinal studies
Mental modeling
Preference testing
Problem validation and methods
Problem Validation research for single-stage-group initiatives
Product Analytics for UX Research
Rapid Iterative Testing and Evaluation (RITE)
Research insights
Research prioritization
Resources for Research DRIs
Solution Validation and methods
Strategic research at GitLab
GitLab Adoption Research Program
Surveys
Common types of survey questions
Designing your survey
How to identify low quality data when designing and reviewing your survey
Piloting your survey
Qualtrics tips and tricks
Sample sizes for surveys
Survey question scales
Testing navigation: early Solution Validation
Tracking actionable insights
Tracking gold, silver, and bronze UX research projects
Tracking research velocity
Unmoderated usability testing
Usability benchmarking
Usability testing
User story mapping
Using quantitative data to find insights
Using RITE to test navigation
Using the UX Research Google Calendar
UX Bash
UX Cloud Sandbox
UX Research growth and development
UX Research shadowing
UX Research tools/applications
UX Researcher pairings
When to conduct UX Research
Writing a discussion guide for user interviews
Writing a website usability testing script
UX Research Operations (ReOps) at GitLab
Getting the word out about research insights
How to fill in for a UX Research Operations Coordinator
Non-Disclosure Agreements for UX Research
Recruitment methods
ReOps procurement best practices
Research participation gratuities
The IP Assignment and when to show it
UX Resources
Dark Mode Rollout Playbook
Data for Design Decisions
Experimentation for the User Experience Team
How to do UI Code Contributions
Step by Step Guide to Make Code Changes
UX Scorecards
- AI-assisted features
AI Continuity Plan
UX maturity guidelines for AI-assisted features
UX support for AI-assisted features
- AI Continuity Plan
- UX maturity guidelines for AI-assisted features
- UX support for AI-assisted features
- Collaboration on shared feature and experience areas
Collaboration on merge requests experience
Collaboration on work items framework
- Collaboration on merge requests experience
- Collaboration on work items framework
- GitLab Product Management
Product Internship - Best Practices
Product Management CDF and Competencies
Product Management Learning and Development
The Product Manager Role at GitLab
- Product Internship - Best Practices
- Product Management CDF and Competencies
- Product Management Learning and Development
- The Product Manager Role at GitLab
- Personas
Organization Archetype
- Organization Archetype
- Product Group and Team Pages
Analytics Section
Fulfillment Guide
How the growth section works
Plan:Project Management
Product Data Insights
Crash Course for Product Stage Resources
dbt Cheat Sheet
Engineering Metrics
Engineering Metrics Dashboards
Experimentation Design & Analysis
Guide to Engineering Analytics Data
PDI Dashboards, Analysis, & Insights
Product Data Insights Data Models Cheat Sheet
Team Processes
Product Technical Program Manager
Verify Product Group
- Analytics Section
- Fulfillment Guide
- How the growth section works
- Plan:Project Management
- Product Data Insights
Crash Course for Product Stage Resources
dbt Cheat Sheet
Engineering Metrics
Engineering Metrics Dashboards
Experimentation Design & Analysis
Guide to Engineering Analytics Data
PDI Dashboards, Analysis, & Insights
Product Data Insights Data Models Cheat Sheet
Team Processes
- Crash Course for Product Stage Resources
- dbt Cheat Sheet
- Engineering Metrics
- Engineering Metrics Dashboards
- Experimentation Design & Analysis
- Guide to Engineering Analytics Data
- PDI Dashboards, Analysis, & Insights
- Product Data Insights Data Models Cheat Sheet
- Team Processes
- Product Technical Program Manager
- Verify Product Group
- Product Leadership Team Resources
CPO Shadow Program
People Group for Product Management
Product Leadership
- CPO Shadow Program
- People Group for Product Management
- Product Leadership
- Product Principles
- Product Processes
Analytics Instrumentation Guide
Our Commitment to Individual User Privacy in relation to Service Usage Data
Continuous Interviews
Cross Functional Prioritization
Customer Issues Prioritization Framework
Dogfooding for R&D
GitLab Early Access Program Direction
Joint R&D OKR Process
Making GIFs
New Product Introduction (NPI) Process
Product Customer Advisory Board
Product Management Tips and Tricks
Product Manager SAFE Guidance
Product Milestones
Product Procedures
Product Team Board Meeting Prep
Sensing Mechanisms
Tiering Strategy & Guidance for Product Managers
Using GitLab to plan work
- Analytics Instrumentation Guide
Our Commitment to Individual User Privacy in relation to Service Usage Data
- Our Commitment to Individual User Privacy in relation to Service Usage Data
- Continuous Interviews
- Cross Functional Prioritization
- Customer Issues Prioritization Framework
- Dogfooding for R&D
- GitLab Early Access Program Direction
- Joint R&D OKR Process
- Making GIFs
- New Product Introduction (NPI) Process
- Product Customer Advisory Board
- Product Management Tips and Tricks
- Product Manager SAFE Guidance
- Product Milestones
- Product Procedures
- Product Team Board Meeting Prep
- Sensing Mechanisms
- Tiering Strategy & Guidance for Product Managers
- Using GitLab to plan work
- Product sections, stages, groups, and categories
Features by Group
Features Category Quick Lookup
GitLab the Product
Advantages of a single application
Data flow GitLab vs. multiple applications
- Features by Group
- Features Category Quick Lookup
- GitLab the Product
Advantages of a single application
Data flow GitLab vs. multiple applications
- Advantages of a single application
Data flow GitLab vs. multiple applications
- Data flow GitLab vs. multiple applications
- UX Department
Assessing Category Maturity
Category Maturity - Competitor Comparison
Category Maturity Scorecards
Competitor Evaluations
Design collaborator's playbook
Documenting research insights in Dovetail
GitLab Navigation
Navigation inventory
How to create a user persona
How we work
Cross-stage design collaboration
Design Pods
Figma provisioning and deprovisioning
Product Design Manager Pairs
Product Design Pairs
Jobs to be Done at GitLab
Anatomy of a JTBD Canvas
JTBD - Beyond the Playbook
JTBD Research Playbook
Validated GitLab JTBD Canvases and Opportunity Scores
Pajamas Design System
Pajamas Design Review Process
Product Design
Hiring Product Designers
Product Design Manager Workflows
UX Themes
UX Theme Workshops
Product Designer Workflow
A Guide for Designing with AI
Merge Request Reviews
Merge Request Reviews
Product Designer Design Tools
Product Designer Priorities and Capacity Management
Remote Design Sprint
Technical Writing
Hiring Technical Writers
Think Big & Think Small Meetings
UX Department Learning and Development
GitLab-sponsored Tufts University Human Factors/Engineering Psychology Capstone Course
UX Department Performance Indicators
System Usability Scale
System Usability Scale responder outreach
User Satisfaction (USAT) Survey
UX Forum
UX Heuristics
UX Research at GitLab
Analyzing and synthesizing user research data
Analyzing survey verbatim
Attending a research event
Choosing a research methodology
Collecting useful data
Community contributions for Actionable Insights
Comparative testing for navigation
Creating a first click study in Qualtrics
Creating and managing a research participant panel
Defining goals, objectives, and hypotheses
Diary studies
Doing UX research in the AI space
Evaluating navigation
Facilitating user interviews
Finding SaaS users
First click testing for navigation
Foundational research
How the UX Research team operates at GitLab
How to Conduct UX Research Workshops
How to find existing research
How to recruit UX Research participants
The Common Screener: an efficient way to screen for multiple studies
UX research recruiting email tips
How to write an effective screener
Interview Carousel - Becoming a better interviewer 15 minutes at a time
Kano Survey for feature prioritization
Longitudinal studies
Mental modeling
Preference testing
Problem validation and methods
Problem Validation research for single-stage-group initiatives
Product Analytics for UX Research
Rapid Iterative Testing and Evaluation (RITE)
Research insights
Research prioritization
Resources for Research DRIs
Solution Validation and methods
Strategic research at GitLab
GitLab Adoption Research Program
Surveys
Common types of survey questions
Designing your survey
How to identify low quality data when designing and reviewing your survey
Piloting your survey
Qualtrics tips and tricks
Sample sizes for surveys
Survey question scales
Testing navigation: early Solution Validation
Tracking actionable insights
Tracking gold, silver, and bronze UX research projects
Tracking research velocity
Unmoderated usability testing
Usability benchmarking
Usability testing
User story mapping
Using quantitative data to find insights
Using RITE to test navigation
Using the UX Research Google Calendar
UX Bash
UX Cloud Sandbox
UX Research growth and development
UX Research shadowing
UX Research tools/applications
UX Researcher pairings
When to conduct UX Research
Writing a discussion guide for user interviews
Writing a website usability testing script
UX Research Operations (ReOps) at GitLab
Getting the word out about research insights
How to fill in for a UX Research Operations Coordinator
Non-Disclosure Agreements for UX Research
Recruitment methods
ReOps procurement best practices
Research participation gratuities
The IP Assignment and when to show it
UX Resources
Dark Mode Rollout Playbook
Data for Design Decisions
Experimentation for the User Experience Team
How to do UI Code Contributions
Step by Step Guide to Make Code Changes
UX Scorecards
- Assessing Category Maturity
Category Maturity - Competitor Comparison
Category Maturity Scorecards
- Category Maturity - Competitor Comparison
- Category Maturity Scorecards
- Competitor Evaluations
- Design collaborator's playbook
- Documenting research insights in Dovetail
- GitLab Navigation
Navigation inventory
- Navigation inventory
- How to create a user persona
- How we work
Cross-stage design collaboration
Design Pods
Figma provisioning and deprovisioning
Product Design Manager Pairs
Product Design Pairs
- Cross-stage design collaboration
Design Pods
- Design Pods
- Figma provisioning and deprovisioning
- Product Design Manager Pairs
- Product Design Pairs
- Jobs to be Done at GitLab
Anatomy of a JTBD Canvas
JTBD - Beyond the Playbook
JTBD Research Playbook
Validated GitLab JTBD Canvases and Opportunity Scores
- Anatomy of a JTBD Canvas
- JTBD - Beyond the Playbook
- JTBD Research Playbook
- Validated GitLab JTBD Canvases and Opportunity Scores
- Pajamas Design System
Pajamas Design Review Process
- Pajamas Design Review Process
- Product Design
Hiring Product Designers
Product Design Manager Workflows
UX Themes
UX Theme Workshops
- Hiring Product Designers
- Product Design Manager Workflows
- UX Themes
UX Theme Workshops
- UX Theme Workshops
- Product Designer Workflow
A Guide for Designing with AI
Merge Request Reviews
Merge Request Reviews
Product Designer Design Tools
Product Designer Priorities and Capacity Management
- A Guide for Designing with AI
- Merge Request Reviews
Merge Request Reviews
- Merge Request Reviews
- Product Designer Design Tools
- Product Designer Priorities and Capacity Management
- Remote Design Sprint
- Technical Writing
Hiring Technical Writers
- Hiring Technical Writers
- Think Big & Think Small Meetings
- UX Department Learning and Development
GitLab-sponsored Tufts University Human Factors/Engineering Psychology Capstone Course
- GitLab-sponsored Tufts University Human Factors/Engineering Psychology Capstone Course
- UX Department Performance Indicators
System Usability Scale
System Usability Scale responder outreach
User Satisfaction (USAT) Survey
- System Usability Scale
System Usability Scale responder outreach
- System Usability Scale responder outreach
- User Satisfaction (USAT) Survey
- UX Forum
- UX Heuristics
- UX Research at GitLab
Analyzing and synthesizing user research data
Analyzing survey verbatim
Attending a research event
Choosing a research methodology
Collecting useful data
Community contributions for Actionable Insights
Comparative testing for navigation
Creating a first click study in Qualtrics
Creating and managing a research participant panel
Defining goals, objectives, and hypotheses
Diary studies
Doing UX research in the AI space
Evaluating navigation
Facilitating user interviews
Finding SaaS users
First click testing for navigation
Foundational research
How the UX Research team operates at GitLab
How to Conduct UX Research Workshops
How to find existing research
How to recruit UX Research participants
The Common Screener: an efficient way to screen for multiple studies
UX research recruiting email tips
How to write an effective screener
Interview Carousel - Becoming a better interviewer 15 minutes at a time
Kano Survey for feature prioritization
Longitudinal studies
Mental modeling
Preference testing
Problem validation and methods
Problem Validation research for single-stage-group initiatives
Product Analytics for UX Research
Rapid Iterative Testing and Evaluation (RITE)
Research insights
Research prioritization
Resources for Research DRIs
Solution Validation and methods
Strategic research at GitLab
GitLab Adoption Research Program
Surveys
Common types of survey questions
Designing your survey
How to identify low quality data when designing and reviewing your survey
Piloting your survey
Qualtrics tips and tricks
Sample sizes for surveys
Survey question scales
Testing navigation: early Solution Validation
Tracking actionable insights
Tracking gold, silver, and bronze UX research projects
Tracking research velocity
Unmoderated usability testing
Usability benchmarking
Usability testing
User story mapping
Using quantitative data to find insights
Using RITE to test navigation
Using the UX Research Google Calendar
UX Bash
UX Cloud Sandbox
UX Research growth and development
UX Research shadowing
UX Research tools/applications
UX Researcher pairings
When to conduct UX Research
Writing a discussion guide for user interviews
Writing a website usability testing script
- Analyzing and synthesizing user research data
- Analyzing survey verbatim
- Attending a research event
- Choosing a research methodology
- Collecting useful data
- Community contributions for Actionable Insights
- Comparative testing for navigation
- Creating a first click study in Qualtrics
- Creating and managing a research participant panel
- Defining goals, objectives, and hypotheses
- Diary studies
- Doing UX research in the AI space
- Evaluating navigation
- Facilitating user interviews
- Finding SaaS users
- First click testing for navigation
- Foundational research
- How the UX Research team operates at GitLab
- How to Conduct UX Research Workshops
- How to find existing research
- How to recruit UX Research participants
The Common Screener: an efficient way to screen for multiple studies
UX research recruiting email tips
- The Common Screener: an efficient way to screen for multiple studies
- UX research recruiting email tips
- How to write an effective screener
- Interview Carousel - Becoming a better interviewer 15 minutes at a time
- Kano Survey for feature prioritization
- Longitudinal studies
- Mental modeling
- Preference testing
- Problem validation and methods
- Problem Validation research for single-stage-group initiatives
- Product Analytics for UX Research
- Rapid Iterative Testing and Evaluation (RITE)
- Research insights
- Research prioritization
- Resources for Research DRIs
- Solution Validation and methods
- Strategic research at GitLab
GitLab Adoption Research Program
- GitLab Adoption Research Program
- Surveys
Common types of survey questions
Designing your survey
How to identify low quality data when designing and reviewing your survey
Piloting your survey
Qualtrics tips and tricks
Sample sizes for surveys
Survey question scales
- Common types of survey questions
- Designing your survey
- How to identify low quality data when designing and reviewing your survey
- Piloting your survey
- Qualtrics tips and tricks
- Sample sizes for surveys
- Survey question scales
- Testing navigation: early Solution Validation
- Tracking actionable insights
- Tracking gold, silver, and bronze UX research projects
- Tracking research velocity
- Unmoderated usability testing
- Usability benchmarking
- Usability testing
- User story mapping
- Using quantitative data to find insights
- Using RITE to test navigation
- Using the UX Research Google Calendar
- UX Bash
- UX Cloud Sandbox
- UX Research growth and development
- UX Research shadowing
- UX Research tools/applications
- UX Researcher pairings
- When to conduct UX Research
- Writing a discussion guide for user interviews
- Writing a website usability testing script
- UX Research Operations (ReOps) at GitLab
Getting the word out about research insights
How to fill in for a UX Research Operations Coordinator
Non-Disclosure Agreements for UX Research
Recruitment methods
ReOps procurement best practices
Research participation gratuities
The IP Assignment and when to show it
- Getting the word out about research insights
- How to fill in for a UX Research Operations Coordinator
- Non-Disclosure Agreements for UX Research
- Recruitment methods
- ReOps procurement best practices
- Research participation gratuities
- The IP Assignment and when to show it
- UX Resources
Dark Mode Rollout Playbook
Data for Design Decisions
Experimentation for the User Experience Team
How to do UI Code Contributions
Step by Step Guide to Make Code Changes
- Dark Mode Rollout Playbook
- Data for Design Decisions
- Experimentation for the User Experience Team
- How to do UI Code Contributions
- Step by Step Guide to Make Code Changes
- UX Scorecards
- Sales
Account Planning
Coaching Account Planning for ASMs
Associating emails to Salesforce
Best Practices for Building Value with Customers
Command of the Message
Command Plan
Demystifying the Metrics Conversation
Opportunity Consults
Proof Points
Commercial Sales
Commercial Sales Enablement
Guide to the Required 7
Commercial Sales Opportunity Stages
High Velocity Sales and First Orders - Feedback Collection and Best Practices
High Velocity Sales and First Orders (formerly Global Digital SMB)
Renewals FAQ
Commissions
Communicating with the Field
Field-FYI Slack Channel
CRO Career Development Day
Customer & Partner Fireside Chat
Enterprise Sales
Effective Discovery
FAQ from prospects
Field Communications
Field Alerts
Field Flash Newsletter
Field Flash Newsletter - Edition 2020-04-02
Field Flash Newsletter - Edition 2020-05-05
Field Flash Newsletter - Edition 2020-06-05
Field Flash Newsletter - Edition 2020-07-07
Field Flash Newsletter - Edition 2020-08-06
Field Flash Newsletter - Edition 2020-09-01
Field Flash Newsletter - Edition 2020-10-08
Field Flash Newsletter - Edition 2020-11-02
Field Flash Newsletter - Edition 2020-12-07
Field Flash Newsletter - Edition 2021-01-06
Field Flash Newsletter - Edition 2021-02-01
Field Flash Newsletter - Edition 2021-03-01
Field Flash Newsletter - Edition 2021-04-06
Field Flash Newsletter - Edition 2021-05-03
Field Flash Newsletter - Edition 2021-06-07
Field Flash Newsletter - Edition 2021-07-06
Field Flash Newsletter - Edition 2021-08-02
Field Update Tickers
GitLab Monthly Release Email to Sales
Highspot at GitLab
Field Manager Development Program
Field Operations
Business Operations - Salesforce Reference
Career Development at GitLab & RSOE
Customer Success Monthly Metrics Dashboard
Customer Success Operations
CS Rep Account and Oppty Assignment Processes
Customer Programs
All-Customer CSAT Survey (CS)
Available Customer Programs
Customer Contact Role Tagging for Personalized Communications
Customer Newsletter
Customer Programs Content & Style Guide
Customer Satisfaction Surveys
Getting Help from Digital Customer Success Programs
Gainsight Administration
Gainsight User Administration
Gainsight: Go-To-Market Technical Documentation
Rattle Configuration and Maintenance
Renewals Operations Team
Customer Success Strategy & Analytics
Data Intelligence
Data Governance
Ecosystem Operations
GitLab Sales FAQ - Selling with Partners
Partner FAQ - Selling with GitLab
Enterprise Applications - CRM Team
Dataloader Installation, Deletion, and Upgrade Instructions at GitLab
Dynamic Quote Templates
Go-To-Market Integrated Environments
Go-To-Market Technical Documentation
Booking Metric Technical Documentation
Incent Technical Documentation
License Utilization Salesforce App
Salesforce Config
Salesforce Tech Stack Guide
Field Enablement
Executive Sponsorship Program
Field Team Recognition Programs
Go-to-Market (GTM) Enablement motion
Sales Manager Best Practices
Go to Market
Go to Market Rules of Engagement
Growth Resources
Requesting Internal Support in Salesforce
Sales Operations
Deal Desk & Order Management KPI - Results
Deal Desk Handbook
LinkedIn Sales Insights
Order Management Handbook
PO Acceptance Criteria
Sales Operations Go To Market
Learn How to Use Chorus.ai
Sales Operations Owned Provisioning
Sales Order Processing
Sales Strategy and Analytics Handbook
FY22 Field Planning
Sales Headcount
Sales Strategy Projects
Spekit for Operations/Process/Tools Updates
Field Team Meetings
GitLab Field QBRs
High Velocity Sales and First Orders Team at GitLab
HVS-FO Data and Ops Team at GitLab
Idea to Production Demo
Set up your own test OpenShift Origin instance for the Idea to Production Demo
Inside Sales Department
Interview with an IT Agility Director
Manager Operating Rhythm
Channel Sales Manager Operating Rhythm
Commercial Sales Manager Operating Rhythm
Enterprise Area Sales Manager Handbook
SMB Area Sales Manager Operating Rhythm
MEDDPPICC
Negotiate to Close
President's Club
Public Sector
READMEs
Francis Potter - Senior Pro Services Engineer
Noah Ing's README
Tim Poffenbarger's README
Sales Discovery and Qualification Questions
Sales Forecasting
Sales Operating Procedures
Deal Closure
Engage & Educate the Customer
Facilitate The Opportunity
Retain and Expand
Sales Order Processing
Sales Processes
GitLab Version Check
Sales Process > Account Management
Sales Prospecting
Sales Quick Start
Graduating from Sales Onboarding
Sales & Customer Success Quick Start Learning Path
Sales & Customer Success Onboarding Process
Sales Quick Start (SQS) Learning Objectives
Sales Quick Start (SQS) Workshop
Targeted Sales & Customer Success Roles for Sales Quick Start (SQS)
Sales Renewals Process Guide
Sales Revenue Programs
Sales Term Glossary
ARR in Practice
Sales Territories
LATAM Region Handbook
Sales Territories - Deprecating
Sales Training
Additional Resources for Sales Training
Field Accreditation Program
Field Accreditation: Customer Success Managers
Field Accreditation: Solutions Architects
Field Accreditation: Strategic Account Leaders
Field Enablement Spotlight: Continuous Education at GitLab
Enablement
Collaborating with Community Programs
Field Functional Competencies
Product Certification for GitLab Field Team Members
Sales Kickoff
Sales Kickoff 2020
Sales Kickoff 2021
Sales Kickoff 2022
Sales Kickoff 2023
Sales Kickoff Planning
Social Selling
Technical Questions for Sales
Technical Skills Exchange
Territory Planning
The Customer-Ready Shadow Program
Tips for Selling GitLab or Partner Professional Services
Total Addressable Market
Understanding How Our Customers Use GitLab
Using Gainsight at GitLab
Using Gainsight within Sales
- Account Planning
Coaching Account Planning for ASMs
- Coaching Account Planning for ASMs
- Associating emails to Salesforce
- Best Practices for Building Value with Customers
- Command of the Message
Command Plan
Demystifying the Metrics Conversation
Opportunity Consults
Proof Points
- Command Plan
- Demystifying the Metrics Conversation
- Opportunity Consults
- Proof Points
- Commercial Sales
Commercial Sales Enablement
Guide to the Required 7
Commercial Sales Opportunity Stages
High Velocity Sales and First Orders - Feedback Collection and Best Practices
High Velocity Sales and First Orders (formerly Global Digital SMB)
Renewals FAQ
- Commercial Sales Enablement
Guide to the Required 7
- Guide to the Required 7
- Commercial Sales Opportunity Stages
- High Velocity Sales and First Orders - Feedback Collection and Best Practices
- High Velocity Sales and First Orders (formerly Global Digital SMB)
- Renewals FAQ
- Commissions
- Communicating with the Field
Field-FYI Slack Channel
- Field-FYI Slack Channel
- CRO Career Development Day
- Customer & Partner Fireside Chat
- Enterprise Sales
Effective Discovery
- Effective Discovery
- FAQ from prospects
- Field Communications
Field Alerts
Field Flash Newsletter
Field Flash Newsletter - Edition 2020-04-02
Field Flash Newsletter - Edition 2020-05-05
Field Flash Newsletter - Edition 2020-06-05
Field Flash Newsletter - Edition 2020-07-07
Field Flash Newsletter - Edition 2020-08-06
Field Flash Newsletter - Edition 2020-09-01
Field Flash Newsletter - Edition 2020-10-08
Field Flash Newsletter - Edition 2020-11-02
Field Flash Newsletter - Edition 2020-12-07
Field Flash Newsletter - Edition 2021-01-06
Field Flash Newsletter - Edition 2021-02-01
Field Flash Newsletter - Edition 2021-03-01
Field Flash Newsletter - Edition 2021-04-06
Field Flash Newsletter - Edition 2021-05-03
Field Flash Newsletter - Edition 2021-06-07
Field Flash Newsletter - Edition 2021-07-06
Field Flash Newsletter - Edition 2021-08-02
Field Update Tickers
GitLab Monthly Release Email to Sales
Highspot at GitLab
- Field Alerts
- Field Flash Newsletter
Field Flash Newsletter - Edition 2020-04-02
Field Flash Newsletter - Edition 2020-05-05
Field Flash Newsletter - Edition 2020-06-05
Field Flash Newsletter - Edition 2020-07-07
Field Flash Newsletter - Edition 2020-08-06
Field Flash Newsletter - Edition 2020-09-01
Field Flash Newsletter - Edition 2020-10-08
Field Flash Newsletter - Edition 2020-11-02
Field Flash Newsletter - Edition 2020-12-07
Field Flash Newsletter - Edition 2021-01-06
Field Flash Newsletter - Edition 2021-02-01
Field Flash Newsletter - Edition 2021-03-01
Field Flash Newsletter - Edition 2021-04-06
Field Flash Newsletter - Edition 2021-05-03
Field Flash Newsletter - Edition 2021-06-07
Field Flash Newsletter - Edition 2021-07-06
Field Flash Newsletter - Edition 2021-08-02
- Field Flash Newsletter - Edition 2020-04-02
- Field Flash Newsletter - Edition 2020-05-05
- Field Flash Newsletter - Edition 2020-06-05
- Field Flash Newsletter - Edition 2020-07-07
- Field Flash Newsletter - Edition 2020-08-06
- Field Flash Newsletter - Edition 2020-09-01
- Field Flash Newsletter - Edition 2020-10-08
- Field Flash Newsletter - Edition 2020-11-02
- Field Flash Newsletter - Edition 2020-12-07
- Field Flash Newsletter - Edition 2021-01-06
- Field Flash Newsletter - Edition 2021-02-01
- Field Flash Newsletter - Edition 2021-03-01
- Field Flash Newsletter - Edition 2021-04-06
- Field Flash Newsletter - Edition 2021-05-03
- Field Flash Newsletter - Edition 2021-06-07
- Field Flash Newsletter - Edition 2021-07-06
- Field Flash Newsletter - Edition 2021-08-02
- Field Update Tickers
- GitLab Monthly Release Email to Sales
- Highspot at GitLab
- Field Manager Development Program
- Field Operations
Business Operations - Salesforce Reference
Career Development at GitLab & RSOE
Customer Success Monthly Metrics Dashboard
Customer Success Operations
CS Rep Account and Oppty Assignment Processes
Customer Programs
All-Customer CSAT Survey (CS)
Available Customer Programs
Customer Contact Role Tagging for Personalized Communications
Customer Newsletter
Customer Programs Content & Style Guide
Customer Satisfaction Surveys
Getting Help from Digital Customer Success Programs
Gainsight Administration
Gainsight User Administration
Gainsight: Go-To-Market Technical Documentation
Rattle Configuration and Maintenance
Renewals Operations Team
Customer Success Strategy & Analytics
Data Intelligence
Data Governance
Ecosystem Operations
GitLab Sales FAQ - Selling with Partners
Partner FAQ - Selling with GitLab
Enterprise Applications - CRM Team
Dataloader Installation, Deletion, and Upgrade Instructions at GitLab
Dynamic Quote Templates
Go-To-Market Integrated Environments
Go-To-Market Technical Documentation
Booking Metric Technical Documentation
Incent Technical Documentation
License Utilization Salesforce App
Salesforce Config
Salesforce Tech Stack Guide
Field Enablement
Executive Sponsorship Program
Field Team Recognition Programs
Go-to-Market (GTM) Enablement motion
Sales Manager Best Practices
Go to Market
Go to Market Rules of Engagement
Growth Resources
Requesting Internal Support in Salesforce
Sales Operations
Deal Desk & Order Management KPI - Results
Deal Desk Handbook
LinkedIn Sales Insights
Order Management Handbook
PO Acceptance Criteria
Sales Operations Go To Market
Learn How to Use Chorus.ai
Sales Operations Owned Provisioning
Sales Order Processing
Sales Strategy and Analytics Handbook
FY22 Field Planning
Sales Headcount
Sales Strategy Projects
Spekit for Operations/Process/Tools Updates
- Business Operations - Salesforce Reference
- Career Development at GitLab & RSOE
- Customer Success Monthly Metrics Dashboard
- Customer Success Operations
CS Rep Account and Oppty Assignment Processes
Customer Programs
All-Customer CSAT Survey (CS)
Available Customer Programs
Customer Contact Role Tagging for Personalized Communications
Customer Newsletter
Customer Programs Content & Style Guide
Customer Satisfaction Surveys
Getting Help from Digital Customer Success Programs
Gainsight Administration
Gainsight User Administration
Gainsight: Go-To-Market Technical Documentation
Rattle Configuration and Maintenance
Renewals Operations Team
- CS Rep Account and Oppty Assignment Processes
- Customer Programs
All-Customer CSAT Survey (CS)
Available Customer Programs
Customer Contact Role Tagging for Personalized Communications
Customer Newsletter
Customer Programs Content & Style Guide
Customer Satisfaction Surveys
Getting Help from Digital Customer Success Programs
- All-Customer CSAT Survey (CS)
- Available Customer Programs
- Customer Contact Role Tagging for Personalized Communications
- Customer Newsletter
- Customer Programs Content & Style Guide
- Customer Satisfaction Surveys
- Getting Help from Digital Customer Success Programs
- Gainsight Administration
Gainsight User Administration
Gainsight: Go-To-Market Technical Documentation
- Gainsight User Administration
- Gainsight: Go-To-Market Technical Documentation
- Rattle Configuration and Maintenance
- Renewals Operations Team
- Customer Success Strategy & Analytics
- Data Intelligence
Data Governance
- Data Governance
- Ecosystem Operations
GitLab Sales FAQ - Selling with Partners
Partner FAQ - Selling with GitLab
- GitLab Sales FAQ - Selling with Partners
- Partner FAQ - Selling with GitLab
- Enterprise Applications - CRM Team
Dataloader Installation, Deletion, and Upgrade Instructions at GitLab
Dynamic Quote Templates
Go-To-Market Integrated Environments
Go-To-Market Technical Documentation
Booking Metric Technical Documentation
Incent Technical Documentation
License Utilization Salesforce App
Salesforce Config
Salesforce Tech Stack Guide
- Dataloader Installation, Deletion, and Upgrade Instructions at GitLab
- Dynamic Quote Templates
- Go-To-Market Integrated Environments
- Go-To-Market Technical Documentation
Booking Metric Technical Documentation
Incent Technical Documentation
- Booking Metric Technical Documentation
- Incent Technical Documentation
- License Utilization Salesforce App
- Salesforce Config
- Salesforce Tech Stack Guide
- Field Enablement
Executive Sponsorship Program
Field Team Recognition Programs
Go-to-Market (GTM) Enablement motion
Sales Manager Best Practices
- Executive Sponsorship Program
- Field Team Recognition Programs
- Go-to-Market (GTM) Enablement motion
- Sales Manager Best Practices
- Go to Market
Go to Market Rules of Engagement
- Go to Market Rules of Engagement
- Growth Resources
- Requesting Internal Support in Salesforce
- Sales Operations
Deal Desk & Order Management KPI - Results
Deal Desk Handbook
LinkedIn Sales Insights
Order Management Handbook
PO Acceptance Criteria
Sales Operations Go To Market
Learn How to Use Chorus.ai
Sales Operations Owned Provisioning
- Deal Desk & Order Management KPI - Results
- Deal Desk Handbook
- LinkedIn Sales Insights
- Order Management Handbook
- PO Acceptance Criteria
- Sales Operations Go To Market
Learn How to Use Chorus.ai
- Learn How to Use Chorus.ai
- Sales Operations Owned Provisioning
- Sales Order Processing
- Sales Strategy and Analytics Handbook
FY22 Field Planning
Sales Headcount
Sales Strategy Projects
- FY22 Field Planning
- Sales Headcount
- Sales Strategy Projects
- Spekit for Operations/Process/Tools Updates
- Field Team Meetings
- GitLab Field QBRs
- High Velocity Sales and First Orders Team at GitLab
HVS-FO Data and Ops Team at GitLab
- HVS-FO Data and Ops Team at GitLab
- Idea to Production Demo
Set up your own test OpenShift Origin instance for the Idea to Production Demo
- Set up your own test OpenShift Origin instance for the Idea to Production Demo
- Inside Sales Department
- Interview with an IT Agility Director
- Manager Operating Rhythm
Channel Sales Manager Operating Rhythm
Commercial Sales Manager Operating Rhythm
Enterprise Area Sales Manager Handbook
SMB Area Sales Manager Operating Rhythm
- Channel Sales Manager Operating Rhythm
- Commercial Sales Manager Operating Rhythm
- Enterprise Area Sales Manager Handbook
- SMB Area Sales Manager Operating Rhythm
- MEDDPPICC
- Negotiate to Close
- President's Club
- Public Sector
- READMEs
Francis Potter - Senior Pro Services Engineer
Noah Ing's README
Tim Poffenbarger's README
- Francis Potter - Senior Pro Services Engineer
- Noah Ing's README
- Tim Poffenbarger's README
- Sales Discovery and Qualification Questions
- Sales Forecasting
- Sales Operating Procedures
Deal Closure
Engage & Educate the Customer
Facilitate The Opportunity
Retain and Expand
- Deal Closure
- Engage & Educate the Customer
- Facilitate The Opportunity
- Retain and Expand
- Sales Order Processing
- Sales Processes
GitLab Version Check
Sales Process > Account Management
- GitLab Version Check
- Sales Process > Account Management
- Sales Prospecting
- Sales Quick Start
Graduating from Sales Onboarding
Sales & Customer Success Quick Start Learning Path
Sales & Customer Success Onboarding Process
Sales Quick Start (SQS) Learning Objectives
Sales Quick Start (SQS) Workshop
Targeted Sales & Customer Success Roles for Sales Quick Start (SQS)
- Graduating from Sales Onboarding
- Sales & Customer Success Quick Start Learning Path
Sales & Customer Success Onboarding Process
- Sales & Customer Success Onboarding Process
- Sales Quick Start (SQS) Learning Objectives
- Sales Quick Start (SQS) Workshop
- Targeted Sales & Customer Success Roles for Sales Quick Start (SQS)
- Sales Renewals Process Guide
- Sales Revenue Programs
- Sales Term Glossary
ARR in Practice
- ARR in Practice
- Sales Territories
LATAM Region Handbook
Sales Territories - Deprecating
- LATAM Region Handbook
- Sales Territories - Deprecating
- Sales Training
Additional Resources for Sales Training
Field Accreditation Program
Field Accreditation: Customer Success Managers
Field Accreditation: Solutions Architects
Field Accreditation: Strategic Account Leaders
Field Enablement Spotlight: Continuous Education at GitLab
Enablement
Collaborating with Community Programs
Field Functional Competencies
Product Certification for GitLab Field Team Members
Sales Kickoff
Sales Kickoff 2020
Sales Kickoff 2021
Sales Kickoff 2022
Sales Kickoff 2023
Sales Kickoff Planning
Social Selling
Technical Questions for Sales
Technical Skills Exchange
- Additional Resources for Sales Training
- Field Accreditation Program
Field Accreditation: Customer Success Managers
Field Accreditation: Solutions Architects
Field Accreditation: Strategic Account Leaders
- Field Accreditation: Customer Success Managers
- Field Accreditation: Solutions Architects
- Field Accreditation: Strategic Account Leaders
- Field Enablement Spotlight: Continuous Education at GitLab
Enablement
Collaborating with Community Programs
- Enablement
Collaborating with Community Programs
- Collaborating with Community Programs
- Field Functional Competencies
- Product Certification for GitLab Field Team Members
- Sales Kickoff
Sales Kickoff 2020
Sales Kickoff 2021
Sales Kickoff 2022
Sales Kickoff 2023
Sales Kickoff Planning
- Sales Kickoff 2020
- Sales Kickoff 2021
- Sales Kickoff 2022
- Sales Kickoff 2023
- Sales Kickoff Planning
- Social Selling
- Technical Questions for Sales
- Technical Skills Exchange
- Territory Planning
- The Customer-Ready Shadow Program
- Tips for Selling GitLab or Partner Professional Services
- Total Addressable Market
- Understanding How Our Customers Use GitLab
- Using Gainsight at GitLab
Using Gainsight within Sales
- Using Gainsight within Sales
- Security at GitLab
Access Management Policy
Change Management Policy
Contributing to GitLab the Product as a Security Team Member
Controlled Document Procedure
Corporate Security (CorpSec)
Automation
CorpSec Helpdesk Slack Issue Automation
Google Workspace Deprovisioning
Corporate Security (CorpSec) Support
Corporate Security Onboarding 101 Guide
Corporate Security USB Device Encryption Guide
CorpSec Direction
CorpSec Engineering
CorpSec Device Trust Engineering
CorpSec Identity Engineering
CorpSec Infrastructure Engineering
CorpSec Platform Engineering
CorpSec SaaS Engineering
CorpSec Services
2FA and Password Account Resets for Team Members
Access Requests (AR) Services
Access Requests FAQ
CorpSec Change Management
CorpSec Helpdesk
CorpSec Infrastructure Services
CorpSec Mobile Devices (Phones and Tablets) Services
CorpSec Offboarding Services
CorpSec Onboarding Services
CorpSec Role Change Services
Email Security Standards
External Collaborators (Customers, Partners, Vendors)
Identity Management Services
Laptops and Logistics
Laptop Asset Management
Laptop Buyback
Laptop Donations
Laptop Hardware Models and Specs
Laptop Operating Systems
Laptop Procurement for New Team Members
Laptop Procurement Processes
Laptop Recycling and Refurbishing
Laptop Refresh Age Replacement
Laptop Repairs and Replacements
Laptop Security Configuration Standards
Apple ID for Work
Laptop Backups
Laptop Disk Encryption
Laptop Firewalls
Laptop Hostnames and Usernames
Laptop iCloud Drive
Laptop Passwords
Laptop Personal Use
Laptop Remote Management and Monitoring
Laptop Software Updates
Laptop Touch ID Biometrics
Laptop Web Browsers
Laptop Wireless Networks
Locking Laptop When Unattended
Laptop Software Configuration Standards
Laptop Wipe (Factory Reset) Process
Service Accounts
Temporary Service Provider Services (Contractor Users)
CorpSec Systems and Tech Stack
1Password
1Password Groups
1Password Passkey Guide
1Password Setup Guide
1Password Vaults
Access Check (accesschk)
Access Control (access.gitlab.systems)
Amazon Web Services (AWS)
AWS Billing
AWS Dedicated Dev Organization
AWS Dedicated Dev Accounts
AWS Dedicated Prod Organization
AWS Marketplace Organization
AWS Red Ops Organization
AWS Sandbox Organization
AWS Sandbox Accounts
AWS Services Organization
AWS Services Accounts
Amazon Workspaces (VDI)
AWS Services User Management
AWS Systems Organization
Apple macOS
Apple macOS Setup Guide
Azure
Backblaze
Demo Systems
GitLab Product Administration for Internal Team Members and Temporary Service Providers
Corporate Systems GitOps Configuration Management (cfg.gitlab.systems)
GitLab Product Development Instance (dev.gitlab.org)
GitLab SaaS Staging for Internal Team Members (staging.gitlab.com)
GitLab Sales Demo Instance (cs.gitlabdemo.cloud)
GitLab Self Managed Deployments for Team Members
GitLab Self Managed Internal Licenses for Team Members
GitLab.com SaaS for Internal Team Members and Temporary Service Providers
GitLab.com SaaS Internal Groups for Team Members and Temporary Service Providers
GitLab.com SaaS Internal Licenses for Team Members and Temporary Service Providers
GitLab.com SaaS Projects for Team Members and Temporary Service Providers
GitLab.com SaaS Top-Level Namespace Groups for Internal Company Use Cases
GitLab.com SaaS User Setup for Team Members and Temporary Service Providers
Product Production GitOps Configuration Management (ops.gitlab.net)
Google
Google Calendar
Google Calendar Delegation Guide
Google Calendar Setup Guide
Google Chrome
Google Cloud Platform (GCP)
Google Cloud (GCP) Organization (cells-dev / gitlab-cells.dev)
Google Cloud (GCP) Organization (cells-dev / gitlab-cells.dev) Projects
Google Cloud (GCP) Organization (cells-prd / gitlab-cells.com)
Google Cloud (GCP) Organization (dedicated-dev / gitlab-private.org)
Google Cloud (GCP) Dedicated Dev Projects
Google Cloud (GCP) Organization (dedicated-prd / gitlab-dedicated.com)
Google Cloud (GCP) Organization (gitlab.com)
Google Cloud (GCP) Organization (gitlab.com) Projects
Google Cloud (GCP) Organization (gitlab.com) User Management
Google Cloud (GCP) Organization (sandbox / gitlabsandbox.cloud)
Google Cloud (GCP) Sandbox Projects
Google Cloud (GCP) Organization (sys / gitlab.systems)
Google Cloud Billing
Google Docs and Drive
Google Docs and Drive Access Request Guide
Google Docs and Drive External Sharing Guide
Google Docs and Drive Internal Sharing Guide
Google Groups
Google Mail (Gmail)
Google Mail (Gmail) Setup Guide
Google Mail (Gmail) User Delegation Guide
Google Mail (Gmail) Verification Guide
Google User Accounts
Google User Account Setup Guide
Google Workspace (Organization)
Google Workspace Apps
HackyStack (Sandbox Cloud)
Jamf MDM
Jamf MDM Policies
Jamf MDM Setup Guide
Laptop VPN for Public Networks and System Administration
NordLayer VPN Setup Guide
NordLayer VPN Troubleshooting Guide
Linux Desktop OS
Linux Desktop OS Security Standards
Linux Desktop OS Setup Guide
Lumos
Lumos Access Request Guide
Lumos Access Reviews Guide
Microsoft Windows
Nira (Google Drive Security) User Guide
Okta Workforce Identity and SSO
Okta Access Request Guide
Okta Applications
Okta Application Setup Guide
Okta Groups
Okta Group Members Management Guide
Okta Group Nomenclature
Okta Groups Rules
Okta Group Rule Nomenclature
Okta Organization and Policies
Okta User SSO
Okta SSO User Setup Guide
Okta User Android Setup Guide
Okta User FAQ
Okta User iPhone Face ID Setup
Okta User Linux Setup Guide
Okta User Lockout (Password or 2FA) Guide
Okta User macOS Setup Guide
Okta User Passkey Setup Guide
Okta User Provisioning
Okta User SSO Guide (Touch ID 2FA Setup)
Okta YubiKey 2FA Guide
Okta Verify Device Trust
Okta Verify Device Trust Android Setup Guide
Okta Verify Device Trust iOS Setup Guide
Okta Verify Device Trust macOS Setup Guide
Okta Workflows
Flows
Google Workspace Deprovisioner
SentinelOne Endpoint Detection and Response (EDR)
SentinelOne EDR Setup Guide
SentinelOne EDR Troubleshooting Guide
Slack
Slack Apps
Slack Channels
Slack External Contributors (Users) Guide
Slack Groups
Slack User Setup Guide
Slack Webhooks Guide
Teleport
Training Systems
Yubikey User Guide
Yubikey Self-Service Purchasing Guide
Yubikey WebAuthn 2FA User Guide
YubiKey User Guide for Android Mobile Devices
YubiKey User Guide for Apple iOS Mobile Devices
YubiKey User Guide for GitLab.com User Accounts
YubiKey User Guide for Google
YubiKey User Guide for Okta
Zoom
Zoom Setup Guide
CorpSec Team Directory
How We Work (CorpSec)
Critical Projects
Customer Support Operations
Change Criticalities
Coding Standards
Division of Responsibilities
Documentation
Calendly
GitLab
Contact Management Projects
gl-support-bot
gl-support-bot-admin
Investigations
Issue boards
Labels
Personal Data Requests
Support Super Form
Support team YAML files
Pagerduty
Recommended Setup
Ruby Gems
Support Readiness
Salesforce
SKU Mapping
Slack
Notify Oncall
VBT Slackbot
Workflows
Support Super Form Processor
Sync repo files
System Checkers
System Criticality
Team member licenses
Zapier
Zendesk
Agents
API
Apps
Articles
Automations
CES Surveys
Dev Pulse
Dynamic content
Emails
End-users
Explore
Forms
Groups
Guide
Liquid language
Macros
Organization Deletion
Organization fields
Organizations
Roles
Round Robin
Sandbox
Schedules
Searching
SLAs
SSAT
Tags
Themes
Ticket Fields
Ticket Processor
Tickets
Triggers
User fields
Views
Webhooks
ZD-SFDC Sync
FAQs
Workflows
Annual Review
Audits
Change Maangement
Contact Management Projects
Contacting third parties
GitLab
Project setup
Support Super Form
Support Team YAML files
Working issues
Working merge requests
Handling Incidents
Pagerduty
Ruby gems
Salesforce workflows
Account merges
SKU Mapping
Token rotation
Working Personal Data Requests
Zapier
Zendesk
Agent Sync
API
Apps
Articles
Automations
CES Surveys
Dev Pulse
Dynamic content
End-users
Forms
Groups
Guide
Macros
Maintenance Tasks
Organization fields
Provisioning
Roles
Round robin
Schedules
Shared Organizations
SLAs
SSAT
Themes
Ticket fields
Ticket processor
Tickets
Triggers
US Government Support exceptions
User Association
User fields
Views
Webhooks
Working tickets
ZD-SFDC Sync
Engaging with Security
External Security Communications Procedure
GitLab Audit Logging Policy
GitLab Continuous Security Framework
GitLab CSF - Architecture activity
GitLab Cryptography Standard
GitLab Data Classification Standard
GitLab Password Guidelines
GitLab Password Standards
GitLab Projects Baseline Requirements
GitLab Security Logging Standards
GitLab Security Resource Center
GitLab Security Secure Coding Training
GitLab Token Management Standard
gitleaks on your laptop
Google Cloud Security Best Practices
Identity and Access Management v3
Identity Access Requests
Identity Approvals
Identity Architecture Boundaries
Identity Counterparts
Identity GitOps Architecture
AWS Configuration Management
GCP Configuration Management
Okta Configuration Management
Identity Infrastructure Management
Identity Kingdoms and Tech Stack
Identity Platform
Access Check (accesschk)
Identity Platform CI/CD Auditlog Pipeline
Identity Platform CI/CD Manifest Pipeline
Identity Platform CI/CD Provisioning Pipeline
Identity Platform GitLab Provisioning
Identity Platform Google Provisioning
Identity Platform Okta Provisioning
Identity User Guide - Audit and Compliance
Identity User Guide - Change Management
Identity User Guide - Developers
Identity User Guide - Identity Operations
Identity User Guide - Incident Response
Identity User Guide - Managers
Identity User Guide - Offboarding Operations
Identity User Guide - Onboarding Operations
Identity User Guide - Policy Management
Identity User Guide - Team Members
Identity User Guide - Tech Stack Applications
Individual Development Plan
Information Security and Artificial Intelligence Management System
Information System Contingency Plan (ISCP)
Isolating your work notebook from other devices in your home network
Penetration Testing Policy
PGP Process
Physical Security Standard for Company Assets
Product Security
Application Security
Application Security - Async Communication
Application Security - Automation and Monitoring
Application Security - Dogfooding and Product Feature Requests
Application Security Metrics
Application Security - Capacity Indicators, Classifications, and Workflows
Application Security Results Indicators
Application Security Risk Indicators
Application Security Review Process
Application Security Runbooks
Application Security Engineer Handling priority::1/severity::1 Issues
Application Security Engineer Working With SIRT
AppSec Engineer's Local Setup
AppSec Frequently Asked Questions
AppSec Holiday and Friends and Family Day Coverage
AppSec Review Template Process
AppSec Threat Modeling Process
AppSec's Engagement Plan and Ways to Measure Usage of Secure Code Warrior
Bug Hunting Day Process
CVSS Calculation
Dependency review guidelines for AppSec engineers
Federal AppSec Container Scan Result Review Process
General process for the application security team in patch releases
HackerOne Process
Handling unintended vulnerability disclosures
How to handle upstream security patches
Investigating Package Hunter Findings
JiHu Contribution Merge Monitor Reports
Security Dashboard Review
Triage Rotation
Verifying Security Fixes
Application Security Stable Counterparts
Application Vulnerability Management Procedure
GitLab Application Security Inventory
Milestone Planning
Reproducible Builds
Reproducible Vulnerabilities
Responding to customers security scanners review requests
Threat Modeling
Threat Modeling HowTo
Data Security
Infrastructure Security
InfraSec Issue Lifecycle
Infrastructure Security - Capacity Indicators and Workflows
Security Logging Overview
Critical Logging Tiering Methodology
Security Platforms & Architecture
Product Security Engineering
Metrics
Milestone Planning
Product Security Engineering Runbooks
HackerOne Tooling
Runway guidelines
Team Member Upskilling
Product Security Requirements
Product Security Risk Register
Well-Articulated Product Security Risks Guide
Security Architecture
Zero Trust
Security Interlock
Request Customer Zero Validation from Security
Security Research
Supply Chain Risk Management Strategy
Vulnerability Management
Closing Vulnerability Tracking Issues
Development Labels
Encryption Policy
Incident Response Guidance
Infrastructure Vulnerability Management Procedure
SLA exceptions
Vulnerability Lifecycle
Vulnerability Management - Standard Issue Labels
Vulnerability Management Automation
Vulnerability Management Code Review and Development Standard
Vulnerability Management Definition: What Does Fixed Mean?
Vulnerability Management Team
Vulnerability Management Team Runbooks
Fixing vulnerabilities
So, You've Got A Vulnerability
Weekly Triage
Vulnerability Resolution SLAs
What is a vulnerability?
Why should we fix vulnerabilities?
Providing assistance to GitLab.com customers during customer-based security incidents
Records Retention & Disposal
Responding to Ransomware
Root Cause Analysis for Critical Vulnerabilities
Security and Technology Policies Management
Security and Technology Policy Exception Process
Security Assurance
Automation and Compliance
Field Security Team
Annual Field Security Study
AnswerBase Quality Guide
Field Security Engagement in QBRs
Field Security Observation and OFI Quality Guide
Field Security Research Program
Field Security Sales Training Program
GitLab's Customer Assurance Activities
Independent Security Assurance
Knowledge Base
Request for Information Process
Security Evangelism
Trust Center Guide
Governance and Field Security Team Charter
Observation Management Procedure
Production Readiness: Compliance Assessment
Security Compliance Team
Access Review Procedure
Automated Evidence Collection and Control Testing
External Audits, Certifications, and Attestations
FedRAMP Vulnerability Deviation Request Procedure
Gap Analysis Program
GCF Security Control Lifecycle
GitLab FedRAMP Authorization Program
GitLab Security Compliance Controls
PCI Charter
PCI Internal Control Review Procedures
Policy-as-code
Risk-based Compliance at GitLab
Risk-based Control Testing
Security Content Automation Protocol (SCAP) Scanning
Software-Bill-of-Materials (SBOM) Maturity Model and Implementation Plan
Security Governance Program
Phishing Program
Security Assurance - Automations Library
Security Assurance Automation
Security Awareness Training Program
Security Awareness Training Standard
Security Training
Security Risk Team
Security Operational Risk Management (StORM) Program & Procedures
Business Impact Analysis
Critical System Tiering Methodology
Security Third Party Risk Management
SOX CUEC Mapping Procedure
Security Terms Glossary
Technical and Organizational Security Measures for GitLab Cloud Services
Technical Security Validation
Security Change Management Procedure
Security Culture Committee
Security Department Gearing Ratios
Security Department Learning & Development
Security Department Performance Indicators
Security Division Dogfooding Program
Security Division Ecosystem
Security Division Maturity Models
Security Internship
Security OKRs
Security Operations
Security Operations On-Call Guide
Red Team
How the Red Team Operates
Red Team Rules of Engagement
Opportunistic Attacks
Purple Teaming at GitLab
Atomic Testing
Red Team Stealth Operations
Security Incident Response Team - SIRT
Security Incident Response Guide
Security Incident Severity and Priority Matrix
Security Incident Communications Plan
Security Shadow: Security Operations
Engaging the Security Engineer On-Call
Security Logging Overview
Critical Logging Tiering Methodology
Signals Engineering Team (SET)
Threat Intelligence Team
Trust & Safety Team
Abuse on GitLab.com
Intellectual property on gitlab.com
Trust & Safety Team Frequently Asked Questions
Trust & Safety, Do It Yourself
Security Planning
Security Requirements for Development and Deployment
Security READMEs
Byron's README
Joseph Longo README
Josh Lemos - CISO
Julie Davila's README
Nick Malcolm's README
Philippe Lafoucri√®re README
Ty Dilbeck's README
Security Shadow Program
Security Shadow: Product Security
Security Shadow: Security Assurance
Security Threat Management
Identity Engineering Team
Software Development Lifecycle Policy
Software Development Lifecycle Standard
Supply Chain Security for Open Source Dependencies and Libraries
Transparency by Default
Women in Security
Working in Security
- Access Management Policy
- Change Management Policy
- Contributing to GitLab the Product as a Security Team Member
- Controlled Document Procedure
- Corporate Security (CorpSec)
Automation
CorpSec Helpdesk Slack Issue Automation
Google Workspace Deprovisioning
Corporate Security (CorpSec) Support
Corporate Security Onboarding 101 Guide
Corporate Security USB Device Encryption Guide
CorpSec Direction
CorpSec Engineering
CorpSec Device Trust Engineering
CorpSec Identity Engineering
CorpSec Infrastructure Engineering
CorpSec Platform Engineering
CorpSec SaaS Engineering
CorpSec Services
2FA and Password Account Resets for Team Members
Access Requests (AR) Services
Access Requests FAQ
CorpSec Change Management
CorpSec Helpdesk
CorpSec Infrastructure Services
CorpSec Mobile Devices (Phones and Tablets) Services
CorpSec Offboarding Services
CorpSec Onboarding Services
CorpSec Role Change Services
Email Security Standards
External Collaborators (Customers, Partners, Vendors)
Identity Management Services
Laptops and Logistics
Laptop Asset Management
Laptop Buyback
Laptop Donations
Laptop Hardware Models and Specs
Laptop Operating Systems
Laptop Procurement for New Team Members
Laptop Procurement Processes
Laptop Recycling and Refurbishing
Laptop Refresh Age Replacement
Laptop Repairs and Replacements
Laptop Security Configuration Standards
Apple ID for Work
Laptop Backups
Laptop Disk Encryption
Laptop Firewalls
Laptop Hostnames and Usernames
Laptop iCloud Drive
Laptop Passwords
Laptop Personal Use
Laptop Remote Management and Monitoring
Laptop Software Updates
Laptop Touch ID Biometrics
Laptop Web Browsers
Laptop Wireless Networks
Locking Laptop When Unattended
Laptop Software Configuration Standards
Laptop Wipe (Factory Reset) Process
Service Accounts
Temporary Service Provider Services (Contractor Users)
CorpSec Systems and Tech Stack
1Password
1Password Groups
1Password Passkey Guide
1Password Setup Guide
1Password Vaults
Access Check (accesschk)
Access Control (access.gitlab.systems)
Amazon Web Services (AWS)
AWS Billing
AWS Dedicated Dev Organization
AWS Dedicated Dev Accounts
AWS Dedicated Prod Organization
AWS Marketplace Organization
AWS Red Ops Organization
AWS Sandbox Organization
AWS Sandbox Accounts
AWS Services Organization
AWS Services Accounts
Amazon Workspaces (VDI)
AWS Services User Management
AWS Systems Organization
Apple macOS
Apple macOS Setup Guide
Azure
Backblaze
Demo Systems
GitLab Product Administration for Internal Team Members and Temporary Service Providers
Corporate Systems GitOps Configuration Management (cfg.gitlab.systems)
GitLab Product Development Instance (dev.gitlab.org)
GitLab SaaS Staging for Internal Team Members (staging.gitlab.com)
GitLab Sales Demo Instance (cs.gitlabdemo.cloud)
GitLab Self Managed Deployments for Team Members
GitLab Self Managed Internal Licenses for Team Members
GitLab.com SaaS for Internal Team Members and Temporary Service Providers
GitLab.com SaaS Internal Groups for Team Members and Temporary Service Providers
GitLab.com SaaS Internal Licenses for Team Members and Temporary Service Providers
GitLab.com SaaS Projects for Team Members and Temporary Service Providers
GitLab.com SaaS Top-Level Namespace Groups for Internal Company Use Cases
GitLab.com SaaS User Setup for Team Members and Temporary Service Providers
Product Production GitOps Configuration Management (ops.gitlab.net)
Google
Google Calendar
Google Calendar Delegation Guide
Google Calendar Setup Guide
Google Chrome
Google Cloud Platform (GCP)
Google Cloud (GCP) Organization (cells-dev / gitlab-cells.dev)
Google Cloud (GCP) Organization (cells-dev / gitlab-cells.dev) Projects
Google Cloud (GCP) Organization (cells-prd / gitlab-cells.com)
Google Cloud (GCP) Organization (dedicated-dev / gitlab-private.org)
Google Cloud (GCP) Dedicated Dev Projects
Google Cloud (GCP) Organization (dedicated-prd / gitlab-dedicated.com)
Google Cloud (GCP) Organization (gitlab.com)
Google Cloud (GCP) Organization (gitlab.com) Projects
Google Cloud (GCP) Organization (gitlab.com) User Management
Google Cloud (GCP) Organization (sandbox / gitlabsandbox.cloud)
Google Cloud (GCP) Sandbox Projects
Google Cloud (GCP) Organization (sys / gitlab.systems)
Google Cloud Billing
Google Docs and Drive
Google Docs and Drive Access Request Guide
Google Docs and Drive External Sharing Guide
Google Docs and Drive Internal Sharing Guide
Google Groups
Google Mail (Gmail)
Google Mail (Gmail) Setup Guide
Google Mail (Gmail) User Delegation Guide
Google Mail (Gmail) Verification Guide
Google User Accounts
Google User Account Setup Guide
Google Workspace (Organization)
Google Workspace Apps
HackyStack (Sandbox Cloud)
Jamf MDM
Jamf MDM Policies
Jamf MDM Setup Guide
Laptop VPN for Public Networks and System Administration
NordLayer VPN Setup Guide
NordLayer VPN Troubleshooting Guide
Linux Desktop OS
Linux Desktop OS Security Standards
Linux Desktop OS Setup Guide
Lumos
Lumos Access Request Guide
Lumos Access Reviews Guide
Microsoft Windows
Nira (Google Drive Security) User Guide
Okta Workforce Identity and SSO
Okta Access Request Guide
Okta Applications
Okta Application Setup Guide
Okta Groups
Okta Group Members Management Guide
Okta Group Nomenclature
Okta Groups Rules
Okta Group Rule Nomenclature
Okta Organization and Policies
Okta User SSO
Okta SSO User Setup Guide
Okta User Android Setup Guide
Okta User FAQ
Okta User iPhone Face ID Setup
Okta User Linux Setup Guide
Okta User Lockout (Password or 2FA) Guide
Okta User macOS Setup Guide
Okta User Passkey Setup Guide
Okta User Provisioning
Okta User SSO Guide (Touch ID 2FA Setup)
Okta YubiKey 2FA Guide
Okta Verify Device Trust
Okta Verify Device Trust Android Setup Guide
Okta Verify Device Trust iOS Setup Guide
Okta Verify Device Trust macOS Setup Guide
Okta Workflows
Flows
Google Workspace Deprovisioner
SentinelOne Endpoint Detection and Response (EDR)
SentinelOne EDR Setup Guide
SentinelOne EDR Troubleshooting Guide
Slack
Slack Apps
Slack Channels
Slack External Contributors (Users) Guide
Slack Groups
Slack User Setup Guide
Slack Webhooks Guide
Teleport
Training Systems
Yubikey User Guide
Yubikey Self-Service Purchasing Guide
Yubikey WebAuthn 2FA User Guide
YubiKey User Guide for Android Mobile Devices
YubiKey User Guide for Apple iOS Mobile Devices
YubiKey User Guide for GitLab.com User Accounts
YubiKey User Guide for Google
YubiKey User Guide for Okta
Zoom
Zoom Setup Guide
CorpSec Team Directory
How We Work (CorpSec)
- Automation
CorpSec Helpdesk Slack Issue Automation
Google Workspace Deprovisioning
- CorpSec Helpdesk Slack Issue Automation
- Google Workspace Deprovisioning
- Corporate Security (CorpSec) Support
Corporate Security Onboarding 101 Guide
Corporate Security USB Device Encryption Guide
- Corporate Security Onboarding 101 Guide
- Corporate Security USB Device Encryption Guide
- CorpSec Direction
- CorpSec Engineering
Demo Systems Tutorials
Getting Started Tutorials
Configuring GitLab with group-level Kubernetes cluster
Integration Tutorials
Create a Jenkins Pipeline
Environments
Training Cloud Omnibus-as-a-Service
Infrastructure
Demo Systems Infrastructure - Kubernetes
Demo Systems Infrastructure - Networking
- Demo Systems Onboarding
- Demo Systems Tutorials
Getting Started Tutorials
Configuring GitLab with group-level Kubernetes cluster
Integration Tutorials
Create a Jenkins Pipeline
- Getting Started Tutorials
Configuring GitLab with group-level Kubernetes cluster
- Configuring GitLab with group-level Kubernetes cluster
- Integration Tutorials
Create a Jenkins Pipeline
- Create a Jenkins Pipeline
- Environments
Training Cloud Omnibus-as-a-Service
- Training Cloud Omnibus-as-a-Service
- Infrastructure
Demo Systems Infrastructure - Kubernetes
Demo Systems Infrastructure - Networking
- Demo Systems Infrastructure - Kubernetes
- Demo Systems Infrastructure - Networking
- Educational Services
GitLab Education Services Support Handbook
Tech Stack
Articulate 360 Tech Stack Guide
Credly Tech Stack Guide
Instruqt Tech Stack Guide
- GitLab Education Services Support Handbook
- Tech Stack
Articulate 360 Tech Stack Guide
Credly Tech Stack Guide
Instruqt Tech Stack Guide
- Articulate 360 Tech Stack Guide
- Credly Tech Stack Guide
- Instruqt Tech Stack Guide
- GitLab Product Training for Customer Success
- GitLab Quick Start for New GitLab.com Customers
- Initiatives
Communities of Practice
- Communities of Practice
- Partners
Partner Capabilities Journey
- Partner Capabilities Journey
- Product Usage Reporting Vision
Freemium SaaS Usage Data
Gainsight: Using Gainsight Statistics in SFDC
GitLab Usage Statistics
Health Scoring - Calculations and Methodology
How to Use Product Usage Reporting
Platform Adoption Scoring
Product usage playbooks with usage metrics
Use Case Adoption Scoring
- Freemium SaaS Usage Data
- Gainsight: Using Gainsight Statistics in SFDC
- GitLab Usage Statistics
- Health Scoring - Calculations and Methodology
- How to Use Product Usage Reporting
- Platform Adoption Scoring
- Product usage playbooks with usage metrics
- Use Case Adoption Scoring
- Professional Services Team Handbook
Delivery Checklists
Developing Software for Professional Services
GitLab Certified Migration Services Engineer
GitLab Certified Trainer Program
GitLab Professional Education Services
GitLab Agile Portfolio Management - Hands-On Lab Overview
GitLab Agile Portfolio Management - Hands-On Lab: Access The GitLab Training Environment
GitLab Agile Portfolio Management - Hands-On Lab: Create an Organizational Structure in GitLab
GitLab Agile Portfolio Management - Hands-On Lab: Create And Customize Issue Boards
GitLab Agile Portfolio Management - Hands-On Lab: Create And Manage A Kanban Board
GitLab Agile Portfolio Management - Hands-On Lab: Create And Manage A Scrum Board
GitLab Agile Portfolio Management - Hands-On Lab: Create And Manage A Waterfall Board
GitLab Agile Portfolio Management - Hands-On Lab: Organize and Manage Issues
GitLab Agile Portfolio Management - Hands-On Lab: Use GitLab Planning Tools
GitLab Agile Portfolio Management- Hands-On Lab: Create Issues
GitLab Agile Portfolio Management- Hands-On Lab: Use A Merge Request To Review And Merge Code
GitLab CI/CD - Hands-On Lab Overview
GitLab CI/CD - Hands-On Lab: Code Quality Scanning
GitLab CI/CD - Hands-On Lab: Create A Basic CI Configuration
GitLab CI/CD - Hands-On Lab: Defining Stages, Jobs, and Runners
GitLab CI/CD - Hands-On Lab: Display Pipeline Info
GitLab CI/CD - Hands-On Lab: Job Policy Patterns
GitLab CI/CD - Hands-On Lab: Security Scanning
GitLab CI/CD - Hands-On Lab: Understanding the Basics of Pipelines
GitLab CI/CD - Hands-On Lab: Using Artifacts
GitLab CI/CD - Hands-On Lab: Variable Hierarchy
GitLab CI/CD - Hands-On Lab: Working with the GitLab Container Registry
GitLab Duo Principles - Hands-On Lab Overview
GitLab Duo Principles - Hands-On Lab: Code Generation with GitLab Duo Chat
GitLab Duo Principles - Hands-On Lab: Getting Started with GitLab Duo
GitLab Duo Principles - Hands-On Lab: Using GitLab Duo to Write New Code
GitLab Duo Principles - Hands-On Lab: Working with Issues and Merge Requests
GitLab Duo Principles - Hands-On Lab: Working with Security Vulnerabilities
GitLab Professional Education Services ILT Labs
GitLab Advanced CI/CD - Hands-On Lab Overview
GitLab Advanced CI/CD - Hands-On Lab: Configurations for Complex Processes
GitLab Advanced CI/CD - Hands-On Lab: Deployment Strategies
GitLab Advanced CI/CD - Hands-On Lab: GitLab Runners Deep Dive
GitLab Advanced CI/CD - Hands-On Lab: Optimizing Build Pipelines
GitLab Advanced CI/CD - Hands-On Lab: Optimizing Pipeline Testing
GitLab Advanced CI/CD - Hands-On Lab: Review Apps
GitLab Advanced CI/CD - Hands-On Lab: Reviewing Best Practices
GitLab Agile Portfolio Management - Hands-On Lab Overview
GitLab Agile Portfolio Management - Hands-On Lab: Access The GitLab Training Environment
GitLab Agile Portfolio Management - Hands-On Lab: Create an Organizational Structure in GitLab
GitLab Agile Portfolio Management - Hands-On Lab: Create And Customize Issue Boards
GitLab Agile Portfolio Management - Hands-On Lab: Create And Manage A Kanban Board
GitLab Agile Portfolio Management - Hands-On Lab: Create And Manage A Scrum Board
GitLab Agile Portfolio Management - Hands-On Lab: Create And Manage A Waterfall Board
GitLab Agile Portfolio Management - Hands-On Lab: Organize and Manage Issues
GitLab Agile Portfolio Management - Hands-On Lab: Use GitLab Planning Tools
GitLab Agile Portfolio Management- Hands-On Lab: Create Issues
GitLab Agile Portfolio Management- Hands-On Lab: Use A Merge Request To Review And Merge Code
GitLab CI/CD - Hands-On Lab Overview
GitLab CI/CD - Hands-On Lab: Configure a Pipeline to Build an Application
GitLab CI/CD - Hands-On Lab: Configuring Pipeline Testing
GitLab CI/CD - Hands-On Lab: Deploying Applications
GitLab CI/CD - Hands-On Lab: Investigating Broken Pipelines
GitLab CI/CD - Hands-On Lab: Rules and Merging Changes
GitLab CI/CD - Hands-On Lab: Working with CI/CD Components
GitLab Compliance - Compliance Center and Frameworks
GitLab Compliance - Hands-On Lab Overview
GitLab Compliance - Hands-On Lab: Audit Events
GitLab Compliance - Hands-On Lab: Compliance Reports
GitLab Compliance - Hands-On Lab: Enable and Configure License Compliance
GitLab Compliance - Hands-On Lab: Pipeline Execution Policies
GitLab Compliance - Hands-On Lab: Scan Execution Policies
GitLab Compliance - Repository Control
GitLab Compliance - Separation of Privileges
GitLab Security Essentials - Hands-On Lab Overview
GitLab Security Essentials - Hands-On Lab: Addressing Vulnerabilities
GitLab Security Essentials - Hands-On Lab: Container Scanning
GitLab Security Essentials - Hands-On Lab: DAST and API Scans
GitLab Security Essentials - Hands-On Lab: Dependency and IaC Scanning
GitLab Security Essentials - Hands-On Lab: Enable and Scan Using a Scan Execution Policy
GitLab Security Essentials - Hands-On Lab: SAST and Secret Detection
GitLab System Admin - Hands-On Lab: Exploring the GitLab Kubernetes Instance
GitLab System Admin - Hands-On Lab: Exploring the GitLab Omnibus Instance
GitLab System Admin - Hands-On Lab: Exploring the Kubernetes Admin Dashboard
GitLab System Admin - Hands-On Lab: Exploring the Omnibus Admin Dashboard
GitLab System Admin - Hands-On Lab: Kubernetes Backup and Restore
GitLab System Admin - Hands-On Lab: Logging and Monitoring GitLab Kubernetes
GitLab System Admin - Hands-On Lab: Logging and Monitoring GitLab Omnibus
GitLab System Admin - Hands-On Lab: Omnibus Backup and Restore
GitLab System Admin - Hands-On Lab: Troubleshooting GitLab Kubernetes
GitLab System Admin - Hands-On Lab: Troubleshooting GitLab Omnibus
GitLab System Admin - Hands-On Lab: Upgrading GitLab Kubernetes
GitLab System Admin - Hands-On Lab: Upgrading GitLab Omnibus
GitLab System Administration with Kubernetes - Hands-On Lab Overview
GitLab System Administration with Omnibus - Hands-On Lab Overview
GitLab with Git Fundamentals - Hands-On Lab Overview
GitLab with Git Fundamentals - Hands-on Lab: Auto DevOps With a Predefined Project Template
GitLab with Git Fundamentals - Hands-on Lab: Build a .gitlab-ci.yml file
GitLab with Git Fundamentals - Hands-On Lab: Create a project and issue
GitLab with Git Fundamentals - Hands-On Lab: Static Application Security Testing (SAST)
GitLab with Git Fundamentals - Hands-On Lab: Use GitLab To Merge Code
GitLab with Git Fundamentals - Hands-on Lab: Work With Git Locally
GitLab Security Essentials - Hands-On Lab Overview
GitLab Security Essentials - Hands-On Lab: Configure SAST, Secret Detection, and DAST
GitLab Security Essentials - Hands-On Lab: Enable and Configure Container Scanning
GitLab Security Essentials - Hands-On Lab: Enable and Configure Coverage-Guided Fuzz Testing
GitLab Security Essentials - Hands-On Lab: Enable and Configure Dependency Scanning
GitLab Security Essentials - Hands-On Lab: Enable and Configure License Compliance
GitLab Security Essentials - Hands-On Lab: Enable and Scan Using a Scan Execution Policy
GitLab System Administration - Hands-on Lab: Backup and Restore GitLab
GitLab System Administration - Hands-on Lab: Configure GitLab Runners
GitLab System Administration - Hands-on Lab: Configure Instance Monitoring
GitLab System Administration - Hands-on Lab: Implement Sign-Up Restrictions
GitLab System Administration - Hands-on Lab: Install GitLab
GitLab System Administration - Hands-on Lab: Manage GitLab Logs
GitLab System Administration - Hands-on Lab: Troubleshoot GitLab
GitLab System Administration - Hands-on Lab: Use GitLab Administration Commands
GitLab System Administration Hands-on Lab Overview
GitLab with Git Fundamentals - Hands-On Lab Overview
GitLab with Git Fundamentals - Hands-on Lab: Auto DevOps With a Predefined Project Template
GitLab with Git Fundamentals - Hands-on Lab: Build a .gitlab-ci.yml file
GitLab with Git Fundamentals - Hands-On Lab: Create a project and issue
GitLab with Git Fundamentals - Hands-On Lab: Static Application Security Testing (SAST)
GitLab with Git Fundamentals - Hands-On Lab: Use GitLab To Merge Code
GitLab with Git Fundamentals - Hands-on Lab: Work With Git Locally
Thought Industries LMS Tech Stack Guide
GitLab Technical Certifications
Partner Collaboration
Positioning Professional Services
Professional Service Operations
Mavenlink Processes
Professional Services Delivery Methodology
Agile to GitLab Terminology Mapping
Archetype Definition
Backlog Management
Definition of Done
Definition of Ready
Discovery
GitLab Best Practices
Good Estimation Techniques
Good User Stories
How to Use CP Automation to Manage Engagements
Iteration 0
Iteration 0 Fundamentals
Iteration Planning per Service Offering
Iteration Scheduling
Managing Risk, Project Wins, and Business Development
Retrospectives
Professional Services Engagement Management
GitLab Certified Engagement Manager Professional
Professional Services EM Opportunity Tracking
Professional Services EM Scoping Guidelines
Professional Services EM Implementation Scoping
Professional Services EM Scoping - CI/CD Pipeline Migration
Professional Services EM Scoping - Migrations
Migrating from Self-Managed GitLab to GitLab.com
Professional Services EM Scoping - Transformational Services
Scoping a Readiness Assessment
Professional Services Engagement Management - SOW Creation
Professional Services Engagement Management - Transacting ProServ business through AWS Marketplace
Task Prioritization
Professional Services Engineering Workflows
Artifacts
After Action Reports
Architecture Diagrams
Intake
AWS Intake
On-prem Intake
Internal
15-minute Standup
Blameless Root Cause Analyses
Professional Services Business Operations
Process
Project Execution
Project Kick-off
Sign-off
Standing Calls
Welcome E-mail
Professional Services Instructional Design and Development
Professional Services Offerings
Professional Services Offerings Framework
Professional Services Partner Invoice Example
Professional Services Practice Management
Professional Services Pre-Sales Methodology
Professional Services Project Management
Professional Services Remote Training Session Setup and Reporting
Professional Services Technical Architect
PS Standard SKUs
Remote Training Facilitation Best Practices
Selling GitLab Professional Services
Services to Accelerate Customer Adoption
Setting up your Development Environment
Working with Professional Services
- Delivery Checklists
- Developing Software for Professional Services
- GitLab Certified Migration Services Engineer
- GitLab Certified Trainer Program
- GitLab Professional Education Services
GitLab Agile Portfolio Management - Hands-On Lab Overview
GitLab Agile Portfolio Management - Hands-On Lab: Access The GitLab Training Environment
GitLab Agile Portfolio Management - Hands-On Lab: Create an Organizational Structure in GitLab
GitLab Agile Portfolio Management - Hands-On Lab: Create And Customize Issue Boards
GitLab Agile Portfolio Management - Hands-On Lab: Create And Manage A Kanban Board
GitLab Agile Portfolio Management - Hands-On Lab: Create And Manage A Scrum Board
GitLab Agile Portfolio Management - Hands-On Lab: Create And Manage A Waterfall Board
GitLab Agile Portfolio Management - Hands-On Lab: Organize and Manage Issues
GitLab Agile Portfolio Management - Hands-On Lab: Use GitLab Planning Tools
GitLab Agile Portfolio Management- Hands-On Lab: Create Issues
GitLab Agile Portfolio Management- Hands-On Lab: Use A Merge Request To Review And Merge Code
GitLab CI/CD - Hands-On Lab Overview
GitLab CI/CD - Hands-On Lab: Code Quality Scanning
GitLab CI/CD - Hands-On Lab: Create A Basic CI Configuration
GitLab CI/CD - Hands-On Lab: Defining Stages, Jobs, and Runners
GitLab CI/CD - Hands-On Lab: Display Pipeline Info
GitLab CI/CD - Hands-On Lab: Job Policy Patterns
GitLab CI/CD - Hands-On Lab: Security Scanning
GitLab CI/CD - Hands-On Lab: Understanding the Basics of Pipelines
GitLab CI/CD - Hands-On Lab: Using Artifacts
GitLab CI/CD - Hands-On Lab: Variable Hierarchy
GitLab CI/CD - Hands-On Lab: Working with the GitLab Container Registry
GitLab Duo Principles - Hands-On Lab Overview
GitLab Duo Principles - Hands-On Lab: Code Generation with GitLab Duo Chat
GitLab Duo Principles - Hands-On Lab: Getting Started with GitLab Duo
GitLab Duo Principles - Hands-On Lab: Using GitLab Duo to Write New Code
GitLab Duo Principles - Hands-On Lab: Working with Issues and Merge Requests
GitLab Duo Principles - Hands-On Lab: Working with Security Vulnerabilities
GitLab Professional Education Services ILT Labs
GitLab Advanced CI/CD - Hands-On Lab Overview
GitLab Advanced CI/CD - Hands-On Lab: Configurations for Complex Processes
GitLab Advanced CI/CD - Hands-On Lab: Deployment Strategies
GitLab Advanced CI/CD - Hands-On Lab: GitLab Runners Deep Dive
GitLab Advanced CI/CD - Hands-On Lab: Optimizing Build Pipelines
GitLab Advanced CI/CD - Hands-On Lab: Optimizing Pipeline Testing
GitLab Advanced CI/CD - Hands-On Lab: Review Apps
GitLab Advanced CI/CD - Hands-On Lab: Reviewing Best Practices
GitLab Agile Portfolio Management - Hands-On Lab Overview
GitLab Agile Portfolio Management - Hands-On Lab: Access The GitLab Training Environment
GitLab Agile Portfolio Management - Hands-On Lab: Create an Organizational Structure in GitLab
GitLab Agile Portfolio Management - Hands-On Lab: Create And Customize Issue Boards
GitLab Agile Portfolio Management - Hands-On Lab: Create And Manage A Kanban Board
GitLab Agile Portfolio Management - Hands-On Lab: Create And Manage A Scrum Board
GitLab Agile Portfolio Management - Hands-On Lab: Create And Manage A Waterfall Board
GitLab Agile Portfolio Management - Hands-On Lab: Organize and Manage Issues
GitLab Agile Portfolio Management - Hands-On Lab: Use GitLab Planning Tools
GitLab Agile Portfolio Management- Hands-On Lab: Create Issues
GitLab Agile Portfolio Management- Hands-On Lab: Use A Merge Request To Review And Merge Code
GitLab CI/CD - Hands-On Lab Overview
GitLab CI/CD - Hands-On Lab: Configure a Pipeline to Build an Application
GitLab CI/CD - Hands-On Lab: Configuring Pipeline Testing
GitLab CI/CD - Hands-On Lab: Deploying Applications
GitLab CI/CD - Hands-On Lab: Investigating Broken Pipelines
GitLab CI/CD - Hands-On Lab: Rules and Merging Changes
GitLab CI/CD - Hands-On Lab: Working with CI/CD Components
GitLab Compliance - Compliance Center and Frameworks
GitLab Compliance - Hands-On Lab Overview
GitLab Compliance - Hands-On Lab: Audit Events
GitLab Compliance - Hands-On Lab: Compliance Reports
GitLab Compliance - Hands-On Lab: Enable and Configure License Compliance
GitLab Compliance - Hands-On Lab: Pipeline Execution Policies
GitLab Compliance - Hands-On Lab: Scan Execution Policies
GitLab Compliance - Repository Control
GitLab Compliance - Separation of Privileges
GitLab Security Essentials - Hands-On Lab Overview
GitLab Security Essentials - Hands-On Lab: Addressing Vulnerabilities
GitLab Security Essentials - Hands-On Lab: Container Scanning
GitLab Security Essentials - Hands-On Lab: DAST and API Scans
GitLab Security Essentials - Hands-On Lab: Dependency and IaC Scanning
GitLab Security Essentials - Hands-On Lab: Enable and Scan Using a Scan Execution Policy
GitLab Security Essentials - Hands-On Lab: SAST and Secret Detection
GitLab System Admin - Hands-On Lab: Exploring the GitLab Kubernetes Instance
GitLab System Admin - Hands-On Lab: Exploring the GitLab Omnibus Instance
GitLab System Admin - Hands-On Lab: Exploring the Kubernetes Admin Dashboard
GitLab System Admin - Hands-On Lab: Exploring the Omnibus Admin Dashboard
GitLab System Admin - Hands-On Lab: Kubernetes Backup and Restore
GitLab System Admin - Hands-On Lab: Logging and Monitoring GitLab Kubernetes
GitLab System Admin - Hands-On Lab: Logging and Monitoring GitLab Omnibus
GitLab System Admin - Hands-On Lab: Omnibus Backup and Restore
GitLab System Admin - Hands-On Lab: Troubleshooting GitLab Kubernetes
GitLab System Admin - Hands-On Lab: Troubleshooting GitLab Omnibus
GitLab System Admin - Hands-On Lab: Upgrading GitLab Kubernetes
GitLab System Admin - Hands-On Lab: Upgrading GitLab Omnibus
GitLab System Administration with Kubernetes - Hands-On Lab Overview
GitLab System Administration with Omnibus - Hands-On Lab Overview
GitLab with Git Fundamentals - Hands-On Lab Overview
GitLab with Git Fundamentals - Hands-on Lab: Auto DevOps With a Predefined Project Template
GitLab with Git Fundamentals - Hands-on Lab: Build a .gitlab-ci.yml file
GitLab with Git Fundamentals - Hands-On Lab: Create a project and issue
GitLab with Git Fundamentals - Hands-On Lab: Static Application Security Testing (SAST)
GitLab with Git Fundamentals - Hands-On Lab: Use GitLab To Merge Code
GitLab with Git Fundamentals - Hands-on Lab: Work With Git Locally
GitLab Security Essentials - Hands-On Lab Overview
GitLab Security Essentials - Hands-On Lab: Configure SAST, Secret Detection, and DAST
GitLab Security Essentials - Hands-On Lab: Enable and Configure Container Scanning
GitLab Security Essentials - Hands-On Lab: Enable and Configure Coverage-Guided Fuzz Testing
GitLab Security Essentials - Hands-On Lab: Enable and Configure Dependency Scanning
GitLab Security Essentials - Hands-On Lab: Enable and Configure License Compliance
GitLab Security Essentials - Hands-On Lab: Enable and Scan Using a Scan Execution Policy
GitLab System Administration - Hands-on Lab: Backup and Restore GitLab
GitLab System Administration - Hands-on Lab: Configure GitLab Runners
GitLab System Administration - Hands-on Lab: Configure Instance Monitoring
GitLab System Administration - Hands-on Lab: Implement Sign-Up Restrictions
GitLab System Administration - Hands-on Lab: Install GitLab
GitLab System Administration - Hands-on Lab: Manage GitLab Logs
GitLab System Administration - Hands-on Lab: Troubleshoot GitLab
GitLab System Administration - Hands-on Lab: Use GitLab Administration Commands
GitLab System Administration Hands-on Lab Overview
GitLab with Git Fundamentals - Hands-On Lab Overview
GitLab with Git Fundamentals - Hands-on Lab: Auto DevOps With a Predefined Project Template
GitLab with Git Fundamentals - Hands-on Lab: Build a .gitlab-ci.yml file
GitLab with Git Fundamentals - Hands-On Lab: Create a project and issue
GitLab with Git Fundamentals - Hands-On Lab: Static Application Security Testing (SAST)
GitLab with Git Fundamentals - Hands-On Lab: Use GitLab To Merge Code
GitLab with Git Fundamentals - Hands-on Lab: Work With Git Locally
Thought Industries LMS Tech Stack Guide
- GitLab Agile Portfolio Management - Hands-On Lab Overview
- GitLab Agile Portfolio Management - Hands-On Lab: Access The GitLab Training Environment
- GitLab Agile Portfolio Management - Hands-On Lab: Create an Organizational Structure in GitLab
- GitLab Agile Portfolio Management - Hands-On Lab: Create And Customize Issue Boards
- GitLab Agile Portfolio Management - Hands-On Lab: Create And Manage A Kanban Board
- GitLab Agile Portfolio Management - Hands-On Lab: Create And Manage A Scrum Board
- GitLab Agile Portfolio Management - Hands-On Lab: Create And Manage A Waterfall Board
- GitLab Agile Portfolio Management - Hands-On Lab: Organize and Manage Issues
- GitLab Agile Portfolio Management - Hands-On Lab: Use GitLab Planning Tools
- GitLab Agile Portfolio Management- Hands-On Lab: Create Issues
- GitLab Agile Portfolio Management- Hands-On Lab: Use A Merge Request To Review And Merge Code
- GitLab CI/CD - Hands-On Lab Overview
- GitLab CI/CD - Hands-On Lab: Code Quality Scanning
- GitLab CI/CD - Hands-On Lab: Create A Basic CI Configuration
- GitLab CI/CD - Hands-On Lab: Defining Stages, Jobs, and Runners
- GitLab CI/CD - Hands-On Lab: Display Pipeline Info
- GitLab CI/CD - Hands-On Lab: Job Policy Patterns
- GitLab CI/CD - Hands-On Lab: Security Scanning
- GitLab CI/CD - Hands-On Lab: Understanding the Basics of Pipelines
- GitLab CI/CD - Hands-On Lab: Using Artifacts
- GitLab CI/CD - Hands-On Lab: Variable Hierarchy
- GitLab CI/CD - Hands-On Lab: Working with the GitLab Container Registry
- GitLab Duo Principles - Hands-On Lab Overview
- GitLab Duo Principles - Hands-On Lab: Code Generation with GitLab Duo Chat
- GitLab Duo Principles - Hands-On Lab: Getting Started with GitLab Duo
- GitLab Duo Principles - Hands-On Lab: Using GitLab Duo to Write New Code
- GitLab Duo Principles - Hands-On Lab: Working with Issues and Merge Requests
- GitLab Duo Principles - Hands-On Lab: Working with Security Vulnerabilities
- GitLab Professional Education Services ILT Labs
GitLab Advanced CI/CD - Hands-On Lab Overview
GitLab Advanced CI/CD - Hands-On Lab: Configurations for Complex Processes
GitLab Advanced CI/CD - Hands-On Lab: Deployment Strategies
GitLab Advanced CI/CD - Hands-On Lab: GitLab Runners Deep Dive
GitLab Advanced CI/CD - Hands-On Lab: Optimizing Build Pipelines
GitLab Advanced CI/CD - Hands-On Lab: Optimizing Pipeline Testing
GitLab Advanced CI/CD - Hands-On Lab: Review Apps
GitLab Advanced CI/CD - Hands-On Lab: Reviewing Best Practices
GitLab Agile Portfolio Management - Hands-On Lab Overview
GitLab Agile Portfolio Management - Hands-On Lab: Access The GitLab Training Environment
GitLab Agile Portfolio Management - Hands-On Lab: Create an Organizational Structure in GitLab
GitLab Agile Portfolio Management - Hands-On Lab: Create And Customize Issue Boards
GitLab Agile Portfolio Management - Hands-On Lab: Create And Manage A Kanban Board
GitLab Agile Portfolio Management - Hands-On Lab: Create And Manage A Scrum Board
GitLab Agile Portfolio Management - Hands-On Lab: Create And Manage A Waterfall Board
GitLab Agile Portfolio Management - Hands-On Lab: Organize and Manage Issues
GitLab Agile Portfolio Management - Hands-On Lab: Use GitLab Planning Tools
GitLab Agile Portfolio Management- Hands-On Lab: Create Issues
GitLab Agile Portfolio Management- Hands-On Lab: Use A Merge Request To Review And Merge Code
GitLab CI/CD - Hands-On Lab Overview
GitLab CI/CD - Hands-On Lab: Configure a Pipeline to Build an Application
GitLab CI/CD - Hands-On Lab: Configuring Pipeline Testing
GitLab CI/CD - Hands-On Lab: Deploying Applications
GitLab CI/CD - Hands-On Lab: Investigating Broken Pipelines
GitLab CI/CD - Hands-On Lab: Rules and Merging Changes
GitLab CI/CD - Hands-On Lab: Working with CI/CD Components
GitLab Compliance - Compliance Center and Frameworks
GitLab Compliance - Hands-On Lab Overview
GitLab Compliance - Hands-On Lab: Audit Events
GitLab Compliance - Hands-On Lab: Compliance Reports
GitLab Compliance - Hands-On Lab: Enable and Configure License Compliance
GitLab Compliance - Hands-On Lab: Pipeline Execution Policies
GitLab Compliance - Hands-On Lab: Scan Execution Policies
GitLab Compliance - Repository Control
GitLab Compliance - Separation of Privileges
GitLab Security Essentials - Hands-On Lab Overview
GitLab Security Essentials - Hands-On Lab: Addressing Vulnerabilities
GitLab Security Essentials - Hands-On Lab: Container Scanning
GitLab Security Essentials - Hands-On Lab: DAST and API Scans
GitLab Security Essentials - Hands-On Lab: Dependency and IaC Scanning
GitLab Security Essentials - Hands-On Lab: Enable and Scan Using a Scan Execution Policy
GitLab Security Essentials - Hands-On Lab: SAST and Secret Detection
GitLab System Admin - Hands-On Lab: Exploring the GitLab Kubernetes Instance
GitLab System Admin - Hands-On Lab: Exploring the GitLab Omnibus Instance
GitLab System Admin - Hands-On Lab: Exploring the Kubernetes Admin Dashboard
GitLab System Admin - Hands-On Lab: Exploring the Omnibus Admin Dashboard
GitLab System Admin - Hands-On Lab: Kubernetes Backup and Restore
GitLab System Admin - Hands-On Lab: Logging and Monitoring GitLab Kubernetes
GitLab System Admin - Hands-On Lab: Logging and Monitoring GitLab Omnibus
GitLab System Admin - Hands-On Lab: Omnibus Backup and Restore
GitLab System Admin - Hands-On Lab: Troubleshooting GitLab Kubernetes
GitLab System Admin - Hands-On Lab: Troubleshooting GitLab Omnibus
GitLab System Admin - Hands-On Lab: Upgrading GitLab Kubernetes
GitLab System Admin - Hands-On Lab: Upgrading GitLab Omnibus
GitLab System Administration with Kubernetes - Hands-On Lab Overview
GitLab System Administration with Omnibus - Hands-On Lab Overview
GitLab with Git Fundamentals - Hands-On Lab Overview
GitLab with Git Fundamentals - Hands-on Lab: Auto DevOps With a Predefined Project Template
GitLab with Git Fundamentals - Hands-on Lab: Build a .gitlab-ci.yml file
GitLab with Git Fundamentals - Hands-On Lab: Create a project and issue
GitLab with Git Fundamentals - Hands-On Lab: Static Application Security Testing (SAST)
GitLab with Git Fundamentals - Hands-On Lab: Use GitLab To Merge Code
GitLab with Git Fundamentals - Hands-on Lab: Work With Git Locally
- GitLab Advanced CI/CD - Hands-On Lab Overview
- GitLab Advanced CI/CD - Hands-On Lab: Configurations for Complex Processes
- GitLab Advanced CI/CD - Hands-On Lab: Deployment Strategies
- GitLab Advanced CI/CD - Hands-On Lab: GitLab Runners Deep Dive
- GitLab Advanced CI/CD - Hands-On Lab: Optimizing Build Pipelines
- GitLab Advanced CI/CD - Hands-On Lab: Optimizing Pipeline Testing
- GitLab Advanced CI/CD - Hands-On Lab: Review Apps
- GitLab Advanced CI/CD - Hands-On Lab: Reviewing Best Practices
- GitLab Agile Portfolio Management - Hands-On Lab Overview
- GitLab Agile Portfolio Management - Hands-On Lab: Access The GitLab Training Environment
- GitLab Agile Portfolio Management - Hands-On Lab: Create an Organizational Structure in GitLab
- GitLab Agile Portfolio Management - Hands-On Lab: Create And Customize Issue Boards
- GitLab Agile Portfolio Management - Hands-On Lab: Create And Manage A Kanban Board
- GitLab Agile Portfolio Management - Hands-On Lab: Create And Manage A Scrum Board
- GitLab Agile Portfolio Management - Hands-On Lab: Create And Manage A Waterfall Board
- GitLab Agile Portfolio Management - Hands-On Lab: Organize and Manage Issues
- GitLab Agile Portfolio Management - Hands-On Lab: Use GitLab Planning Tools
- GitLab Agile Portfolio Management- Hands-On Lab: Create Issues
- GitLab Agile Portfolio Management- Hands-On Lab: Use A Merge Request To Review And Merge Code
- GitLab CI/CD - Hands-On Lab Overview
- GitLab CI/CD - Hands-On Lab: Configure a Pipeline to Build an Application
- GitLab CI/CD - Hands-On Lab: Configuring Pipeline Testing
- GitLab CI/CD - Hands-On Lab: Deploying Applications
- GitLab CI/CD - Hands-On Lab: Investigating Broken Pipelines
- GitLab CI/CD - Hands-On Lab: Rules and Merging Changes
- GitLab CI/CD - Hands-On Lab: Working with CI/CD Components
- GitLab Compliance - Compliance Center and Frameworks
- GitLab Compliance - Hands-On Lab Overview
- GitLab Compliance - Hands-On Lab: Audit Events
- GitLab Compliance - Hands-On Lab: Compliance Reports
- GitLab Compliance - Hands-On Lab: Enable and Configure License Compliance
- GitLab Compliance - Hands-On Lab: Pipeline Execution Policies
- GitLab Compliance - Hands-On Lab: Scan Execution Policies
- GitLab Compliance - Repository Control
- GitLab Compliance - Separation of Privileges
- GitLab Security Essentials - Hands-On Lab Overview
- GitLab Security Essentials - Hands-On Lab: Addressing Vulnerabilities
- GitLab Security Essentials - Hands-On Lab: Container Scanning
- GitLab Security Essentials - Hands-On Lab: DAST and API Scans
- GitLab Security Essentials - Hands-On Lab: Dependency and IaC Scanning
- GitLab Security Essentials - Hands-On Lab: Enable and Scan Using a Scan Execution Policy
- GitLab Security Essentials - Hands-On Lab: SAST and Secret Detection
- GitLab System Admin - Hands-On Lab: Exploring the GitLab Kubernetes Instance
- GitLab System Admin - Hands-On Lab: Exploring the GitLab Omnibus Instance

Application Security Testing Sub-Department
API Security team in the Dynamic Analysis Group
Application Security Testing - Planning
Application Security Testing, Composition Analysis
Composition Analysis Runbooks
Enable Semver Dialect Errors in Sentry
Application Security Testing, Vulnerability Research
Application Security Testing, Vulnerability Research - CNA Processes
Dynamic Analysis Group
Products
Secure Product Metrics
Secret Detection Group
Secret Detection Metrics
Secret Detection Runbooks
Secret Detection Service: General FAQs
Secret Detection Service: Monitoring
Secret Push Protection Monitoring
Secret push protection performance testing
Secret push protection troubleshooting
Secure QA Process
Secure Technical Documentation
Data model for Dependencies Information
Secure Architecture - Feedback (Dismiss, create an issue or a Merge Request)
Static Analysis Group
Retrospective summaries
Static Analysis Group Code Review Process
Static Analysis Group Defined False Positives
Static Analysis Group EC2 development machine setup guide
Static Analysis Group Reaction Rotation
Static Analysis Runbooks
How to monitor and respond to issues with SAST Automatic Vulnerability Resolution?
SAST analyzer deprecation and removal instructions
SAST analyzer rollback to last version in production
Secure / Govern sub-department delineation
Security Risk Management Section
Security Infrastructure
Security Risk Management Planning
Security Risk Management, Security Insights
Developer Vulnerability Management Setup Guide
Setup Guide for Vulnerability Explanation and Resolution
Vulnerability Archive Generation Guide
Vulnerability Explanation and Vulnerability Resolution troubleshooting
Software Supply Chain Security Sub-department
Anti-Abuse Group
Authentication Group
Authorization Group
Compliance Group
Software Supply Chain Security, Security Policies
Security Policies - How we prioritize our current work?
Security Policies - Working on features
Software Supply Chain Security:Pipeline Security Group
Pipeline Security Group - JTBD
- Application Security Testing Sub-Department
API Security team in the Dynamic Analysis Group
Application Security Testing - Planning
Application Security Testing, Composition Analysis
Composition Analysis Runbooks
Enable Semver Dialect Errors in Sentry
Application Security Testing, Vulnerability Research
Application Security Testing, Vulnerability Research - CNA Processes
Dynamic Analysis Group
Products
Secure Product Metrics
Secret Detection Group
Secret Detection Metrics
Secret Detection Runbooks
Secret Detection Service: General FAQs
Secret Detection Service: Monitoring
Secret Push Protection Monitoring
Secret push protection performance testing
Secret push protection troubleshooting
Secure QA Process
Secure Technical Documentation
Data model for Dependencies Information
Secure Architecture - Feedback (Dismiss, create an issue or a Merge Request)
Static Analysis Group
Retrospective summaries
Static Analysis Group Code Review Process
Static Analysis Group Defined False Positives
Static Analysis Group EC2 development machine setup guide
Static Analysis Group Reaction Rotation
Static Analysis Runbooks
How to monitor and respond to issues with SAST Automatic Vulnerability Resolution?
SAST analyzer deprecation and removal instructions
SAST analyzer rollback to last version in production
- API Security team in the Dynamic Analysis Group
- Application Security Testing - Planning
- Application Security Testing, Composition Analysis
Composition Analysis Runbooks
Enable Semver Dialect Errors in Sentry
- Composition Analysis Runbooks
Enable Semver Dialect Errors in Sentry
- Enable Semver Dialect Errors in Sentry
- Application Security Testing, Vulnerability Research
Application Security Testing, Vulnerability Research - CNA Processes
- Application Security Testing, Vulnerability Research - CNA Processes
- Dynamic Analysis Group
- Products
Secure Product Metrics
- Secure Product Metrics
- Secret Detection Group
Secret Detection Metrics
Secret Detection Runbooks
Secret Detection Service: General FAQs
Secret Detection Service: Monitoring
Secret Push Protection Monitoring
Secret push protection performance testing
Secret push protection troubleshooting
- Secret Detection Metrics
- Secret Detection Runbooks
Secret Detection Service: General FAQs
Secret Detection Service: Monitoring
Secret Push Protection Monitoring
Secret push protection performance testing
Secret push protection troubleshooting
- Secret Detection Service: General FAQs
- Secret Detection Service: Monitoring
- Secret Push Protection Monitoring
- Secret push protection performance testing
- Secret push protection troubleshooting
- Secure QA Process
- Secure Technical Documentation
Data model for Dependencies Information
Secure Architecture - Feedback (Dismiss, create an issue or a Merge Request)
- Data model for Dependencies Information
- Secure Architecture - Feedback (Dismiss, create an issue or a Merge Request)
- Static Analysis Group
Retrospective summaries
Static Analysis Group Code Review Process
Static Analysis Group Defined False Positives
Static Analysis Group EC2 development machine setup guide
Static Analysis Group Reaction Rotation
Static Analysis Runbooks
How to monitor and respond to issues with SAST Automatic Vulnerability Resolution?
SAST analyzer deprecation and removal instructions
SAST analyzer rollback to last version in production
- Retrospective summaries
- Static Analysis Group Code Review Process
- Static Analysis Group Defined False Positives
- Static Analysis Group EC2 development machine setup guide
- Static Analysis Group Reaction Rotation
- Static Analysis Runbooks
How to monitor and respond to issues with SAST Automatic Vulnerability Resolution?
SAST analyzer deprecation and removal instructions
SAST analyzer rollback to last version in production
- How to monitor and respond to issues with SAST Automatic Vulnerability Resolution?
- SAST analyzer deprecation and removal instructions
- SAST analyzer rollback to last version in production
- Secure / Govern sub-department delineation
- Security Risk Management Section
Security Infrastructure
Security Risk Management Planning
Security Risk Management, Security Insights
Developer Vulnerability Management Setup Guide
Setup Guide for Vulnerability Explanation and Resolution
Vulnerability Archive Generation Guide
Vulnerability Explanation and Vulnerability Resolution troubleshooting
- Security Infrastructure
- Security Risk Management Planning
- Security Risk Management, Security Insights
Developer Vulnerability Management Setup Guide
Setup Guide for Vulnerability Explanation and Resolution
Vulnerability Archive Generation Guide
Vulnerability Explanation and Vulnerability Resolution troubleshooting
- Developer Vulnerability Management Setup Guide
- Setup Guide for Vulnerability Explanation and Resolution
- Vulnerability Archive Generation Guide
- Vulnerability Explanation and Vulnerability Resolution troubleshooting
- Software Supply Chain Security Sub-department
Anti-Abuse Group
Authentication Group
Authorization Group
Compliance Group
Software Supply Chain Security, Security Policies
Security Policies - How we prioritize our current work?
Security Policies - Working on features
Software Supply Chain Security:Pipeline Security Group
Pipeline Security Group - JTBD
- Anti-Abuse Group
- Authentication Group
- Authorization Group
- Compliance Group
- Software Supply Chain Security, Security Policies
Security Policies - How we prioritize our current work?
Security Policies - Working on features
- Security Policies - How we prioritize our current work?
- Security Policies - Working on features
- Software Supply Chain Security:Pipeline Security Group
Pipeline Security Group - JTBD
- Pipeline Security Group - JTBD
- Engineering Analytics
- Engineering Career Development
Engineering Career Framework
Development Department Career Framework
Dev Career Framework
Backend
Dev Career Framework: Intermediate Backend Engineer
Dev Career Framework: Senior Backend Engineer
Dev Career Framework: Staff Backend Engineer
Dev Career Framework: Principal Engineer
Frontend
Dev Career Framework: Intermediate Frontend Engineer
Dev Career Framework: Senior Frontend Engineer
Dev Career Framework: Staff Frontend Engineer
Fullstack
Dev Career Framework: Intermediate Fullstack Engineer
Dev Career Framework: Senior Fullstack Engineer
Dev Career Framework: Staff Fullstack Engineer
Development Department Career Framework: Intermediate
Development Department Career Framework: Intern
Development Department Career Framework: Principal
Development Department Career Framework: Senior
Development Department Career Framework: Staff
Engineering Career Framework: Associate
Engineering Career Framework: Intermediate
Engineering Career Framework: Intern
Engineering Career Framework: Principal
Engineering Career Framework: Senior
Engineering Career Framework: Staff
Infrastructure Department Career Framework
Associate - Infrastructure Department Career Framework
Core Platform Career Framework
Distribution
Core Platform Career Framework: Intermediate Distribution Engineer
Core Platform Career Framework: Senior Distribution Engineer
Intermediate - Infrastructure Department Career Framework
Intern - Infrastructure Department Career Framework
Principal - Infrastructure Department Career Framework
Senior - Infrastructure Department Career Framework
Staff - Infrastructure Department Career Framework
Quality Department Career Framework
Engineering Productivity Career Framework
Quality Career Framework: Intermediate Backend Engineer, Engineering Productivity
Quality Career Framework: Senior Backend Engineer, Engineering Productivity
Quality Career Framework: Staff Backend Engineer, Engineering Productivity
Software Engineer in Test Career Framework
Quality Department SET Career Framework: Associate
Quality Department SET Career Framework: Intermediate
Quality Department SET Career Framework: Principal
Quality Department SET Career Framework: Senior
Quality Department SET Career Framework: Staff
Support Career Framework
Support Career Framework: Associate Support Engineer
Support Career Framework: Customer Support Representative
Support Career Framework: Intermediate Support Engineer
Support Career Framework: Senior Support Engineer
Support Career Framework: Staff Support Engineer
Mentoring
- Engineering Career Framework
Development Department Career Framework
Dev Career Framework
Backend
Dev Career Framework: Intermediate Backend Engineer
Dev Career Framework: Senior Backend Engineer
Dev Career Framework: Staff Backend Engineer
Dev Career Framework: Principal Engineer
Frontend
Dev Career Framework: Intermediate Frontend Engineer
Dev Career Framework: Senior Frontend Engineer
Dev Career Framework: Staff Frontend Engineer
Fullstack
Dev Career Framework: Intermediate Fullstack Engineer
Dev Career Framework: Senior Fullstack Engineer
Dev Career Framework: Staff Fullstack Engineer
Development Department Career Framework: Intermediate
Development Department Career Framework: Intern
Development Department Career Framework: Principal
Development Department Career Framework: Senior
Development Department Career Framework: Staff
Engineering Career Framework: Associate
Engineering Career Framework: Intermediate
Engineering Career Framework: Intern
Engineering Career Framework: Principal
Engineering Career Framework: Senior
Engineering Career Framework: Staff
Infrastructure Department Career Framework
Associate - Infrastructure Department Career Framework
Core Platform Career Framework
Distribution
Core Platform Career Framework: Intermediate Distribution Engineer
Core Platform Career Framework: Senior Distribution Engineer
Intermediate - Infrastructure Department Career Framework
Intern - Infrastructure Department Career Framework
Principal - Infrastructure Department Career Framework
Senior - Infrastructure Department Career Framework
Staff - Infrastructure Department Career Framework
Quality Department Career Framework
Engineering Productivity Career Framework
Quality Career Framework: Intermediate Backend Engineer, Engineering Productivity
Quality Career Framework: Senior Backend Engineer, Engineering Productivity
Quality Career Framework: Staff Backend Engineer, Engineering Productivity
Software Engineer in Test Career Framework
Quality Department SET Career Framework: Associate
Quality Department SET Career Framework: Intermediate
Quality Department SET Career Framework: Principal
Quality Department SET Career Framework: Senior
Quality Department SET Career Framework: Staff
Support Career Framework
Support Career Framework: Associate Support Engineer
Support Career Framework: Customer Support Representative
Support Career Framework: Intermediate Support Engineer
Support Career Framework: Senior Support Engineer
Support Career Framework: Staff Support Engineer
- Development Department Career Framework
Dev Career Framework
Backend
Dev Career Framework: Intermediate Backend Engineer
Dev Career Framework: Senior Backend Engineer
Dev Career Framework: Staff Backend Engineer
Dev Career Framework: Principal Engineer
Frontend
Dev Career Framework: Intermediate Frontend Engineer
Dev Career Framework: Senior Frontend Engineer
Dev Career Framework: Staff Frontend Engineer
Fullstack
Dev Career Framework: Intermediate Fullstack Engineer
Dev Career Framework: Senior Fullstack Engineer
Dev Career Framework: Staff Fullstack Engineer
Development Department Career Framework: Intermediate
Development Department Career Framework: Intern
Development Department Career Framework: Principal
Development Department Career Framework: Senior
Development Department Career Framework: Staff
- Dev Career Framework
Backend
Dev Career Framework: Intermediate Backend Engineer
Dev Career Framework: Senior Backend Engineer
Dev Career Framework: Staff Backend Engineer
Dev Career Framework: Principal Engineer
Frontend
Dev Career Framework: Intermediate Frontend Engineer
Dev Career Framework: Senior Frontend Engineer
Dev Career Framework: Staff Frontend Engineer
Fullstack
Dev Career Framework: Intermediate Fullstack Engineer
Dev Career Framework: Senior Fullstack Engineer
Dev Career Framework: Staff Fullstack Engineer
- Backend
Dev Career Framework: Intermediate Backend Engineer
Dev Career Framework: Senior Backend Engineer
Dev Career Framework: Staff Backend Engineer
- Dev Career Framework: Intermediate Backend Engineer
- Dev Career Framework: Senior Backend Engineer
- Dev Career Framework: Staff Backend Engineer
- Dev Career Framework: Principal Engineer
- Frontend
Dev Career Framework: Intermediate Frontend Engineer
Dev Career Framework: Senior Frontend Engineer
Dev Career Framework: Staff Frontend Engineer
- Dev Career Framework: Intermediate Frontend Engineer
- Dev Career Framework: Senior Frontend Engineer
- Dev Career Framework: Staff Frontend Engineer
- Fullstack
Dev Career Framework: Intermediate Fullstack Engineer
Dev Career Framework: Senior Fullstack Engineer
Dev Career Framework: Staff Fullstack Engineer
- Dev Career Framework: Intermediate Fullstack Engineer
- Dev Career Framework: Senior Fullstack Engineer
- Dev Career Framework: Staff Fullstack Engineer
- Development Department Career Framework: Intermediate
- Development Department Career Framework: Intern
- Development Department Career Framework: Principal
- Development Department Career Framework: Senior
- Development Department Career Framework: Staff
- Engineering Career Framework: Associate
- Engineering Career Framework: Intermediate
- Engineering Career Framework: Intern
- Engineering Career Framework: Principal
- Engineering Career Framework: Senior
- Engineering Career Framework: Staff
- Infrastructure Department Career Framework
Associate - Infrastructure Department Career Framework
Core Platform Career Framework
Distribution
Core Platform Career Framework: Intermediate Distribution Engineer
Core Platform Career Framework: Senior Distribution Engineer
Intermediate - Infrastructure Department Career Framework
Intern - Infrastructure Department Career Framework
Principal - Infrastructure Department Career Framework
Senior - Infrastructure Department Career Framework
Staff - Infrastructure Department Career Framework
- Associate - Infrastructure Department Career Framework
- Core Platform Career Framework
Distribution
Core Platform Career Framework: Intermediate Distribution Engineer
Core Platform Career Framework: Senior Distribution Engineer
- Distribution
Core Platform Career Framework: Intermediate Distribution Engineer
Core Platform Career Framework: Senior Distribution Engineer
- Core Platform Career Framework: Intermediate Distribution Engineer
- Core Platform Career Framework: Senior Distribution Engineer
- Intermediate - Infrastructure Department Career Framework
- Intern - Infrastructure Department Career Framework
- Principal - Infrastructure Department Career Framework
- Senior - Infrastructure Department Career Framework
- Staff - Infrastructure Department Career Framework
- Quality Department Career Framework
Engineering Productivity Career Framework
Quality Career Framework: Intermediate Backend Engineer, Engineering Productivity
Quality Career Framework: Senior Backend Engineer, Engineering Productivity
Quality Career Framework: Staff Backend Engineer, Engineering Productivity
Software Engineer in Test Career Framework
Quality Department SET Career Framework: Associate
Quality Department SET Career Framework: Intermediate
Quality Department SET Career Framework: Principal
Quality Department SET Career Framework: Senior
Quality Department SET Career Framework: Staff
- Engineering Productivity Career Framework
Quality Career Framework: Intermediate Backend Engineer, Engineering Productivity
Quality Career Framework: Senior Backend Engineer, Engineering Productivity
Quality Career Framework: Staff Backend Engineer, Engineering Productivity
- Quality Career Framework: Intermediate Backend Engineer, Engineering Productivity
- Quality Career Framework: Senior Backend Engineer, Engineering Productivity
- Quality Career Framework: Staff Backend Engineer, Engineering Productivity
- Software Engineer in Test Career Framework
Quality Department SET Career Framework: Associate
Quality Department SET Career Framework: Intermediate
Quality Department SET Career Framework: Principal
Quality Department SET Career Framework: Senior
Quality Department SET Career Framework: Staff
- Quality Department SET Career Framework: Associate
- Quality Department SET Career Framework: Intermediate
- Quality Department SET Career Framework: Principal
- Quality Department SET Career Framework: Senior
- Quality Department SET Career Framework: Staff
- Support Career Framework
Support Career Framework: Associate Support Engineer
Support Career Framework: Customer Support Representative
Support Career Framework: Intermediate Support Engineer
Support Career Framework: Senior Support Engineer
Support Career Framework: Staff Support Engineer
- Support Career Framework: Associate Support Engineer
- Support Career Framework: Customer Support Representative
- Support Career Framework: Intermediate Support Engineer
- Support Career Framework: Senior Support Engineer
- Support Career Framework: Staff Support Engineer
- Mentoring
- Engineering Communication
Engineering Poster Boards
- Engineering Poster Boards
- Engineering Demo Process
- Engineering Error Budgets
Engineering Error Budget Custom Targets
Engineering Error Budgets for Stage Groups
- Engineering Error Budget Custom Targets
- Engineering Error Budgets for Stage Groups
- Engineering Function Performance Indicators
- Engineering Hiring
- Engineering IC Leadership
Tech Lead at GitLab
- Tech Lead at GitLab
- Engineering Management
Engineering Management Career Development
Engineering Management Project Management
Engineering Manager Hiring
Group Retrospectives
- Engineering Management Career Development
- Engineering Management Project Management
- Engineering Manager Hiring
- Group Retrospectives
- Engineering Mentorship
- Engineering Projects
- Engineering Secondments
- Engineering Team Readmes
Amy Shiel README
Andras Horvath's README
Angela Piotrowski's README
Ben King's README
Chris 'CK' README
Craig Miskell README
Daniel Diniz's README
David Wainaina README
Eduardo Bonet's README
Emily Chang's README
Jane Gianoutsos' README
Juan Silva's README
Kamil Trzci≈Ñski's README
Lee Matos' README
Lyle Kozloff's README
Marin Jankovski's README
Mario Mora's README
Matt Nohr's README
Max Woolf's README
Michael Lun√∏e's README
Mike Dunninger's README
MikeL's README
Nick Veenhof's README
README of Alex Ives
README of Gabriel Yoachum
README of Katrin Leinweber
Rebecca Spainhower's README
Ronnie Alfaro's Readme
Savas Vedova's README
Sean Carroll's Readme
Simon Street's README
Thong Kuah's README
Tom McAtee's README
- Amy Shiel README
- Andras Horvath's README
- Angela Piotrowski's README
- Ben King's README
- Chris 'CK' README
- Craig Miskell README
- Daniel Diniz's README
- David Wainaina README
- Eduardo Bonet's README
- Emily Chang's README
- Jane Gianoutsos' README
- Juan Silva's README
- Kamil Trzci≈Ñski's README
- Lee Matos' README
- Lyle Kozloff's README
- Marin Jankovski's README
- Mario Mora's README
- Matt Nohr's README
- Max Woolf's README
- Michael Lun√∏e's README
- Mike Dunninger's README
- MikeL's README
- Nick Veenhof's README
- README of Alex Ives
- README of Gabriel Yoachum
- README of Katrin Leinweber
- Rebecca Spainhower's README
- Ronnie Alfaro's Readme
- Savas Vedova's README
- Sean Carroll's Readme
- Simon Street's README
- Thong Kuah's README
- Tom McAtee's README
- Engineering Workflow
Code Review Guidelines
Code Review Values
Iteration
Related Engineering Workflows
Release/Feature Determination Workflow
- Code Review Guidelines
- Code Review Values
- Iteration
- Related Engineering Workflows
- Release/Feature Determination Workflow
- Expansion Development Department
- Fast Boot
- Frontend Group
Interview Metrics - Frontend
Skillsharing - Frontend
- Interview Metrics - Frontend
- Skillsharing - Frontend
- FY25 Engineering get-together subsidy
- GitLab Plato HQ Mentoring Program
- GitLab Repositories
- Guidelines for automation and access tokens
- Incident
- Infrastructure
Alert Playbook Management
Capacity Planning for GitLab Infrastructure
Career Development in the Infrastructure Department
Cells
Test Platform in Cells
Change Management
Cost Management
GCP CUD
Group Cost Metrics
How to Engage
Infrafin
Infrastructure Analyst Board
Infrastructure Analyst Role
Learning Resources
AWS
GCP
P&L Allocation
Database
Database: Disaster Recovery
Emergency Change Processes for GitLab SaaS
Engineering Productivity team
Direction - GDK
Engineering productivity project management
Flaky tests management and processes
Issue Triage
SPACE: Satisfaction, Performance, Activity, Collaboration, and Efficiency
Test Intelligence
Triage Operations
Issue Triage Onboarding
Wider Community Merge Request Triage
Workflow Automation
Getting Assistance on Infrastructure Platforms
Incident Management
Incident Manager On Call onboarding
Tier-2 Oncall
Incident Review
Infrastructure Department Frequently Asked Questions
Infrastructure Department Performance Indicators
Infrastructure Department Projects
Infrastructure Environments
Environments Canary Stage
Staging Ref environment
Infrastructure Feature Support
Infrastructure Product Management
Network Security Management Procedure
Production
Production Architecture
CI Service Architecture
Disaster Recovery Architecture
Supporting Architecture
Production Readiness Review
Rate Limiting
Bypass Policy
Managing Limits
Rate Limiting Troubleshooting
Release Tools
Service Maturity Model
Team
Cloud Connector Group
Application Performance Group - 2020 Impact
Application Performance Group - Approach and Common Themes
Application Performance Group - Knowledge Sharing
Cloud Connector - Technical vision
Distinguished Engineer, Infrastructure - Andrew Newdigate
FinOps Team
GitLab Dedicated Group
Environment Automation Team
GitLab Dedicated Architecture
From Dedicated to Cells: A Technical Analysis
GitLab Dedicated SLAs
Switchboard team
US Public Sector Services team
Production Engineering Ops Team
Disaster Recovery Practice (DR Gamedays)
EOC Onboarding Buddies
EOC Shadow and EOC Buddy Expectations
On-call handover
Production Engineering Ops Team Roadmaps
FY26 Production Engineering Ops Team Roadmaps
FY26 - Disaster Recovery
FY26 - Hosted Runners
FY26 - Incident Management
FY26 - Patching & OS Modernization
SRE Onboarding
Runway Team
Scalability Group
The Infrastructure Platforms Section
Infrastructure Platforms Tools Index
Runway
Platforms Processes
Calibration
The Infrastructure Platforms Hiring Process
The Infrastructure Platforms OKRs
The Infrastructure Platforms Project Management
- Alert Playbook Management
- Capacity Planning for GitLab Infrastructure
- Career Development in the Infrastructure Department
- Cells
Test Platform in Cells
- Test Platform in Cells
- Change Management
- Cost Management
GCP CUD
Group Cost Metrics
How to Engage
Infrafin
Infrastructure Analyst Board
Infrastructure Analyst Role
Learning Resources
AWS
GCP
P&L Allocation
- GCP CUD
- Group Cost Metrics
- How to Engage
- Infrafin
- Infrastructure Analyst Board
- Infrastructure Analyst Role
- Learning Resources
AWS
GCP
- AWS
- GCP
- P&L Allocation
- Database
Database: Disaster Recovery
- Database: Disaster Recovery
- Emergency Change Processes for GitLab SaaS
- Engineering Productivity team
Direction - GDK
Engineering productivity project management
Flaky tests management and processes
Issue Triage
SPACE: Satisfaction, Performance, Activity, Collaboration, and Efficiency
Test Intelligence
Triage Operations
Issue Triage Onboarding
Wider Community Merge Request Triage
Workflow Automation
- Direction - GDK
- Engineering productivity project management
- Flaky tests management and processes
- Issue Triage
- SPACE: Satisfaction, Performance, Activity, Collaboration, and Efficiency
- Test Intelligence
- Triage Operations
Issue Triage Onboarding
- Issue Triage Onboarding
- Wider Community Merge Request Triage
- Workflow Automation
- Getting Assistance on Infrastructure Platforms
- Incident Management
Incident Manager On Call onboarding
Tier-2 Oncall
- Incident Manager On Call onboarding
- Tier-2 Oncall
- Incident Review
- Infrastructure Department Frequently Asked Questions
- Infrastructure Department Performance Indicators
- Infrastructure Department Projects
- Infrastructure Environments
Environments Canary Stage
Staging Ref environment
- Environments Canary Stage
- Staging Ref environment
- Infrastructure Feature Support
- Infrastructure Product Management
- Network Security Management Procedure
- Production
Production Architecture
CI Service Architecture
Disaster Recovery Architecture
Supporting Architecture
Production Readiness Review
- Production Architecture
CI Service Architecture
Disaster Recovery Architecture
Supporting Architecture
- CI Service Architecture
- Disaster Recovery Architecture
- Supporting Architecture
- Production Readiness Review
- Rate Limiting
Bypass Policy
Managing Limits
Rate Limiting Troubleshooting
- Bypass Policy
- Managing Limits
- Rate Limiting Troubleshooting
- Release Tools
- Service Maturity Model
- Team
Cloud Connector Group
Application Performance Group - 2020 Impact
Application Performance Group - Approach and Common Themes
Application Performance Group - Knowledge Sharing
Cloud Connector - Technical vision
Distinguished Engineer, Infrastructure - Andrew Newdigate
FinOps Team
GitLab Dedicated Group
Environment Automation Team
GitLab Dedicated Architecture
From Dedicated to Cells: A Technical Analysis
GitLab Dedicated SLAs
Switchboard team
US Public Sector Services team
Production Engineering Ops Team
Disaster Recovery Practice (DR Gamedays)
EOC Onboarding Buddies
EOC Shadow and EOC Buddy Expectations
On-call handover
Production Engineering Ops Team Roadmaps
FY26 Production Engineering Ops Team Roadmaps
FY26 - Disaster Recovery
FY26 - Hosted Runners
FY26 - Incident Management
FY26 - Patching & OS Modernization
SRE Onboarding
Runway Team
Scalability Group
- Cloud Connector Group
Application Performance Group - 2020 Impact
Application Performance Group - Approach and Common Themes
Application Performance Group - Knowledge Sharing
Cloud Connector - Technical vision
- Application Performance Group - 2020 Impact
- Application Performance Group - Approach and Common Themes
- Application Performance Group - Knowledge Sharing
- Cloud Connector - Technical vision
- Distinguished Engineer, Infrastructure - Andrew Newdigate
- FinOps Team
- GitLab Dedicated Group
Environment Automation Team
GitLab Dedicated Architecture
From Dedicated to Cells: A Technical Analysis
GitLab Dedicated SLAs
Switchboard team
US Public Sector Services team
- Environment Automation Team
- GitLab Dedicated Architecture
From Dedicated to Cells: A Technical Analysis
- From Dedicated to Cells: A Technical Analysis
- GitLab Dedicated SLAs
- Switchboard team
- US Public Sector Services team
- Production Engineering Ops Team
Disaster Recovery Practice (DR Gamedays)
EOC Onboarding Buddies
EOC Shadow and EOC Buddy Expectations
On-call handover
Production Engineering Ops Team Roadmaps
FY26 Production Engineering Ops Team Roadmaps
FY26 - Disaster Recovery
FY26 - Hosted Runners
FY26 - Incident Management
FY26 - Patching & OS Modernization
SRE Onboarding
- Disaster Recovery Practice (DR Gamedays)
- EOC Onboarding Buddies
- EOC Shadow and EOC Buddy Expectations
- On-call handover
- Production Engineering Ops Team Roadmaps
FY26 Production Engineering Ops Team Roadmaps
FY26 - Disaster Recovery
FY26 - Hosted Runners
FY26 - Incident Management
FY26 - Patching & OS Modernization
- FY26 Production Engineering Ops Team Roadmaps
FY26 - Disaster Recovery
FY26 - Hosted Runners
FY26 - Incident Management
FY26 - Patching & OS Modernization
- FY26 - Disaster Recovery
- FY26 - Hosted Runners
- FY26 - Incident Management
- FY26 - Patching & OS Modernization
- SRE Onboarding
- Runway Team
- Scalability Group
- The Infrastructure Platforms Section
Infrastructure Platforms Tools Index
Runway
Platforms Processes
Calibration
The Infrastructure Platforms Hiring Process
The Infrastructure Platforms OKRs
The Infrastructure Platforms Project Management
- Infrastructure Platforms Tools Index
Runway
- Runway
- Platforms Processes
Calibration
- Calibration
- The Infrastructure Platforms Hiring Process
- The Infrastructure Platforms OKRs
- The Infrastructure Platforms Project Management
- Infrastructure Platforms
Data Access Sub Department
Data Access Durability Team
Database Framework Group
Container Registry on PostgreSQL
Crafting Queries with Postgres Ai Plans
Database Group Activity Log
Database Group Stable Counterparts
Database Lexicon - terms and definitions relating to our database
Database Partitioning
Database Strategy
Identifying Database Issues
Introduction to Background Migrations
Introduction to Database Review
Multi-database Background migrations
Partitioning - Issue group search
PostgreSQL 11 sharding with foreign data wrappers and partitioning
PostgreSQL Upgrade Cadence
Sharding GitLab by top-level namespace
Sharding GitLab with CitusDB
Understanding how Indexes Impact Performance on GitLab.com
Working with the GitLab.com database for developers
Workload analysis for GitLab.com
Database Help Workflow
Database Operations Team  (formerly known as the Database Reliablity Engineering (DBRE) team)
DBO Escalation Process
Git Team
Gitaly Team
Debugging the Gitaly service
Developer Experience
Bug Prioritization
Debugging Failing Tests and Test Pipelines
Developer Experience Dashboards
Developer Experience Design Documents
Developer Experience On-call Rotation
Developer Experience Onboarding
Developer Experience Project Management
Developer Tooling team
Development Analytics Group
Create triage policies with the assistance of GitLab Duo Workflow
End-to-end Pipeline Monitoring
Engineering Analytics Team
Feature Readiness
Performance Enablement
Browser Performance Testing
Observability Based Performance Testing at GitLab
Operational Verification
Performance Testing at GitLab
Test Platform in Distribution group
Pipeline Triage
Quality Engineering Learning Resources
Risk Mapping
Test Coverage
Test Governance Group
Test Governance Tips and Tricks
Test Platform Roadmap
GitLab Delivery
Delivery Group
Delivery Team Metrics
Delivery Team Training
Engineering Manager, Delivery
Distribution
Distribution Team Demo
Distribution Team Infrastructure and Maintenance
Distribution Team Infrastructure and Maintenance - Build Infrastructure
Distribution Team Infrastructure and Maintenance - dev.gitlab.org
Distribution Team Infrastructure: ARM
Distribution Team usage of Renovate
Distribution Team Kubernetes and OpenShift release support policy
Distribution Team Merge Request Handling
Distribution Team Training
Distribution Team Triage
Distribution Team Workflow
GitLab Delivery: Self Managed
GitLab Delivery:Framework
Reference Architectures - Validation and Testing
Production Engineering
Observability Team
Capacity Planning
Cost of Observability Stack
Error Budgets
Technical Blueprint
Production Engineering Foundations Team
Production Engineering Group - Project Management
Tenant Scale Group
Cells Infrastructure Team
Geo and Disaster Recovery
Geo and Disaster Recovery - Hierarchy of Agile Work Items
Geo and Disaster Recovery - Planning
Geo and Disaster Recovery - Retrospectives
Geo on staging.gitlab.com
Geo scheduled pipelines
Organizations Team
- Data Access Sub Department
Data Access Durability Team
Database Framework Group
Container Registry on PostgreSQL
Crafting Queries with Postgres Ai Plans
Database Group Activity Log
Database Group Stable Counterparts
Database Lexicon - terms and definitions relating to our database
Database Partitioning
Database Strategy
Identifying Database Issues
Introduction to Background Migrations
Introduction to Database Review
Multi-database Background migrations
Partitioning - Issue group search
PostgreSQL 11 sharding with foreign data wrappers and partitioning
PostgreSQL Upgrade Cadence
Sharding GitLab by top-level namespace
Sharding GitLab with CitusDB
Understanding how Indexes Impact Performance on GitLab.com
Working with the GitLab.com database for developers
Workload analysis for GitLab.com
Database Help Workflow
Database Operations Team  (formerly known as the Database Reliablity Engineering (DBRE) team)
DBO Escalation Process
Git Team
Gitaly Team
Debugging the Gitaly service
- Data Access Durability Team
- Database Framework Group
Container Registry on PostgreSQL
Crafting Queries with Postgres Ai Plans
Database Group Activity Log
Database Group Stable Counterparts
Database Lexicon - terms and definitions relating to our database
Database Partitioning
Database Strategy
Identifying Database Issues
Introduction to Background Migrations
Introduction to Database Review
Multi-database Background migrations
Partitioning - Issue group search
PostgreSQL 11 sharding with foreign data wrappers and partitioning
PostgreSQL Upgrade Cadence
Sharding GitLab by top-level namespace
Sharding GitLab with CitusDB
Understanding how Indexes Impact Performance on GitLab.com
Working with the GitLab.com database for developers
Workload analysis for GitLab.com
- Container Registry on PostgreSQL
- Crafting Queries with Postgres Ai Plans
- Database Group Activity Log
- Database Group Stable Counterparts
- Database Lexicon - terms and definitions relating to our database
- Database Partitioning
- Database Strategy
- Identifying Database Issues
- Introduction to Background Migrations
- Introduction to Database Review
- Multi-database Background migrations
- Partitioning - Issue group search
- PostgreSQL 11 sharding with foreign data wrappers and partitioning
- PostgreSQL Upgrade Cadence
- Sharding GitLab by top-level namespace
- Sharding GitLab with CitusDB
- Understanding how Indexes Impact Performance on GitLab.com
- Working with the GitLab.com database for developers
- Workload analysis for GitLab.com
- Database Help Workflow
- Database Operations Team  (formerly known as the Database Reliablity Engineering (DBRE) team)
DBO Escalation Process
- DBO Escalation Process
- Git Team
- Gitaly Team
Debugging the Gitaly service
- Debugging the Gitaly service
- Developer Experience
Bug Prioritization
Debugging Failing Tests and Test Pipelines
Developer Experience Dashboards
Developer Experience Design Documents
Developer Experience On-call Rotation
Developer Experience Onboarding
Developer Experience Project Management
Developer Tooling team
Development Analytics Group
Create triage policies with the assistance of GitLab Duo Workflow
End-to-end Pipeline Monitoring
Engineering Analytics Team
Feature Readiness
Performance Enablement
Browser Performance Testing
Observability Based Performance Testing at GitLab
Operational Verification
Performance Testing at GitLab
Test Platform in Distribution group
Pipeline Triage
Quality Engineering Learning Resources
Risk Mapping
Test Coverage
Test Governance Group
Test Governance Tips and Tricks
Test Platform Roadmap
- Bug Prioritization
- Debugging Failing Tests and Test Pipelines
- Developer Experience Dashboards
- Developer Experience Design Documents
- Developer Experience On-call Rotation
- Developer Experience Onboarding
- Developer Experience Project Management
- Developer Tooling team
- Development Analytics Group
Create triage policies with the assistance of GitLab Duo Workflow
- Create triage policies with the assistance of GitLab Duo Workflow
- End-to-end Pipeline Monitoring
- Engineering Analytics Team
- Feature Readiness
- Performance Enablement
Browser Performance Testing
Observability Based Performance Testing at GitLab
Operational Verification
Performance Testing at GitLab
Test Platform in Distribution group
- Browser Performance Testing
- Observability Based Performance Testing at GitLab
- Operational Verification
- Performance Testing at GitLab
- Test Platform in Distribution group
- Pipeline Triage
- Quality Engineering Learning Resources
- Risk Mapping
- Test Coverage
- Test Governance Group
- Test Governance Tips and Tricks
- Test Platform Roadmap
- GitLab Delivery
Delivery Group
Delivery Team Metrics
Delivery Team Training
Engineering Manager, Delivery
Distribution
Distribution Team Demo
Distribution Team Infrastructure and Maintenance
Distribution Team Infrastructure and Maintenance - Build Infrastructure
Distribution Team Infrastructure and Maintenance - dev.gitlab.org
Distribution Team Infrastructure: ARM
Distribution Team usage of Renovate
Distribution Team Kubernetes and OpenShift release support policy
Distribution Team Merge Request Handling
Distribution Team Training
Distribution Team Triage
Distribution Team Workflow
GitLab Delivery: Self Managed
GitLab Delivery:Framework
Reference Architectures - Validation and Testing
- Delivery Group
Delivery Team Metrics
Delivery Team Training
Engineering Manager, Delivery
- Delivery Team Metrics
- Delivery Team Training
- Engineering Manager, Delivery
- Distribution
Distribution Team Demo
Distribution Team Infrastructure and Maintenance
Distribution Team Infrastructure and Maintenance - Build Infrastructure
Distribution Team Infrastructure and Maintenance - dev.gitlab.org
Distribution Team Infrastructure: ARM
Distribution Team usage of Renovate
Distribution Team Kubernetes and OpenShift release support policy
Distribution Team Merge Request Handling
Distribution Team Training
Distribution Team Triage
Distribution Team Workflow
- Distribution Team Demo
- Distribution Team Infrastructure and Maintenance
Distribution Team Infrastructure and Maintenance - Build Infrastructure
Distribution Team Infrastructure and Maintenance - dev.gitlab.org
Distribution Team Infrastructure: ARM
Distribution Team usage of Renovate
- Distribution Team Infrastructure and Maintenance - Build Infrastructure
- Distribution Team Infrastructure and Maintenance - dev.gitlab.org
- Distribution Team Infrastructure: ARM
- Distribution Team usage of Renovate
- Distribution Team Kubernetes and OpenShift release support policy
- Distribution Team Merge Request Handling
- Distribution Team Training
- Distribution Team Triage
- Distribution Team Workflow
- GitLab Delivery: Self Managed
- GitLab Delivery:Framework
Reference Architectures - Validation and Testing
- Reference Architectures - Validation and Testing
- Production Engineering
Observability Team
Capacity Planning
Cost of Observability Stack
Error Budgets
Technical Blueprint
Production Engineering Foundations Team
Production Engineering Group - Project Management
- Observability Team
Capacity Planning
Cost of Observability Stack
Error Budgets
Technical Blueprint
- Capacity Planning
- Cost of Observability Stack
- Error Budgets
- Technical Blueprint
- Production Engineering Foundations Team
- Production Engineering Group - Project Management
- Tenant Scale Group
Cells Infrastructure Team
Geo and Disaster Recovery
Geo and Disaster Recovery - Hierarchy of Agile Work Items
Geo and Disaster Recovery - Planning
Geo and Disaster Recovery - Retrospectives
Geo on staging.gitlab.com
Geo scheduled pipelines
Organizations Team
- Cells Infrastructure Team
- Geo and Disaster Recovery
Geo and Disaster Recovery - Hierarchy of Agile Work Items
Geo and Disaster Recovery - Planning
Geo and Disaster Recovery - Retrospectives
Geo on staging.gitlab.com
Geo scheduled pipelines
- Geo and Disaster Recovery - Hierarchy of Agile Work Items
- Geo and Disaster Recovery - Planning
- Geo and Disaster Recovery - Retrospectives
- Geo on staging.gitlab.com
- Geo scheduled pipelines
- Organizations Team
- Innovation at GitLab
- Joint R&D OKR Process
- Monitoring of GitLab.com
Staging Monitoring
- Staging Monitoring
- On-Call
- Open Source at GitLab
Open Source Growth Strategy
- Open Source Growth Strategy
- Performance
- Policies related to GitLab.com
Backups of GitLab.com
GitLab Teleport Access Policy
Monitoring of GitLab.com
- Backups of GitLab.com
- GitLab Teleport Access Policy
- Monitoring of GitLab.com
- R&D Tax Credits
- Recognition in Engineering
- Releases
Backports
Internal Releases
Patch Releases
- Backports
- Internal Releases
- Patch Releases
- Root Cause Analysis
- Starting new teams
- Unplanned Upgrade Stop Workflow
- Enterprise Data Team
Data Governance
Data Catalog
Data Quality
Data Team Data Management Page
Data Team - How We Work
Contributing to the Data Team Project
CI Jobs You Should Know About on Any MR
Preparing Your MR for Merging
Working in the GitLab Web IDE
Data Development
Data Team - Planning Process
Data Team Calendar - Meetings
Data Triage Guide
dbt Change Workflow
Functional Analytics Center of Excellence
Merge Request Roles and Responsibilities
New Data Source
Data Team Organization
Analytics Engineering at GitLab
Data Analytics at GitLab
Data Platform at GitLab
Data Science Handbook
Data Science Project Development Approach
Data Steering Committee at GitLab
Data Team Internships
Data Team Learning and Resources
Data Team Programs
Data For Product Managers
Enterprise Data & Insights Team Operating Principles
Learnings From Internships
SRE Internship
Data Team Platform
AWS Data Team Guide
Data Infrastructure
Data pipelines
Data Platform Security
Web Application Penetration Testing Process
Data Team CI Jobs
Data with GitLab Duo
Duo Inspiration Hub
dbt Guide
Enterprise Data Warehouse
GDPR deletions
Getting Started With CI/CD for Data Science Pipelines
Jupyter Guide
Monte Carlo Guide
Permifrost
Python Guide
Python/Tools package management and inventory
RStudio Guide
SAFE Data Guide
Snowflake Guide
Clustering in Snowflake
Snowflake SNS integration for Snowflake SnowPipe and task for failure
Snowflake warehouse optimization
Snowplow
SQL Style Guide
Tableau
Handbook Embedding Demonstration Page
Tableau Admin Guide
Tableau Developer Guide
Tableau Developer Tips and Tricks
Tableau Style Guide
Tableau Project Leaders Guide
Using Feast
- Data Governance
Data Catalog
Data Quality
Data Team Data Management Page
- Data Catalog
- Data Quality
- Data Team Data Management Page
- Data Team - How We Work
Contributing to the Data Team Project
CI Jobs You Should Know About on Any MR
Preparing Your MR for Merging
Working in the GitLab Web IDE
Data Development
Data Team - Planning Process
Data Team Calendar - Meetings
Data Triage Guide
dbt Change Workflow
Functional Analytics Center of Excellence
Merge Request Roles and Responsibilities
New Data Source
- Contributing to the Data Team Project
CI Jobs You Should Know About on Any MR
Preparing Your MR for Merging
Working in the GitLab Web IDE
- CI Jobs You Should Know About on Any MR
- Preparing Your MR for Merging
- Working in the GitLab Web IDE
- Data Development
- Data Team - Planning Process
- Data Team Calendar - Meetings
- Data Triage Guide
- dbt Change Workflow
- Functional Analytics Center of Excellence
- Merge Request Roles and Responsibilities
- New Data Source
- Data Team Organization
Analytics Engineering at GitLab
Data Analytics at GitLab
Data Platform at GitLab
Data Science Handbook
Data Science Project Development Approach
Data Steering Committee at GitLab
Data Team Internships
Data Team Learning and Resources
Data Team Programs
Data For Product Managers
Enterprise Data & Insights Team Operating Principles
Learnings From Internships
SRE Internship
- Analytics Engineering at GitLab
- Data Analytics at GitLab
- Data Platform at GitLab
- Data Science Handbook
Data Science Project Development Approach
- Data Science Project Development Approach
- Data Steering Committee at GitLab
- Data Team Internships
- Data Team Learning and Resources
- Data Team Programs
Data For Product Managers
- Data For Product Managers
- Enterprise Data & Insights Team Operating Principles
- Learnings From Internships
SRE Internship
- SRE Internship
- Data Team Platform
AWS Data Team Guide
Data Infrastructure
Data pipelines
Data Platform Security
Web Application Penetration Testing Process
Data Team CI Jobs
Data with GitLab Duo
Duo Inspiration Hub
dbt Guide
Enterprise Data Warehouse
GDPR deletions
Getting Started With CI/CD for Data Science Pipelines
Jupyter Guide
Monte Carlo Guide
Permifrost
Python Guide
Python/Tools package management and inventory
RStudio Guide
SAFE Data Guide
Snowflake Guide
Clustering in Snowflake
Snowflake SNS integration for Snowflake SnowPipe and task for failure
Snowflake warehouse optimization
Snowplow
SQL Style Guide
Tableau
Handbook Embedding Demonstration Page
Tableau Admin Guide
Tableau Developer Guide
Tableau Developer Tips and Tricks
Tableau Style Guide
Tableau Project Leaders Guide
Using Feast
- AWS Data Team Guide
- Data Infrastructure
- Data pipelines
- Data Platform Security
Web Application Penetration Testing Process
- Web Application Penetration Testing Process
- Data Team CI Jobs
- Data with GitLab Duo
Duo Inspiration Hub
- Duo Inspiration Hub
- dbt Guide
- Enterprise Data Warehouse
- GDPR deletions
- Getting Started With CI/CD for Data Science Pipelines
- Jupyter Guide
- Monte Carlo Guide
- Permifrost
- Python Guide
- Python/Tools package management and inventory
- RStudio Guide
- SAFE Data Guide
- Snowflake Guide
Clustering in Snowflake
Snowflake SNS integration for Snowflake SnowPipe and task for failure
- Clustering in Snowflake
- Snowflake SNS integration for Snowflake SnowPipe and task for failure
- Snowflake warehouse optimization
- Snowplow
- SQL Style Guide
- Tableau
Handbook Embedding Demonstration Page
Tableau Admin Guide
Tableau Developer Guide
Tableau Developer Tips and Tricks
Tableau Style Guide
Tableau Project Leaders Guide
- Handbook Embedding Demonstration Page
- Tableau Admin Guide
- Tableau Developer Guide
Tableau Developer Tips and Tricks
Tableau Style Guide
- Tableau Developer Tips and Tricks
- Tableau Style Guide
- Tableau Project Leaders Guide
- Using Feast
- Entity-Specific Information
Entity-Specific Employment Policies
GitLab GmbH (Germany) information & benefits
GitLab Iberia s.r.l. (Spain) Information and Benefits
GitLab Israel Ltd. information & benefits
- Entity-Specific Employment Policies
- GitLab GmbH (Germany) information & benefits
- GitLab Iberia s.r.l. (Spain) Information and Benefits
- GitLab Israel Ltd. information & benefits
- Executive Business Administrators (EBAs)
CEO Scheduling & Preferences
E-Group Scheduling
VP Scheduling
- CEO Scheduling & Preferences
- E-Group Scheduling
- VP Scheduling
- Finance
Accounting and Reporting
Financial Operations
Billing Operations
Billing Operations, GPO
NetSuite Tech Stack Guide
Accounts Payable
Coupa Tech Stack Guide
Navan Expense Tech Stack Guide
Navan Physical Card
Virtual Card Guide for Accounts Payable
Authorization Matrix
Committee Composition
Finance Growth and Development
CFO Shadow Program
Finance Learning and Development
Finance Learning and Development
Finance Mentorship Program
Under Construction - FinBT Mentorship Program
Finance Team Performance Indicators
Financial Planning & Analysis
Adaptive Insights
Corporate FP&A
FP&A Definitions
FP&A Metrics
FP&A Processes
FP&A Team Structure
G&A Finance
GTM Analytics Hub
Headcount Metrics and Processes
R&D Finance
Hosting
GitLab Finance Team READMEs
Brian Robin's README
Brijen Joshi's README
James (Jim) Gladen's README
James Shen's README
Julie Malloy's README
Kelsey Turcotte's README
Nabitha Rao's README
Simon Mundy's README
Global Travel and Expense Policy
Investor Relations
Payroll
Sales Compensation Plan
Spending Company Money
The GitLab Procurement Team
Charitable Contribution Requests
Contingent Worker Policy
Coupa FAQ
External Consultant Orientation & Access Deprovisioning
Field Marketing and Events
Home Office Equipment and Supplies
Individual Use Software
Non-Cost related Agreements
Tips for Submitting a Zip Request
Vendor Guidelines
Legacy Vendor Terms and Conditions v1
Vendor Terms and Conditions
Virtual Cards
The GitLab Tax Team
The Internal Audit Function
Sarbanes-Oxley (SOX) Program
Timekeeping Policies and Procedures
Travel Safety and Security
Sponsored Travel
- Accounting and Reporting
Financial Operations
Billing Operations
Billing Operations, GPO
NetSuite Tech Stack Guide
- Financial Operations
Billing Operations
Billing Operations, GPO
NetSuite Tech Stack Guide
- Billing Operations
- Billing Operations, GPO
- NetSuite Tech Stack Guide
- Accounts Payable
Coupa Tech Stack Guide
Navan Expense Tech Stack Guide
Navan Physical Card
Virtual Card Guide for Accounts Payable
- Coupa Tech Stack Guide
- Navan Expense Tech Stack Guide
- Navan Physical Card
- Virtual Card Guide for Accounts Payable
- Authorization Matrix
- Committee Composition
- Finance Growth and Development
CFO Shadow Program
Finance Learning and Development
Finance Learning and Development
Finance Mentorship Program
Under Construction - FinBT Mentorship Program
- CFO Shadow Program
- Finance Learning and Development
- Finance Learning and Development
- Finance Mentorship Program
- Under Construction - FinBT Mentorship Program
- Finance Team Performance Indicators
- Financial Planning & Analysis
Adaptive Insights
Corporate FP&A
FP&A Definitions
FP&A Metrics
FP&A Processes
FP&A Team Structure
G&A Finance
GTM Analytics Hub
Headcount Metrics and Processes
R&D Finance
Hosting
- Adaptive Insights
- Corporate FP&A
- FP&A Definitions
- FP&A Metrics
- FP&A Processes
- FP&A Team Structure
- G&A Finance
- GTM Analytics Hub
- Headcount Metrics and Processes
- R&D Finance
Hosting
- Hosting
- GitLab Finance Team READMEs
Brian Robin's README
Brijen Joshi's README
James (Jim) Gladen's README
James Shen's README
Julie Malloy's README
Kelsey Turcotte's README
Nabitha Rao's README
Simon Mundy's README
- Brian Robin's README
- Brijen Joshi's README
- James (Jim) Gladen's README
- James Shen's README
- Julie Malloy's README
- Kelsey Turcotte's README
- Nabitha Rao's README
- Simon Mundy's README
- Global Travel and Expense Policy
- Investor Relations
- Payroll
- Sales Compensation Plan
- Spending Company Money
- The GitLab Procurement Team
Charitable Contribution Requests
Contingent Worker Policy
Coupa FAQ
External Consultant Orientation & Access Deprovisioning
Field Marketing and Events
Home Office Equipment and Supplies
Individual Use Software
Non-Cost related Agreements
Tips for Submitting a Zip Request
Vendor Guidelines
Legacy Vendor Terms and Conditions v1
Vendor Terms and Conditions
Virtual Cards
- Charitable Contribution Requests
- Contingent Worker Policy
- Coupa FAQ
- External Consultant Orientation & Access Deprovisioning
- Field Marketing and Events
- Home Office Equipment and Supplies
- Individual Use Software
- Non-Cost related Agreements
- Tips for Submitting a Zip Request
- Vendor Guidelines
Legacy Vendor Terms and Conditions v1
Vendor Terms and Conditions
- Legacy Vendor Terms and Conditions v1
- Vendor Terms and Conditions
- Virtual Cards
- The GitLab Tax Team
- The Internal Audit Function
Sarbanes-Oxley (SOX) Program
- Sarbanes-Oxley (SOX) Program
- Timekeeping Policies and Procedures
- Travel Safety and Security
Sponsored Travel
- Sponsored Travel
- GitLab Alliances Handbook
GitLab Integration Instructions
- GitLab Integration Instructions
- GitLab Channel Partner Program
Channel Partner Tools and Resources
Channel Partners: Working with GitLab
Developing your GitLab Practice
Channel Services Catalog
GitLab Channel Program Guide
Marketing Development Funds
GitLab Partner Champions Program
Partner Technical Presales Enablement
Channel Partner Implementation Services
Channel Partner Migration Services
Partner Training, Accreditations, and Enablement
- Channel Partner Tools and Resources
- Channel Partners: Working with GitLab
- Developing your GitLab Practice
Channel Services Catalog
- Channel Services Catalog
- GitLab Channel Program Guide
Marketing Development Funds
- Marketing Development Funds
- GitLab Partner Champions Program
- Partner Technical Presales Enablement
Channel Partner Implementation Services
Channel Partner Migration Services
- Channel Partner Implementation Services
- Channel Partner Migration Services
- Partner Training, Accreditations, and Enablement
- GitLab Communication
Ally Resources
Ask Me Anything
Confidentiality levels
Deep Dives
GitLab Communication ‚Äî Zoom
GitLab Webinars on Zoom
GitLab Communication Chat
GitLab Video Playbook
Power of the Pause
Top Misused Terms - GitLab Communication
- Ally Resources
- Ask Me Anything
- Confidentiality levels
- Deep Dives
- GitLab Communication ‚Äî Zoom
GitLab Webinars on Zoom
- GitLab Webinars on Zoom
- GitLab Communication Chat
- GitLab Video Playbook
- Power of the Pause
- Top Misused Terms - GitLab Communication
- GitLab's Guide to Total Rewards
Benefits
General & Entity Specific Benefits & Information
Financial Wellness
GitLab BV (Belgium) Benefits
GitLab BV (Finland) Benefits
GitLab BV (Netherlands) Benefits
GitLab Canada Corp
GitLab France S.A.S.
GitLab GK (Japan) Benefits
GitLab Inc (US) Benefits
Total Rewards Processes & Audits for US benefits
GitLab Ireland Ltd
GitLab Korea Limited Benefits
GitLab LTD (UK) Benefits
GitLab Singapore Pte Ltd
Global Expansion
Global Upside Benefits
Papaya-Global
PTY LTD Benefits
Remote.com
Leave of Absence Tool Kit for Managers and Team Members
Modern Health
Compensation
Annual Compensation Review Cycle
Compensation Review Cycle Inputs
The Compensation Calculator
Compensation Calculator
Equity Compensation
Incentives at GitLab
- Benefits
General & Entity Specific Benefits & Information
Financial Wellness
GitLab BV (Belgium) Benefits
GitLab BV (Finland) Benefits
GitLab BV (Netherlands) Benefits
GitLab Canada Corp
GitLab France S.A.S.
GitLab GK (Japan) Benefits
GitLab Inc (US) Benefits
Total Rewards Processes & Audits for US benefits
GitLab Ireland Ltd
GitLab Korea Limited Benefits
GitLab LTD (UK) Benefits
GitLab Singapore Pte Ltd
Global Expansion
Global Upside Benefits
Papaya-Global
PTY LTD Benefits
Remote.com
Leave of Absence Tool Kit for Managers and Team Members
Modern Health
- General & Entity Specific Benefits & Information
Financial Wellness
GitLab BV (Belgium) Benefits
GitLab BV (Finland) Benefits
GitLab BV (Netherlands) Benefits
GitLab Canada Corp
GitLab France S.A.S.
GitLab GK (Japan) Benefits
GitLab Inc (US) Benefits
Total Rewards Processes & Audits for US benefits
GitLab Ireland Ltd
GitLab Korea Limited Benefits
GitLab LTD (UK) Benefits
GitLab Singapore Pte Ltd
Global Expansion
Global Upside Benefits
Papaya-Global
PTY LTD Benefits
Remote.com
- Financial Wellness
- GitLab BV (Belgium) Benefits
- GitLab BV (Finland) Benefits
- GitLab BV (Netherlands) Benefits
- GitLab Canada Corp
- GitLab France S.A.S.
- GitLab GK (Japan) Benefits
- GitLab Inc (US) Benefits
Total Rewards Processes & Audits for US benefits
- Total Rewards Processes & Audits for US benefits
- GitLab Ireland Ltd
- GitLab Korea Limited Benefits
- GitLab LTD (UK) Benefits
- GitLab Singapore Pte Ltd
- Global Expansion
- Global Upside Benefits
- Papaya-Global
- PTY LTD Benefits
- Remote.com
- Leave of Absence Tool Kit for Managers and Team Members
- Modern Health
- Compensation
Annual Compensation Review Cycle
Compensation Review Cycle Inputs
The Compensation Calculator
Compensation Calculator
- Annual Compensation Review Cycle
Compensation Review Cycle Inputs
- Compensation Review Cycle Inputs
- The Compensation Calculator
Compensation Calculator
- Compensation Calculator
- Equity Compensation
- Incentives at GitLab
- Hiring & Talent Acquisition Handbook
Candidate Handbook Page
Recruitment Privacy Policy
Conducting a GitLab Interview
Contractor Conversions
Emerging Talent @ GitLab
GitLab talent ambassador
Greenhouse
Interviewer Prep Requirements
Interviewing at GitLab - Customer Support
Interviewing at GitLab - Infrastructure
Panel Interviews
Technical Interviews
Job Families
MERGE: Ongoing Development for Associate Engineers
ModernLoop
Referral Operations
Referral Program and Process
Sourcing
Talent Acquisition Alignment
Talent Acquisition Process Framework
Candidate Experience Specialist Responsibilities
Evergreen Requisitions
GitLab Talent Acquisition Process Framework for Talent Pools
Internal Hiring Process
Talent Acquisition Job Offer Process
Talent Acquisition Process - Acquisitions
Talent Acquisition Process - Hiring Manager Tasks
Talent Acquisition Process Framework for Creating REQs
Talent Acquisition Process Framework for REQs
Triad Process
Talent Acquisition Productivity
- Candidate Handbook Page
Recruitment Privacy Policy
- Recruitment Privacy Policy
- Conducting a GitLab Interview
- Contractor Conversions
- Emerging Talent @ GitLab
- GitLab talent ambassador
- Greenhouse
- Interviewer Prep Requirements
Interviewing at GitLab - Customer Support
Interviewing at GitLab - Infrastructure
Panel Interviews
Technical Interviews
- Interviewing at GitLab - Customer Support
- Interviewing at GitLab - Infrastructure
- Panel Interviews
- Technical Interviews
- Job Families
- MERGE: Ongoing Development for Associate Engineers
- ModernLoop
- Referral Operations
- Referral Program and Process
- Sourcing
- Talent Acquisition Alignment
- Talent Acquisition Process Framework
Candidate Experience Specialist Responsibilities
Evergreen Requisitions
GitLab Talent Acquisition Process Framework for Talent Pools
Internal Hiring Process
Talent Acquisition Job Offer Process
Talent Acquisition Process - Acquisitions
Talent Acquisition Process - Hiring Manager Tasks
Talent Acquisition Process Framework for Creating REQs
Talent Acquisition Process Framework for REQs
Triad Process
- Candidate Experience Specialist Responsibilities
- Evergreen Requisitions
- GitLab Talent Acquisition Process Framework for Talent Pools
- Internal Hiring Process
- Talent Acquisition Job Offer Process
- Talent Acquisition Process - Acquisitions
- Talent Acquisition Process - Hiring Manager Tasks
- Talent Acquisition Process Framework for Creating REQs
- Talent Acquisition Process Framework for REQs
- Triad Process
- Talent Acquisition Productivity
- IT
End User Services
GitLab IT 101
GitLab Laptop Management
Access Requests (AR)
Access Requests (AR) FAQs
How To Use Gmail Delegate
How To Use Google Calendar Delegate
How To Use Google Drive Sharing
Information Technology (IT) Department
Okta
Okta FAQs
Okta Admin Onboarding
- End User Services
GitLab IT 101
GitLab Laptop Management
Access Requests (AR)
Access Requests (AR) FAQs
How To Use Gmail Delegate
How To Use Google Calendar Delegate
How To Use Google Drive Sharing
- GitLab IT 101
- GitLab Laptop Management
Access Requests (AR)
Access Requests (AR) FAQs
- Access Requests (AR)
Access Requests (AR) FAQs
- Access Requests (AR) FAQs
- How To Use Gmail Delegate
- How To Use Google Calendar Delegate
- How To Use Google Drive Sharing
- Information Technology (IT) Department
- Okta
Okta FAQs
- Okta FAQs
- Okta Admin Onboarding
- IT Enterprise Applications
Business Technology - Tech Stack Details
Documentation
Policies
Business Continuity Plan
Procedures
Enterprise Applications READMEs
Analissa 'Ana' Moreno's README
Arif Willis-Browne's README
Barbara Roncato's README
Bien Balaba's README
Caroline Swanson's README
Chavit Casabar's README
David Kim README
Derek Isla's README
Kavya Nanjappa's README
Louis Dwans README
Marc Di Sabatino's README
Monali Bhide's README
Nico Sandoval's README
Renz Santos's README
Rey Manlangit's README
Sarah Pang's README
Sharath Shanker's README
Xander Liwanag's README
Infrastructure Reference Links
Organizational Structure
Architecture & Integrations
Enterprise Application Guides
Coupa End Users Guide
Coupa End Users Quick Guide
Coupa Prepaid Automation Process
Coupa Supplier Management
Coupa Virtual Card Guide
Finance Guides
Finance System Guides
HelpLab Information Guide
Navan Expense End Users Guide
NS Custom Field guide
Product Catalog Guide
Salesforce Mobile App Users Guide
Zip End Users Guide
Zuora - Enterprise Application Guides
Zuora Collect module
Enterprise Applications - CRM Team
Finance Systems Access Requests
Quote to Cash Documentation
Quote to Cash Entity Relationship Diagrams
Troubleshooting: True Ups, Licenses + EULAs
Enterprise Applications - PMO
Governance and IT Program Management
Enterprise Applications Team G&A (Finance Systems)
IT Compliance
IT Enterprise Applications Services
Rolly
Services
Robotic Process Automation (RPA)
Tech Stack Applications
Tech Stack Guide Reference
Tools
Postman
- Business Technology - Tech Stack Details
- Documentation
Policies
Business Continuity Plan
Procedures
- Policies
Business Continuity Plan
- Business Continuity Plan
- Procedures
- Enterprise Applications READMEs
Analissa 'Ana' Moreno's README
Arif Willis-Browne's README
Barbara Roncato's README
Bien Balaba's README
Caroline Swanson's README
Chavit Casabar's README
David Kim README
Derek Isla's README
Kavya Nanjappa's README
Louis Dwans README
Marc Di Sabatino's README
Monali Bhide's README
Nico Sandoval's README
Renz Santos's README
Rey Manlangit's README
Sarah Pang's README
Sharath Shanker's README
Xander Liwanag's README
- Analissa 'Ana' Moreno's README
- Arif Willis-Browne's README
- Barbara Roncato's README
- Bien Balaba's README
- Caroline Swanson's README
- Chavit Casabar's README
- David Kim README
- Derek Isla's README
- Kavya Nanjappa's README
- Louis Dwans README
- Marc Di Sabatino's README
- Monali Bhide's README
- Nico Sandoval's README
- Renz Santos's README
- Rey Manlangit's README
- Sarah Pang's README
- Sharath Shanker's README
- Xander Liwanag's README
- Infrastructure Reference Links
- Organizational Structure
Architecture & Integrations
Enterprise Application Guides
Coupa End Users Guide
Coupa End Users Quick Guide
Coupa Prepaid Automation Process
Coupa Supplier Management
Coupa Virtual Card Guide
Finance Guides
Finance System Guides
HelpLab Information Guide
Navan Expense End Users Guide
NS Custom Field guide
Product Catalog Guide
Salesforce Mobile App Users Guide
Zip End Users Guide
Zuora - Enterprise Application Guides
Zuora Collect module
Enterprise Applications - CRM Team
Finance Systems Access Requests
Quote to Cash Documentation
Quote to Cash Entity Relationship Diagrams
Troubleshooting: True Ups, Licenses + EULAs
Enterprise Applications - PMO
Governance and IT Program Management
Enterprise Applications Team G&A (Finance Systems)
IT Compliance
IT Enterprise Applications Services
- Architecture & Integrations
- Enterprise Application Guides
Coupa End Users Guide
Coupa End Users Quick Guide
Coupa Prepaid Automation Process
Coupa Supplier Management
Coupa Virtual Card Guide
Finance Guides
Finance System Guides
HelpLab Information Guide
Navan Expense End Users Guide
NS Custom Field guide
Product Catalog Guide
Salesforce Mobile App Users Guide
Zip End Users Guide
Zuora - Enterprise Application Guides
Zuora Collect module
- Coupa End Users Guide
- Coupa End Users Quick Guide
- Coupa Prepaid Automation Process
- Coupa Supplier Management
- Coupa Virtual Card Guide
- Finance Guides
Finance System Guides
- Finance System Guides
- HelpLab Information Guide
- Navan Expense End Users Guide
- NS Custom Field guide
- Product Catalog Guide
- Salesforce Mobile App Users Guide
- Zip End Users Guide
- Zuora - Enterprise Application Guides
- Zuora Collect module
- Enterprise Applications - CRM Team
Finance Systems Access Requests
Quote to Cash Documentation
Quote to Cash Entity Relationship Diagrams
Troubleshooting: True Ups, Licenses + EULAs
- Finance Systems Access Requests
- Quote to Cash Documentation
Quote to Cash Entity Relationship Diagrams
Troubleshooting: True Ups, Licenses + EULAs
- Quote to Cash Entity Relationship Diagrams
- Troubleshooting: True Ups, Licenses + EULAs
- Enterprise Applications - PMO
Governance and IT Program Management
- Governance and IT Program Management
- Enterprise Applications Team G&A (Finance Systems)
- IT Compliance
- IT Enterprise Applications Services
- Rolly
- Services
Robotic Process Automation (RPA)
- Robotic Process Automation (RPA)
- Tech Stack Applications
- Tech Stack Guide Reference
- Tools
Postman
- Postman
- Labor and Employment Notices
Offboarding Documents & Notices
- Offboarding Documents & Notices
- Leadership
1-1
Suggested 1:1 Agenda and Daily Standup Format
Biggest Tailwinds
Book clubs
Building Trust at GitLab
Coaching
Compensation Review Conversations
Crucial Conversations
Effective Delegation
Emotional Intelligence
Clifton Strengths:Unlocking Team Potential at Gitlab
Psychological Safety
Psychological Safety Short Course
GitLab Onsites - Getting your team together in person
High Output Management
Identifying & Addressing Burnout
Making Decisions
Managing Conflict
Leading through Adversity
No Matrix Organization
Skip Level Meetings - Overview
Underperformance
Workforce Planning
- 1-1
Suggested 1:1 Agenda and Daily Standup Format
- Suggested 1:1 Agenda and Daily Standup Format
- Biggest Tailwinds
- Book clubs
- Building Trust at GitLab
- Coaching
- Compensation Review Conversations
- Crucial Conversations
- Effective Delegation
- Emotional Intelligence
Clifton Strengths:Unlocking Team Potential at Gitlab
Psychological Safety
Psychological Safety Short Course
- Clifton Strengths:Unlocking Team Potential at Gitlab
- Psychological Safety
- Psychological Safety Short Course
- GitLab Onsites - Getting your team together in person
- High Output Management
- Identifying & Addressing Burnout
- Making Decisions
- Managing Conflict
Leading through Adversity
- Leading through Adversity
- No Matrix Organization
- Skip Level Meetings - Overview
- Underperformance
- Workforce Planning
- Legal & Corporate Affairs ("LACA")
Agile Planning Terms
Agile Planning Terms V1
AI Functionality Terms
AI Functionality Terms V1
AI Functionality Terms V2
AI Functionality Terms V3
Anti-Corruption Policy
Anti-Fraud Policy
Anti-Retaliation Policy
Code of Business Conduct & Ethics
Commercial Legal
Content Removal Guidelines
Contract Management and Storage
Corporate & Compliance Legal
Corporate Communications Policy
DORA (Digital Operational Resilience Act) Mapping
EU Illegal Content Report Form
External Materials Compliance Checklist
Fulfillment Reseller Flow-Through Terms
GitLab Acceptable Use Policy
GitLab API Terms of Use
GitLab Data Processing Addendum and Standard Contractual Clauses
GitLab for Education Program Agreement
GitLab for Open Source Program Agreement
GitLab Inc. Philanthropy Policy
GitLab Legal Team READMEs
Emily Plotkin's README
Joel Fluss' README
Miguel Silva's README
Rashmi Chachra's README
Stacy's readme
GitLab Modern Slavery Act Transparency Statement
GitLab Privacy
Customer Product Usage Information
Data Protection Impact Assessment (DPIA)
Employee Privacy Policy
FAQ - Customer Product Usage Events
Guidelines for Law Enforcement Requests
Personal Data Requests
GitLab Professional Services Terms
GitLab Related Party Transactions Policy
GitLab SAFE Framework
GitLab Subscription Agreement
GitLab Testing Agreement
GitLab Testing Agreement v1
GitLab Testing Agreement v2
GitLab Testing Agreement V3
GitLab Testing Agreement v4
GitLab's Ethics and Compliance Program
GitLab AI Ethics Principles for Product Development
Learning Content Accessibility Guidelines
Guidelines for Use of Third-party IP in External Materials
Guidelines on public discussion of competitor product features
Legacy Terms and Agreements
GitLab Professional Services Agreement V2
GitLab Professional Services Agreement V3
GitLab Subscription Agreement V5
Legacy v1: GitLab Open Source Program Agreement
Legacy v1: GitLab Professional Services Agreement
LEGACY: GitLab Subscription Agreement
LEGACY: GitLab Subscription Agreement V3
LEGACY: GitLab Subscription Agreement V4
LEGACY: Privacy Statement
Legal, Employment at GitLab: A Strategic Partnership
Marketing Guide: Collaborating with GitLab Legal
Materials Legal Review Process
Non-Disclosure Agreement Process
Partner Code of Ethics
Patents
Policies
GitLab Website Terms of Use
Policies related to Gifts and Contributions
Use of Third-party Trademarks in GitLab
Process for UX Research Prize Draws
Procurement Guide: Collaborating with GitLab Legal
Product and Intellectual Property
Publicity Waiver and Release Guidelines and Process
Record Retention Policy
Reseller Agreement
Risk Management and Dispute Resolution
Sales Guide | Collaborating with GitLab Legal
Stategy & Legal Operations
NAVEX Compliance Courses
Sustainability
Earth Month
GitLab Fiscal Year 2023 (FY23) ESG Report
Sustainability Training
Team Member Sustainability Guide
Technology Partner Agreement
Trade Compliance
Trademarks at GitLab
UX Research Team Promotional Rules
Vendor Data Processing Addendum
Whistleblowing at GitLab
- Agile Planning Terms
- Agile Planning Terms V1
- AI Functionality Terms
- AI Functionality Terms V1
- AI Functionality Terms V2
- AI Functionality Terms V3
- Anti-Corruption Policy
- Anti-Fraud Policy
- Anti-Retaliation Policy
- Code of Business Conduct & Ethics
- Commercial Legal
- Content Removal Guidelines
- Contract Management and Storage
- Corporate & Compliance Legal
- Corporate Communications Policy
- DORA (Digital Operational Resilience Act) Mapping
- EU Illegal Content Report Form
- External Materials Compliance Checklist
- Fulfillment Reseller Flow-Through Terms
- GitLab Acceptable Use Policy
- GitLab API Terms of Use
- GitLab Data Processing Addendum and Standard Contractual Clauses
- GitLab for Education Program Agreement
- GitLab for Open Source Program Agreement
- GitLab Inc. Philanthropy Policy
- GitLab Legal Team READMEs
Emily Plotkin's README
Joel Fluss' README
Miguel Silva's README
Rashmi Chachra's README
Stacy's readme
- Emily Plotkin's README
- Joel Fluss' README
- Miguel Silva's README
- Rashmi Chachra's README
- Stacy's readme
- GitLab Modern Slavery Act Transparency Statement
- GitLab Privacy
Customer Product Usage Information
Data Protection Impact Assessment (DPIA)
Employee Privacy Policy
FAQ - Customer Product Usage Events
Guidelines for Law Enforcement Requests
Personal Data Requests
- Customer Product Usage Information
- Data Protection Impact Assessment (DPIA)
- Employee Privacy Policy
- FAQ - Customer Product Usage Events
- Guidelines for Law Enforcement Requests
- Personal Data Requests
- GitLab Professional Services Terms
- GitLab Related Party Transactions Policy
- GitLab SAFE Framework
- GitLab Subscription Agreement
- GitLab Testing Agreement
- GitLab Testing Agreement v1
- GitLab Testing Agreement v2
- GitLab Testing Agreement V3
- GitLab Testing Agreement v4
- GitLab's Ethics and Compliance Program
GitLab AI Ethics Principles for Product Development
Learning Content Accessibility Guidelines
- GitLab AI Ethics Principles for Product Development
- Learning Content Accessibility Guidelines
- Guidelines for Use of Third-party IP in External Materials
- Guidelines on public discussion of competitor product features
- Legacy Terms and Agreements
GitLab Professional Services Agreement V2
GitLab Professional Services Agreement V3
GitLab Subscription Agreement V5
Legacy v1: GitLab Open Source Program Agreement
Legacy v1: GitLab Professional Services Agreement
LEGACY: GitLab Subscription Agreement
LEGACY: GitLab Subscription Agreement V3
LEGACY: GitLab Subscription Agreement V4
LEGACY: Privacy Statement
- GitLab Professional Services Agreement V2
- GitLab Professional Services Agreement V3
- GitLab Subscription Agreement V5
- Legacy v1: GitLab Open Source Program Agreement
- Legacy v1: GitLab Professional Services Agreement
- LEGACY: GitLab Subscription Agreement
- LEGACY: GitLab Subscription Agreement V3
- LEGACY: GitLab Subscription Agreement V4
- LEGACY: Privacy Statement
- Legal, Employment at GitLab: A Strategic Partnership
- Marketing Guide: Collaborating with GitLab Legal
- Materials Legal Review Process
- Non-Disclosure Agreement Process
- Partner Code of Ethics
- Patents
- Policies
GitLab Website Terms of Use
Policies related to Gifts and Contributions
Use of Third-party Trademarks in GitLab
- GitLab Website Terms of Use
- Policies related to Gifts and Contributions
- Use of Third-party Trademarks in GitLab
- Process for UX Research Prize Draws
- Procurement Guide: Collaborating with GitLab Legal
- Product and Intellectual Property
- Publicity Waiver and Release Guidelines and Process
- Record Retention Policy
- Reseller Agreement
- Risk Management and Dispute Resolution
- Sales Guide | Collaborating with GitLab Legal
- Stategy & Legal Operations
NAVEX Compliance Courses
- NAVEX Compliance Courses
- Sustainability
Earth Month
GitLab Fiscal Year 2023 (FY23) ESG Report
Sustainability Training
Team Member Sustainability Guide
- Earth Month
- GitLab Fiscal Year 2023 (FY23) ESG Report
- Sustainability Training
- Team Member Sustainability Guide
- Technology Partner Agreement
- Trade Compliance
- Trademarks at GitLab
- UX Research Team Promotional Rules
- Vendor Data Processing Addendum
- Whistleblowing at GitLab
- Marketing
Account Based Marketing
Blog Handbook
Blog dashboard
Git Guide for Blog Contributors
GitLab Release Posts
Manual Release Post Kickoff
Release Post Scheduling
Brand and Product Marketing
Brand
Brand Activation Handbook
Trademark Guidelines
GitLab swag program
The GitLab Brand Strategy team
The GitLab Content Style Guide
The naming process at GitLab
Brand Creative Handbook
Brand Video
Virtual Recording Equipment Guide
GitLab Content Strategy & Ops
Blog style guide
Content Marketing
Product and Solution Marketing
2019 DevOps Dozen
2019 DevOps Dozen - Best DevOps Solution Provider Executive: Sid Sijbrandij
2019 DevOps Dozen - Best DevOps Solution Provider: GitLab
Analyst Relations
Analyst Resources for SDR and Sales Enablement Topics
Forrester Total Economic Impact‚Ñ¢ (TEI) Study Commissioned By GitLab, June 2020
Industry Analyst Briefings at GitLab
Industry Analyst Relations Inquiry
Competitive Intelligence
Application Security Market Analysis
CI/CD Tools Primer
Customer Advocacy at GitLab
DEPRECATED-Demos
CI/CD Deep Dive Demo
Click Through Demos
Conference Booth Setup
Integration Demos
Plan to Monitor (p2m) Demo
Running Click-throughs off-line
Scaled Agile Framework and GitLab
Set up GitLab CE or EE on Azure Container Service
Set up GitLab CE or EE on Google Kubernetes Engine
Simulation demos
DevOps tools
Enablement
Cloud Native Ecosystem Sales Enablement
GitLab CI/CD for GitHub FAQ
GitLab Secure and Govern Integrations - WhiteSource
GitLab.com Subscriptions
Enterprise IT Roles
Getting Started with Agile/DevOps Metrics
GitLab tiers
GitLab tiers for sales assessment
Hidden IT Groups
Build
Deliver Secure Applications
Improve Cycle Time
Modernize applications
Organize
Protect IT Group
Run
Test
Market Insights
Market Segmentation
Market Strategy and Insights
Peer Reviews
Persona snippets
Buyer Personas
Alex Persona snippets
Casey Persona snippets
Dakota Persona snippets
Erin Persona snippets
Kennedy Persona snippets
User Personas
Cameron Persona snippets
Delaney Persona snippets
Devon Persona snippets
Parker Persona snippets
Rachel Persona snippets
Sacha Persona snippets
Sidney Persona snippets
pmm inventory
PMM Metrics
Product and Solution Marketing Asset Inventory
Product and Solution Marketing Metrics
Product and Solution Marketing On-Boarding and Other How-to's
101 - Creating Kubernetes cluster
101 - No Tissues with Issues
103 - Maintaining common slides across decks
104 - Epic Templates - Repeatable sets of issues
105 - Issue Automation - Keeping your issues squeaky clean
Keeping Yourself Informed
Product and Solution Marketing Group Conversations How-to
Product and Solution Marketing Project Management Overview
Product Marketing Messaging
Product Marketing Professional Development
Product Marketing Team
Product Marketing Onboarding
Product Release Updates
Public Sector Go To Market
QBR Support
Reseller Marketing Kit
Roles Personas
Buyer Personas
Day in the Life for the Security Operations Engineer persona
Solutions Go-to-market
Auxiliary Solution Resource: Agile
Agile Message House Template
Usecase: Template - Keywords
Auxiliary Solution Resource: Continuous Delivery
Continuous Delivery Message House
Auxiliary Solution Resource: GitOps
GitOps Message House Template
Usecase: Template - Keywords
DevOps Solution Resource: Continuous Integration
CI Message House
Runner Message House
DevOps Solution Resource: DevOps Platform
DevOps Platform Message House
DevOps Solution Resource: DevSecOps
DevSecOps Message House
DevOps Solution Resource: Software Compliance
DevSecOps Solution Resource: Automated Software Delivery
Proposed Use Case - Incident Management
Proposed Usecase: Data Science
Data Science Usecase: Keywords
Data Science Usecase: Message House
Technical Marketing BOM Elements
Use case: GitLab + Google Cloud
Usecase: Artifact Management
Usecase: Template
Message House Template
Usecase: Template - Keywords
Wedge conversation: Source Code Management
Version Control & Collaboration Message House
Travel Priorities
Chief Marketing Officer
CI/CD GTM Sales Plays
Sales Play: Upsell Premium to Ultimate
Upsell Premium to Ultimate message house
Upsell Premium to Ultimate sales play planner
CMO Shadow Program
Core DevOps Solutions
Corporate Communications Handbook
Corporate Communications Resources and Trainings
GitLab Incident Communications Plan
GitLab Speakers Resources
Demand Generation
Demand Generation Campaigns Team
Content in Campaigns
Direct Mail
Landing Page Creation
Developer Relations
Community Learning Pathway: Course Resources
Community Programs
Community Programs Workflows
GitLab for Education Program Workflows
GitLab for Open Source Program Workflows
GitLab for Startups Program Workflows
Education Program
Pricing and Packaging - GitLab for Campuses
Open Source Program
Startups Program
Contributor Success Team
Code Contributor Program Email templates
Community pairing sessions
Contributor Success Team - Code Contributor User Journey
GitLab Community Hackathons
GitLab Nominations for Community Swag
GitLab Notable Contributor Selection Process
How to recognize organizations within the contributor ecosystem for GitLab
Innovation Pitch Competion
Merge Request Coach Lifecycle
Metrics & Tableau Dashboards
Workflows for working with community contributions
Core Team
Developer Advocacy
Community Newsletter
Consultancy workflows for Developer Advocates
Content library and workflows for Developer Advocates
Developer Advocacy CFPs
Developer Advocacy Community Response Process
Developer Advocacy on Social Media
Developer Advocacy Team Calendar
Developer Advocacy: Mentoring and Coaching
Developer Advocate Team Workflow
Hacker News
Learn Developer Advocacy
OSS Contributions
Projects
Developer Relations - Content Effectiveness
Developer Relations Content Requests
Developer Relations Department Performance Indicators
Developer Relations Events
Developer Relations Program Management
Developer Relations workflow: UTM Tracking Strategy
Developer Relations Workflows and Tools
Cloud Resources for Developer Relations
Code of Conduct Enforcement
Common Room workflows
Community Discord workflow
Developer Relations tools: Zapier
Developer Relations workflow: Team Budgets
Developer Relations Workflows: Content Review
E-mail response workflow
Forum workflow
Reddit response workflow
Stack Overflow: Tagged Questions and GitLab Collective Overview
Swag: Process & FAQ
Twitter response workflow
Zendesk for GitLab Developer Relations
Developer Relations: Program Resources
GitLab Co-Create Initiative
A Compatibility Guide for Corporate Contributors: Navigating Project License Requirements:
Co-Create Action Plan - FY26Q1
GitLab Community Apps
Campaign Manager
GitLab Contributors Program
GitLab Meetup Checklist
Leading Organizations
Strategic Plans
Contributor Program Unification & Growth Plan
Technical Marketing
GitLab.com logins for demos
Guide to Working the Booth at Events
How Tos
Adding CTAs to Learn@GitLab YouTube Videos
Autogenerating comparison infographics using Figma
Creating an AWS EKS cluster for a GitLab demo
Creating and Publishing Technical Marketing Demo Videos
Publish a video on YouTube
Making Better Videos
Technical Marketing Asset to Stakeholder Matrix
Technical Marketing Content Library
Digital Experience Handbook
Accessibility
Analytics
Google Lighthouse
Tracking Web Events with Google Tag Manager
Buyer Experience Repository
Coding Standards for Digital Experience
Contentful CMS
Contentful CMS 'The Source' Pages
Contentful CMS Custom Pages
Contentful CMS Solutions Pages
Editing content in Contentful
Known knowns & feature wishlist
Partner Microsites
Core Marketing Site Architecture Plan
Data Dictionary
Decap CMS
Dex Bot
DEX Code Review Guidelines
DEX Core Web Vitals
Digital definitions
Digital Experience: Foundations Agenda
Engineering A/B tests
Engineering GitLab Product
Engineering Marketo
Figma Process
Image Guidelines
Incident Response Matrix
Localization best practices
Major League Hacking Fellows
Marketing Cookies
Marketing Site Approval Process
Marketo page template
Navigation Repository
OneTrust
OneTrust Cookie Consent Implementation
Field Marketing
Field Marketing Epics
Field Marketing Owned Virtual Events
FY22 Marketing Plan
FY23 Marketing Plan
GitLab Event Information
Event Requirements
GitLab Marketing Team READMEs
Ashley Kramer's README
Brian Tabbert README (Director, Sales Development (AMER))
Christine Lee README (VP, Marketing Ops & Analytics)
Dave Steer README (VP Product Marketing)
Jean-Baptiste Larramendy README (AVP, Sales Dev)
Laura Duggan's README
Lauren Barker's README
Michael 'dnsmichi' Friedrich README (Staff Developer Advocate)
Nathan Dubord's README
Nikki Roth Silverberg README (Staff Marketing Operations Manager)
Salina Tran | Senior Marketing Operations Manager
GitLab Positioning FAQs
Global Channel Marketing
Channel  Marketing Epics
Channel Marketing Menu of Services
Global Channel Marketing - MDF Operations Process
Hyperscaler Campaign
Growth Direction
Inbound Marketing Handbook
Search Marketing
GitLab SEO strategy
Marketing web analytics
SEO Content Manual
Sitebulb
Testing for conversion at GitLab
Website Health Resolution
Integrated Campaigns
[NAME] Campaign
CI/CD Campaign
DevSecOps 2.0 Campaign
Integrated Marketing
Corporate Event Marketing at GitLab
Digital Strategy
Digital Strategy Management
Digital Marketing changes of note
GitLab PMG Team
Social Marketing Handbook
Open Social Media Strategies from GitLab
Social Advocacy Curator Program
Social Media Community Management
Social Media Project Management and Admin
Social Media Reporting
Team Member Social Media Advocacy
Intra-Department Learning: Marketing Functional Conversations
Journeys
Lifecycle Marketing
Email Best Practices
Emails & Nurture Programs
Emails Processes
Localization
Localization Engineering
Smartling (retired)
Marketing - Emergency Response
Marketing Analytics
Allocadia
Google Analytics 4
Marketing Analytics - Analytics Engineering
Marketing Analytics Data Overview and General Information
Marketing Analytics Data - L2R Models
Marketing Analytics Data - SFDC Models
Marketing Dashboards
TD: Campaign Performance
Marketing Metrics
Marketing Third-Party Scripts
Marketing Career Development - Overview
Contributor Success Career Framework
Contributor Success Career Framework: Intermediate Fullstack Engineer
Contributor Success Career Framework: Senior Fullstack Engineer
Contributor Success Career Framework: Staff Fullstack Engineer
Marketing Career Development - Career Paths
Marketing Department Efficiency Working Group - FY24
Marketing Operations
6sense
Adobe Marketo Measure (formerly known as Bizible)
AI in Marketing
Asana
Backblaze
Brilliant
Campaigns and Programs
Cognism
Email Management
Operational Email Sends
Goldcast
Groove.co
Hightouch
iconik
Impartner
Iterable
JiffleNow
Lead Lifecycle Management
Learning Marketing Operations
List Imports
Litmus
Marketing Owned System Provisioning Instructions
Marketing Technology Tiering System
Marketo
Marketo Interesting Moments
Marketo Tech Stack Guide
Marketo program/campaign support
MQL SLAs
Mutiny
ON24
PathFactory
Content Library
PathFactory Analytics
PathFactory for Sales
Qualified
Rev
Ringlead
Self-Service List Imports
Terminus Email Experiences
Traction Lead Complete
Typeform
UserGems
Vartopia
Vimeo
Workato
YouTube uses and access
zapier
Zoominfo
Marketing Performance Indicators
Marketing Project Management Guidelines
Epics project management guidelines
Issue and Kanban boards project management guidelines
Issues project management guidelines
Labels project management guidelines
Managing Commitment
Marketing Groups and Projects guidelines
Milestones project management guidelines
Marketing Strategy & Platforms
Marketing Team Processes - How We Work
Prescriptive Buyer Journeys
Sales Development
Tanuki Tech
Sales Plays
Sales Play: Expand with Package
Sales Play: Infrastructure Automation with GitOps
Sales Play: GitOps for First Order
SMB Marketing
Team Member Social Media Policy
The Source Handbook
User Engagement
UTM Strategy
Virtual Events
External Virtual Events
Self-Service Virtual Events
Webcasts
Webex Webcasts
- Account Based Marketing
- Blog Handbook
Blog dashboard
Git Guide for Blog Contributors
GitLab Release Posts
Manual Release Post Kickoff
Release Post Scheduling
- Blog dashboard
- Git Guide for Blog Contributors
- GitLab Release Posts
Manual Release Post Kickoff
Release Post Scheduling
- Manual Release Post Kickoff
- Release Post Scheduling
- Brand and Product Marketing
Brand
Brand Activation Handbook
Trademark Guidelines
GitLab swag program
The GitLab Brand Strategy team
The GitLab Content Style Guide
The naming process at GitLab
Brand Creative Handbook
Brand Video
Virtual Recording Equipment Guide
GitLab Content Strategy & Ops
Blog style guide
Content Marketing
Product and Solution Marketing
2019 DevOps Dozen
2019 DevOps Dozen - Best DevOps Solution Provider Executive: Sid Sijbrandij
2019 DevOps Dozen - Best DevOps Solution Provider: GitLab
Analyst Relations
Analyst Resources for SDR and Sales Enablement Topics
Forrester Total Economic Impact‚Ñ¢ (TEI) Study Commissioned By GitLab, June 2020
Industry Analyst Briefings at GitLab
Industry Analyst Relations Inquiry
Competitive Intelligence
Application Security Market Analysis
CI/CD Tools Primer
Customer Advocacy at GitLab
DEPRECATED-Demos
CI/CD Deep Dive Demo
Click Through Demos
Conference Booth Setup
Integration Demos
Plan to Monitor (p2m) Demo
Running Click-throughs off-line
Scaled Agile Framework and GitLab
Set up GitLab CE or EE on Azure Container Service
Set up GitLab CE or EE on Google Kubernetes Engine
Simulation demos
DevOps tools
Enablement
Cloud Native Ecosystem Sales Enablement
GitLab CI/CD for GitHub FAQ
GitLab Secure and Govern Integrations - WhiteSource
GitLab.com Subscriptions
Enterprise IT Roles
Getting Started with Agile/DevOps Metrics
GitLab tiers
GitLab tiers for sales assessment
Hidden IT Groups
Build
Deliver Secure Applications
Improve Cycle Time
Modernize applications
Organize
Protect IT Group
Run
Test
Market Insights
Market Segmentation
Market Strategy and Insights
Peer Reviews
Persona snippets
Buyer Personas
Alex Persona snippets
Casey Persona snippets
Dakota Persona snippets
Erin Persona snippets
Kennedy Persona snippets
User Personas
Cameron Persona snippets
Delaney Persona snippets
Devon Persona snippets
Parker Persona snippets
Rachel Persona snippets
Sacha Persona snippets
Sidney Persona snippets
pmm inventory
PMM Metrics
Product and Solution Marketing Asset Inventory
Product and Solution Marketing Metrics
Product and Solution Marketing On-Boarding and Other How-to's
101 - Creating Kubernetes cluster
101 - No Tissues with Issues
103 - Maintaining common slides across decks
104 - Epic Templates - Repeatable sets of issues
105 - Issue Automation - Keeping your issues squeaky clean
Keeping Yourself Informed
Product and Solution Marketing Group Conversations How-to
Product and Solution Marketing Project Management Overview
Product Marketing Messaging
Product Marketing Professional Development
Product Marketing Team
Product Marketing Onboarding
Product Release Updates
Public Sector Go To Market
QBR Support
Reseller Marketing Kit
Roles Personas
Buyer Personas
Day in the Life for the Security Operations Engineer persona
Solutions Go-to-market
Auxiliary Solution Resource: Agile
Agile Message House Template
Usecase: Template - Keywords
Auxiliary Solution Resource: Continuous Delivery
Continuous Delivery Message House
Auxiliary Solution Resource: GitOps
GitOps Message House Template
Usecase: Template - Keywords
DevOps Solution Resource: Continuous Integration
CI Message House
Runner Message House
DevOps Solution Resource: DevOps Platform
DevOps Platform Message House
DevOps Solution Resource: DevSecOps
DevSecOps Message House
DevOps Solution Resource: Software Compliance
DevSecOps Solution Resource: Automated Software Delivery
Proposed Use Case - Incident Management
Proposed Usecase: Data Science
Data Science Usecase: Keywords
Data Science Usecase: Message House
Technical Marketing BOM Elements
Use case: GitLab + Google Cloud
Usecase: Artifact Management
Usecase: Template
Message House Template
Usecase: Template - Keywords
Wedge conversation: Source Code Management
Version Control & Collaboration Message House
Travel Priorities
- Brand
Brand Activation Handbook
Trademark Guidelines
GitLab swag program
The GitLab Brand Strategy team
The GitLab Content Style Guide
The naming process at GitLab
- Brand Activation Handbook
Trademark Guidelines
- Trademark Guidelines
- GitLab swag program
- The GitLab Brand Strategy team
- The GitLab Content Style Guide
- The naming process at GitLab
- Brand Creative Handbook
- Brand Video
Virtual Recording Equipment Guide
- Virtual Recording Equipment Guide
- GitLab Content Strategy & Ops
Blog style guide
Content Marketing
- Blog style guide
- Content Marketing
- Product and Solution Marketing
2019 DevOps Dozen
2019 DevOps Dozen - Best DevOps Solution Provider Executive: Sid Sijbrandij
2019 DevOps Dozen - Best DevOps Solution Provider: GitLab
Analyst Relations
Analyst Resources for SDR and Sales Enablement Topics
Forrester Total Economic Impact‚Ñ¢ (TEI) Study Commissioned By GitLab, June 2020
Industry Analyst Briefings at GitLab
Industry Analyst Relations Inquiry
Competitive Intelligence
Application Security Market Analysis
CI/CD Tools Primer
Customer Advocacy at GitLab
DEPRECATED-Demos
CI/CD Deep Dive Demo
Click Through Demos
Conference Booth Setup
Integration Demos
Plan to Monitor (p2m) Demo
Running Click-throughs off-line
Scaled Agile Framework and GitLab
Set up GitLab CE or EE on Azure Container Service
Set up GitLab CE or EE on Google Kubernetes Engine
Simulation demos
DevOps tools
Enablement
Cloud Native Ecosystem Sales Enablement
GitLab CI/CD for GitHub FAQ
GitLab Secure and Govern Integrations - WhiteSource
GitLab.com Subscriptions
Enterprise IT Roles
Getting Started with Agile/DevOps Metrics
GitLab tiers
GitLab tiers for sales assessment
Hidden IT Groups
Build
Deliver Secure Applications
Improve Cycle Time
Modernize applications
Organize
Protect IT Group
Run
Test
Market Insights
Market Segmentation
Market Strategy and Insights
Peer Reviews
Persona snippets
Buyer Personas
Alex Persona snippets
Casey Persona snippets
Dakota Persona snippets
Erin Persona snippets
Kennedy Persona snippets
User Personas
Cameron Persona snippets
Delaney Persona snippets
Devon Persona snippets
Parker Persona snippets
Rachel Persona snippets
Sacha Persona snippets
Sidney Persona snippets
pmm inventory
PMM Metrics
Product and Solution Marketing Asset Inventory
Product and Solution Marketing Metrics
Product and Solution Marketing On-Boarding and Other How-to's
101 - Creating Kubernetes cluster
101 - No Tissues with Issues
103 - Maintaining common slides across decks
104 - Epic Templates - Repeatable sets of issues
105 - Issue Automation - Keeping your issues squeaky clean
Keeping Yourself Informed
Product and Solution Marketing Group Conversations How-to
Product and Solution Marketing Project Management Overview
Product Marketing Messaging
Product Marketing Professional Development
Product Marketing Team
Product Marketing Onboarding
Product Release Updates
Public Sector Go To Market
QBR Support
Reseller Marketing Kit
Roles Personas
Buyer Personas
Day in the Life for the Security Operations Engineer persona
Solutions Go-to-market
Auxiliary Solution Resource: Agile
Agile Message House Template
Usecase: Template - Keywords
Auxiliary Solution Resource: Continuous Delivery
Continuous Delivery Message House
Auxiliary Solution Resource: GitOps
GitOps Message House Template
Usecase: Template - Keywords
DevOps Solution Resource: Continuous Integration
CI Message House
Runner Message House
DevOps Solution Resource: DevOps Platform
DevOps Platform Message House
DevOps Solution Resource: DevSecOps
DevSecOps Message House
DevOps Solution Resource: Software Compliance
DevSecOps Solution Resource: Automated Software Delivery
Proposed Use Case - Incident Management
Proposed Usecase: Data Science
Data Science Usecase: Keywords
Data Science Usecase: Message House
Technical Marketing BOM Elements
Use case: GitLab + Google Cloud
Usecase: Artifact Management
Usecase: Template
Message House Template
Usecase: Template - Keywords
Wedge conversation: Source Code Management
Version Control & Collaboration Message House
Travel Priorities
- 2019 DevOps Dozen
2019 DevOps Dozen - Best DevOps Solution Provider Executive: Sid Sijbrandij
2019 DevOps Dozen - Best DevOps Solution Provider: GitLab
- 2019 DevOps Dozen - Best DevOps Solution Provider Executive: Sid Sijbrandij
- 2019 DevOps Dozen - Best DevOps Solution Provider: GitLab
- Analyst Relations
Analyst Resources for SDR and Sales Enablement Topics
Forrester Total Economic Impact‚Ñ¢ (TEI) Study Commissioned By GitLab, June 2020
Industry Analyst Briefings at GitLab
Industry Analyst Relations Inquiry
- Analyst Resources for SDR and Sales Enablement Topics
- Forrester Total Economic Impact‚Ñ¢ (TEI) Study Commissioned By GitLab, June 2020
- Industry Analyst Briefings at GitLab
- Industry Analyst Relations Inquiry
- Competitive Intelligence
Application Security Market Analysis
CI/CD Tools Primer
- Application Security Market Analysis
- CI/CD Tools Primer
- Customer Advocacy at GitLab
- DEPRECATED-Demos
CI/CD Deep Dive Demo
Click Through Demos
Conference Booth Setup
Integration Demos
Plan to Monitor (p2m) Demo
Running Click-throughs off-line
Scaled Agile Framework and GitLab
Set up GitLab CE or EE on Azure Container Service
Set up GitLab CE or EE on Google Kubernetes Engine
Simulation demos
- CI/CD Deep Dive Demo
- Click Through Demos
- Conference Booth Setup
- Integration Demos
- Plan to Monitor (p2m) Demo
- Running Click-throughs off-line
- Scaled Agile Framework and GitLab
- Set up GitLab CE or EE on Azure Container Service
- Set up GitLab CE or EE on Google Kubernetes Engine
- Simulation demos
- DevOps tools
- Enablement
Cloud Native Ecosystem Sales Enablement
GitLab CI/CD for GitHub FAQ
GitLab Secure and Govern Integrations - WhiteSource
GitLab.com Subscriptions
- Cloud Native Ecosystem Sales Enablement
- GitLab CI/CD for GitHub FAQ
- GitLab Secure and Govern Integrations - WhiteSource
- GitLab.com Subscriptions
- Enterprise IT Roles
- Getting Started with Agile/DevOps Metrics
- GitLab tiers
- GitLab tiers for sales assessment
- Hidden IT Groups
Build
Deliver Secure Applications
Improve Cycle Time
Modernize applications
Organize
Protect IT Group
Run
Test
- Build
Deliver Secure Applications
Improve Cycle Time
Modernize applications
- Deliver Secure Applications
- Improve Cycle Time
- Modernize applications
- Organize
- Protect IT Group
- Run
- Test
- Market Insights
- Market Segmentation
- Market Strategy and Insights
- Peer Reviews
- Persona snippets
Buyer Personas
Alex Persona snippets
Casey Persona snippets
Dakota Persona snippets
Erin Persona snippets
Kennedy Persona snippets
User Personas
Cameron Persona snippets
Delaney Persona snippets
Devon Persona snippets
Parker Persona snippets
Rachel Persona snippets
Sacha Persona snippets
Sidney Persona snippets
- Buyer Personas
Alex Persona snippets
Casey Persona snippets
Dakota Persona snippets
Erin Persona snippets
Kennedy Persona snippets
- Alex Persona snippets
- Casey Persona snippets
- Dakota Persona snippets
- Erin Persona snippets
- Kennedy Persona snippets
- User Personas
Cameron Persona snippets
Delaney Persona snippets
Devon Persona snippets
Parker Persona snippets
Rachel Persona snippets
Sacha Persona snippets
Sidney Persona snippets
- Cameron Persona snippets
- Delaney Persona snippets
- Devon Persona snippets
- Parker Persona snippets
- Rachel Persona snippets
- Sacha Persona snippets
- Sidney Persona snippets
- pmm inventory
- PMM Metrics
- Product and Solution Marketing Asset Inventory
- Product and Solution Marketing Metrics
- Product and Solution Marketing On-Boarding and Other How-to's
101 - Creating Kubernetes cluster
101 - No Tissues with Issues
103 - Maintaining common slides across decks
104 - Epic Templates - Repeatable sets of issues
105 - Issue Automation - Keeping your issues squeaky clean
Keeping Yourself Informed
Product and Solution Marketing Group Conversations How-to
Product and Solution Marketing Project Management Overview
- 101 - Creating Kubernetes cluster
- 101 - No Tissues with Issues
- 103 - Maintaining common slides across decks
- 104 - Epic Templates - Repeatable sets of issues
- 105 - Issue Automation - Keeping your issues squeaky clean
- Keeping Yourself Informed
- Product and Solution Marketing Group Conversations How-to
- Product and Solution Marketing Project Management Overview
- Product Marketing Messaging
- Product Marketing Professional Development
- Product Marketing Team
Product Marketing Onboarding
- Product Marketing Onboarding
- Product Release Updates
- Public Sector Go To Market
- QBR Support
- Reseller Marketing Kit
- Roles Personas
Buyer Personas
Day in the Life for the Security Operations Engineer persona
- Buyer Personas
- Day in the Life for the Security Operations Engineer persona
- Solutions Go-to-market
Auxiliary Solution Resource: Agile
Agile Message House Template
Usecase: Template - Keywords
Auxiliary Solution Resource: Continuous Delivery
Continuous Delivery Message House
Auxiliary Solution Resource: GitOps
GitOps Message House Template
Usecase: Template - Keywords
DevOps Solution Resource: Continuous Integration
CI Message House
Runner Message House
DevOps Solution Resource: DevOps Platform
DevOps Platform Message House
DevOps Solution Resource: DevSecOps
DevSecOps Message House
DevOps Solution Resource: Software Compliance
DevSecOps Solution Resource: Automated Software Delivery
Proposed Use Case - Incident Management
Proposed Usecase: Data Science
Data Science Usecase: Keywords
Data Science Usecase: Message House
Technical Marketing BOM Elements
Use case: GitLab + Google Cloud
Usecase: Artifact Management
Usecase: Template
Message House Template
Usecase: Template - Keywords
Wedge conversation: Source Code Management
Version Control & Collaboration Message House
- Auxiliary Solution Resource: Agile
Agile Message House Template
Usecase: Template - Keywords
- Agile Message House Template
- Usecase: Template - Keywords
- Auxiliary Solution Resource: Continuous Delivery
Continuous Delivery Message House
- Continuous Delivery Message House
- Auxiliary Solution Resource: GitOps
GitOps Message House Template
Usecase: Template - Keywords
- GitOps Message House Template
- Usecase: Template - Keywords
- DevOps Solution Resource: Continuous Integration
CI Message House
Runner Message House
- CI Message House
- Runner Message House
- DevOps Solution Resource: DevOps Platform
DevOps Platform Message House
- DevOps Platform Message House
- DevOps Solution Resource: DevSecOps
DevSecOps Message House
- DevSecOps Message House
- DevOps Solution Resource: Software Compliance
- DevSecOps Solution Resource: Automated Software Delivery
- Proposed Use Case - Incident Management
- Proposed Usecase: Data Science
Data Science Usecase: Keywords
Data Science Usecase: Message House
- Data Science Usecase: Keywords
- Data Science Usecase: Message House
- Technical Marketing BOM Elements
- Use case: GitLab + Google Cloud
- Usecase: Artifact Management
- Usecase: Template
Message House Template
Usecase: Template - Keywords
- Message House Template
- Usecase: Template - Keywords
- Wedge conversation: Source Code Management
Version Control & Collaboration Message House
- Version Control & Collaboration Message House
- Travel Priorities
- Chief Marketing Officer
- CI/CD GTM Sales Plays
Sales Play: Upsell Premium to Ultimate
Upsell Premium to Ultimate message house
Upsell Premium to Ultimate sales play planner
- Sales Play: Upsell Premium to Ultimate
- Upsell Premium to Ultimate message house
- Upsell Premium to Ultimate sales play planner
- CMO Shadow Program
- Core DevOps Solutions
- Corporate Communications Handbook
Corporate Communications Resources and Trainings
GitLab Incident Communications Plan
GitLab Speakers Resources
- Corporate Communications Resources and Trainings
- GitLab Incident Communications Plan
- GitLab Speakers Resources
- Demand Generation
Demand Generation Campaigns Team
Content in Campaigns
Direct Mail
Landing Page Creation
- Demand Generation Campaigns Team
Content in Campaigns
Direct Mail
Landing Page Creation
- Content in Campaigns
- Direct Mail
- Landing Page Creation
- Developer Relations
Community Learning Pathway: Course Resources
Community Programs
Community Programs Workflows
GitLab for Education Program Workflows
GitLab for Open Source Program Workflows
GitLab for Startups Program Workflows
Education Program
Pricing and Packaging - GitLab for Campuses
Open Source Program
Startups Program
Contributor Success Team
Code Contributor Program Email templates
Community pairing sessions
Contributor Success Team - Code Contributor User Journey
GitLab Community Hackathons
GitLab Nominations for Community Swag
GitLab Notable Contributor Selection Process
How to recognize organizations within the contributor ecosystem for GitLab
Innovation Pitch Competion
Merge Request Coach Lifecycle
Metrics & Tableau Dashboards
Workflows for working with community contributions
Core Team
Developer Advocacy
Community Newsletter
Consultancy workflows for Developer Advocates
Content library and workflows for Developer Advocates
Developer Advocacy CFPs
Developer Advocacy Community Response Process
Developer Advocacy on Social Media
Developer Advocacy Team Calendar
Developer Advocacy: Mentoring and Coaching
Developer Advocate Team Workflow
Hacker News
Learn Developer Advocacy
OSS Contributions
Projects
Developer Relations - Content Effectiveness
Developer Relations Content Requests
Developer Relations Department Performance Indicators
Developer Relations Events
Developer Relations Program Management
Developer Relations workflow: UTM Tracking Strategy
Developer Relations Workflows and Tools
Cloud Resources for Developer Relations
Code of Conduct Enforcement
Common Room workflows
Community Discord workflow
Developer Relations tools: Zapier
Developer Relations workflow: Team Budgets
Developer Relations Workflows: Content Review
E-mail response workflow
Forum workflow
Reddit response workflow
Stack Overflow: Tagged Questions and GitLab Collective Overview
Swag: Process & FAQ
Twitter response workflow
Zendesk for GitLab Developer Relations
Developer Relations: Program Resources
GitLab Co-Create Initiative
A Compatibility Guide for Corporate Contributors: Navigating Project License Requirements:
Co-Create Action Plan - FY26Q1
GitLab Community Apps
Campaign Manager
GitLab Contributors Program
GitLab Meetup Checklist
Leading Organizations
Strategic Plans
Contributor Program Unification & Growth Plan
Technical Marketing
GitLab.com logins for demos
Guide to Working the Booth at Events
How Tos
Adding CTAs to Learn@GitLab YouTube Videos
Autogenerating comparison infographics using Figma
Creating an AWS EKS cluster for a GitLab demo
Creating and Publishing Technical Marketing Demo Videos
Publish a video on YouTube
Making Better Videos
Technical Marketing Asset to Stakeholder Matrix
Technical Marketing Content Library
- Community Learning Pathway: Course Resources
- Community Programs
Community Programs Workflows
GitLab for Education Program Workflows
GitLab for Open Source Program Workflows
GitLab for Startups Program Workflows
Education Program
Pricing and Packaging - GitLab for Campuses
Open Source Program
Startups Program
- Community Programs Workflows
GitLab for Education Program Workflows
GitLab for Open Source Program Workflows
GitLab for Startups Program Workflows
- GitLab for Education Program Workflows
- GitLab for Open Source Program Workflows
- GitLab for Startups Program Workflows
- Education Program
Pricing and Packaging - GitLab for Campuses
- Pricing and Packaging - GitLab for Campuses
- Open Source Program
- Startups Program
- Contributor Success Team
Code Contributor Program Email templates
Community pairing sessions
Contributor Success Team - Code Contributor User Journey
GitLab Community Hackathons
GitLab Nominations for Community Swag
GitLab Notable Contributor Selection Process
How to recognize organizations within the contributor ecosystem for GitLab
Innovation Pitch Competion
Merge Request Coach Lifecycle
Metrics & Tableau Dashboards
Workflows for working with community contributions
- Code Contributor Program Email templates
- Community pairing sessions
- Contributor Success Team - Code Contributor User Journey
- GitLab Community Hackathons
- GitLab Nominations for Community Swag
- GitLab Notable Contributor Selection Process
- How to recognize organizations within the contributor ecosystem for GitLab
- Innovation Pitch Competion
- Merge Request Coach Lifecycle
- Metrics & Tableau Dashboards
- Workflows for working with community contributions
- Core Team
- Developer Advocacy
Community Newsletter
Consultancy workflows for Developer Advocates
Content library and workflows for Developer Advocates
Developer Advocacy CFPs
Developer Advocacy Community Response Process
Developer Advocacy on Social Media
Developer Advocacy Team Calendar
Developer Advocacy: Mentoring and Coaching
Developer Advocate Team Workflow
Hacker News
Learn Developer Advocacy
OSS Contributions
Projects
- Community Newsletter
- Consultancy workflows for Developer Advocates
- Content library and workflows for Developer Advocates
- Developer Advocacy CFPs
- Developer Advocacy Community Response Process
- Developer Advocacy on Social Media
- Developer Advocacy Team Calendar
- Developer Advocacy: Mentoring and Coaching
- Developer Advocate Team Workflow
- Hacker News
- Learn Developer Advocacy
- OSS Contributions
- Projects
- Developer Relations - Content Effectiveness
- Developer Relations Content Requests
- Developer Relations Department Performance Indicators
- Developer Relations Events
- Developer Relations Program Management
- Developer Relations workflow: UTM Tracking Strategy
- Developer Relations Workflows and Tools
Cloud Resources for Developer Relations
Code of Conduct Enforcement
Common Room workflows
Community Discord workflow
Developer Relations tools: Zapier
Developer Relations workflow: Team Budgets
Developer Relations Workflows: Content Review
E-mail response workflow
Forum workflow
Reddit response workflow
Stack Overflow: Tagged Questions and GitLab Collective Overview
Swag: Process & FAQ
Twitter response workflow
Zendesk for GitLab Developer Relations
- Cloud Resources for Developer Relations
- Code of Conduct Enforcement
- Common Room workflows
- Community Discord workflow
- Developer Relations tools: Zapier
- Developer Relations workflow: Team Budgets
- Developer Relations Workflows: Content Review
- E-mail response workflow
- Forum workflow
- Reddit response workflow
- Stack Overflow: Tagged Questions and GitLab Collective Overview
- Swag: Process & FAQ
- Twitter response workflow
- Zendesk for GitLab Developer Relations
- Developer Relations: Program Resources
- GitLab Co-Create Initiative
A Compatibility Guide for Corporate Contributors: Navigating Project License Requirements:
Co-Create Action Plan - FY26Q1
- A Compatibility Guide for Corporate Contributors: Navigating Project License Requirements:
- Co-Create Action Plan - FY26Q1
- GitLab Community Apps
Campaign Manager
- Campaign Manager
- GitLab Contributors Program
- GitLab Meetup Checklist
- Leading Organizations
- Strategic Plans
Contributor Program Unification & Growth Plan
- Contributor Program Unification & Growth Plan
- Technical Marketing
GitLab.com logins for demos
Guide to Working the Booth at Events
How Tos
Adding CTAs to Learn@GitLab YouTube Videos
Autogenerating comparison infographics using Figma
Creating an AWS EKS cluster for a GitLab demo
Creating and Publishing Technical Marketing Demo Videos
Publish a video on YouTube
Making Better Videos
Technical Marketing Asset to Stakeholder Matrix
Technical Marketing Content Library
- GitLab.com logins for demos
- Guide to Working the Booth at Events
- How Tos
Adding CTAs to Learn@GitLab YouTube Videos
Autogenerating comparison infographics using Figma
Creating an AWS EKS cluster for a GitLab demo
Creating and Publishing Technical Marketing Demo Videos
Publish a video on YouTube
- Adding CTAs to Learn@GitLab YouTube Videos
- Autogenerating comparison infographics using Figma
- Creating an AWS EKS cluster for a GitLab demo
- Creating and Publishing Technical Marketing Demo Videos
- Publish a video on YouTube
- Making Better Videos
- Technical Marketing Asset to Stakeholder Matrix
- Technical Marketing Content Library
- Digital Experience Handbook
Accessibility
Analytics
Google Lighthouse
Tracking Web Events with Google Tag Manager
Buyer Experience Repository
Coding Standards for Digital Experience
Contentful CMS
Contentful CMS 'The Source' Pages
Contentful CMS Custom Pages
Contentful CMS Solutions Pages
Editing content in Contentful
Known knowns & feature wishlist
Partner Microsites
Core Marketing Site Architecture Plan
Data Dictionary
Decap CMS
Dex Bot
DEX Code Review Guidelines
DEX Core Web Vitals
Digital definitions
Digital Experience: Foundations Agenda
Engineering A/B tests
Engineering GitLab Product
Engineering Marketo
Figma Process
Image Guidelines
Incident Response Matrix
Localization best practices
Major League Hacking Fellows
Marketing Cookies
Marketing Site Approval Process
Marketo page template
Navigation Repository
OneTrust
OneTrust Cookie Consent Implementation
- Accessibility
- Analytics
Google Lighthouse
Tracking Web Events with Google Tag Manager
- Google Lighthouse
- Tracking Web Events with Google Tag Manager
- Buyer Experience Repository
- Coding Standards for Digital Experience
- Contentful CMS
Contentful CMS 'The Source' Pages
Contentful CMS Custom Pages
Contentful CMS Solutions Pages
Editing content in Contentful
Known knowns & feature wishlist
Partner Microsites
- Contentful CMS 'The Source' Pages
- Contentful CMS Custom Pages
- Contentful CMS Solutions Pages
- Editing content in Contentful
- Known knowns & feature wishlist
- Partner Microsites
- Core Marketing Site Architecture Plan
- Data Dictionary
- Decap CMS
- Dex Bot
- DEX Code Review Guidelines
- DEX Core Web Vitals
- Digital definitions
- Digital Experience: Foundations Agenda
- Engineering A/B tests
- Engineering GitLab Product
- Engineering Marketo
- Figma Process
- Image Guidelines
- Incident Response Matrix
- Localization best practices
- Major League Hacking Fellows
- Marketing Cookies
- Marketing Site Approval Process
- Marketo page template
- Navigation Repository
- OneTrust
- OneTrust Cookie Consent Implementation
- Field Marketing
Field Marketing Epics
Field Marketing Owned Virtual Events
- Field Marketing Epics
- Field Marketing Owned Virtual Events
- FY22 Marketing Plan
- FY23 Marketing Plan
- GitLab Event Information
Event Requirements
- Event Requirements
- GitLab Marketing Team READMEs
Ashley Kramer's README
Brian Tabbert README (Director, Sales Development (AMER))
Christine Lee README (VP, Marketing Ops & Analytics)
Dave Steer README (VP Product Marketing)
Jean-Baptiste Larramendy README (AVP, Sales Dev)
Laura Duggan's README
Lauren Barker's README
Michael 'dnsmichi' Friedrich README (Staff Developer Advocate)
Nathan Dubord's README
Nikki Roth Silverberg README (Staff Marketing Operations Manager)
Salina Tran | Senior Marketing Operations Manager
- Ashley Kramer's README
- Brian Tabbert README (Director, Sales Development (AMER))
- Christine Lee README (VP, Marketing Ops & Analytics)
- Dave Steer README (VP Product Marketing)
- Jean-Baptiste Larramendy README (AVP, Sales Dev)
- Laura Duggan's README
- Lauren Barker's README
- Michael 'dnsmichi' Friedrich README (Staff Developer Advocate)
- Nathan Dubord's README
- Nikki Roth Silverberg README (Staff Marketing Operations Manager)
- Salina Tran | Senior Marketing Operations Manager
- GitLab Positioning FAQs
- Global Channel Marketing
Channel  Marketing Epics
Channel Marketing Menu of Services
Global Channel Marketing - MDF Operations Process
Hyperscaler Campaign
- Channel  Marketing Epics
Channel Marketing Menu of Services
- Channel Marketing Menu of Services
- Global Channel Marketing - MDF Operations Process
- Hyperscaler Campaign
- Growth Direction
- Inbound Marketing Handbook
Search Marketing
GitLab SEO strategy
Marketing web analytics
SEO Content Manual
Sitebulb
Testing for conversion at GitLab
Website Health Resolution
- Search Marketing
GitLab SEO strategy
Marketing web analytics
SEO Content Manual
Sitebulb
Testing for conversion at GitLab
Website Health Resolution
- GitLab SEO strategy
- Marketing web analytics
- SEO Content Manual
- Sitebulb
- Testing for conversion at GitLab
- Website Health Resolution
- Integrated Campaigns
[NAME] Campaign
CI/CD Campaign
DevSecOps 2.0 Campaign
- [NAME] Campaign
- CI/CD Campaign
- DevSecOps 2.0 Campaign
- Integrated Marketing
Corporate Event Marketing at GitLab
Digital Strategy
Digital Strategy Management
Digital Marketing changes of note
GitLab PMG Team
Social Marketing Handbook
Open Social Media Strategies from GitLab
Social Advocacy Curator Program
Social Media Community Management
Social Media Project Management and Admin
Social Media Reporting
Team Member Social Media Advocacy
- Corporate Event Marketing at GitLab
- Digital Strategy
Digital Strategy Management
Digital Marketing changes of note
GitLab PMG Team
Social Marketing Handbook
Open Social Media Strategies from GitLab
Social Advocacy Curator Program
Social Media Community Management
Social Media Project Management and Admin
Social Media Reporting
Team Member Social Media Advocacy
- Digital Strategy Management
Digital Marketing changes of note
- Digital Marketing changes of note
- GitLab PMG Team
- Social Marketing Handbook
Open Social Media Strategies from GitLab
Social Advocacy Curator Program
Social Media Community Management
Social Media Project Management and Admin
Social Media Reporting
Team Member Social Media Advocacy
- Open Social Media Strategies from GitLab
- Social Advocacy Curator Program
- Social Media Community Management
- Social Media Project Management and Admin
- Social Media Reporting
- Team Member Social Media Advocacy
- Intra-Department Learning: Marketing Functional Conversations
- Journeys
- Lifecycle Marketing
Email Best Practices
Emails & Nurture Programs
Emails Processes
- Email Best Practices
- Emails & Nurture Programs
- Emails Processes
- Localization
Localization Engineering
Smartling (retired)
- Localization Engineering
- Smartling (retired)
- Marketing - Emergency Response
- Marketing Analytics
Allocadia
Google Analytics 4
Marketing Analytics - Analytics Engineering
Marketing Analytics Data Overview and General Information
Marketing Analytics Data - L2R Models
Marketing Analytics Data - SFDC Models
Marketing Dashboards
TD: Campaign Performance
Marketing Metrics
Marketing Third-Party Scripts
- Allocadia
- Google Analytics 4
- Marketing Analytics - Analytics Engineering
- Marketing Analytics Data Overview and General Information
Marketing Analytics Data - L2R Models
Marketing Analytics Data - SFDC Models
- Marketing Analytics Data - L2R Models
- Marketing Analytics Data - SFDC Models
- Marketing Dashboards
TD: Campaign Performance
- TD: Campaign Performance
- Marketing Metrics
- Marketing Third-Party Scripts
- Marketing Career Development - Overview
Contributor Success Career Framework
Contributor Success Career Framework: Intermediate Fullstack Engineer
Contributor Success Career Framework: Senior Fullstack Engineer
Contributor Success Career Framework: Staff Fullstack Engineer
Marketing Career Development - Career Paths
- Contributor Success Career Framework
Contributor Success Career Framework: Intermediate Fullstack Engineer
Contributor Success Career Framework: Senior Fullstack Engineer
Contributor Success Career Framework: Staff Fullstack Engineer
- Contributor Success Career Framework: Intermediate Fullstack Engineer
- Contributor Success Career Framework: Senior Fullstack Engineer
- Contributor Success Career Framework: Staff Fullstack Engineer
- Marketing Career Development - Career Paths
- Marketing Department Efficiency Working Group - FY24
- Marketing Operations
6sense
Adobe Marketo Measure (formerly known as Bizible)
AI in Marketing
Asana
Backblaze
Brilliant
Campaigns and Programs
Cognism
Email Management
Operational Email Sends
Goldcast
Groove.co
Hightouch
iconik
Impartner
Iterable
JiffleNow
Lead Lifecycle Management
Learning Marketing Operations
List Imports
Litmus
Marketing Owned System Provisioning Instructions
Marketing Technology Tiering System
Marketo
Marketo Interesting Moments
Marketo Tech Stack Guide
Marketo program/campaign support
MQL SLAs
Mutiny
ON24
PathFactory
Content Library
PathFactory Analytics
PathFactory for Sales
Qualified
Rev
Ringlead
Self-Service List Imports
Terminus Email Experiences
Traction Lead Complete
Typeform
UserGems
Vartopia
Vimeo
Workato
YouTube uses and access
zapier
Zoominfo
- 6sense
- Adobe Marketo Measure (formerly known as Bizible)
- AI in Marketing
- Asana
- Backblaze
- Brilliant
- Campaigns and Programs
- Cognism
- Email Management
Operational Email Sends
- Operational Email Sends
- Goldcast
- Groove.co
- Hightouch
- iconik
- Impartner
- Iterable
- JiffleNow
- Lead Lifecycle Management
- Learning Marketing Operations
- List Imports
- Litmus
- Marketing Owned System Provisioning Instructions
- Marketing Technology Tiering System
- Marketo
Marketo Interesting Moments
Marketo Tech Stack Guide
- Marketo Interesting Moments
- Marketo Tech Stack Guide
- Marketo program/campaign support
- MQL SLAs
- Mutiny
- ON24
- PathFactory
Content Library
PathFactory Analytics
PathFactory for Sales
- Content Library
- PathFactory Analytics
- PathFactory for Sales
- Qualified
- Rev
- Ringlead
- Self-Service List Imports
- Terminus Email Experiences
- Traction Lead Complete
- Typeform
- UserGems
- Vartopia
- Vimeo
- Workato
- YouTube uses and access
- zapier
- Zoominfo
- Marketing Performance Indicators
- Marketing Project Management Guidelines
Epics project management guidelines
Issue and Kanban boards project management guidelines
Issues project management guidelines
Labels project management guidelines
Managing Commitment
Marketing Groups and Projects guidelines
Milestones project management guidelines
- Epics project management guidelines
- Issue and Kanban boards project management guidelines
- Issues project management guidelines
- Labels project management guidelines
- Managing Commitment
- Marketing Groups and Projects guidelines
- Milestones project management guidelines
- Marketing Strategy & Platforms
- Marketing Team Processes - How We Work
- Prescriptive Buyer Journeys
- Sales Development
Tanuki Tech
- Tanuki Tech
- Sales Plays
Sales Play: Expand with Package
Sales Play: Infrastructure Automation with GitOps
Sales Play: GitOps for First Order
- Sales Play: Expand with Package
- Sales Play: Infrastructure Automation with GitOps
Sales Play: GitOps for First Order
- Sales Play: GitOps for First Order
- SMB Marketing
- Team Member Social Media Policy
- The Source Handbook
- User Engagement
- UTM Strategy
- Virtual Events
External Virtual Events
Self-Service Virtual Events
Webcasts
Webex Webcasts
- External Virtual Events
- Self-Service Virtual Events
- Webcasts
Webex Webcasts
- Webex Webcasts
- People Group
360 Feedback
Anti-Harassment Policy
Competencies
Contracts, Background Screenings, Probation Periods & PIAA
Directly Responsible Individuals (DRI)
Employment Solutions - Overview
Engagement Surveys and Employer Awards
Frequently Requested
Gender and Sexual Orientation Identity Definitions and FAQ
GitLab Internal Acceptable Use Policy
GitLab Offboarding
GitLab Offboarding FAQ
GitLab Offboarding Standards
GitLab Onboarding
GitLab Onboarding Buddies
Merge Request Buddies
TaNewKi Tips
GitLab People Connect
GiveLab Volunteer Initiatives
Guidance on Feedback
Incident Response
Learning & Development
Career Development and Mobility
Your Individual Growth Plan (IGP) Journey
Elevate Programs
Elevate
Elevate Applied
Elevate Applied 1:1 Coaching
Elevate+
Elevate+ Participant Hub
Elevate+ Round 3 Pilot - FY25 Q3
ElevatePrep
GitLab 101
GitLab 201
Growth and Development Fund
Growth and Development Processing Documentation for Talent Development
Tax Impacts of Different Growth & Development Benefits
Handbook-First Approach to Interactive Learning
Hone Partnership
Internship for Learning
Learning Initiatives
Past Learning Initiatives
Radical Candor at GitLab
LevelUp
Legacy Level Up - Thought Industries
Mentoring at GitLab
GitLab Company-Wide Mentorship Program
New to Leadership and Management
Self-Paced External Trainings
Team Workshops
Transitioning to a manager role
Building high performing teams
Work with the Learning and Development Team
New Hires, Celebrations and Significant Life Events
Organizational Change Management
Paid Time Off at GitLab
People Business Partner Team
People Compliance at GitLab
People Compliance Reporting
Affirmative Action Plan Information
People Group Calendars
GitLab Team Member Calendar
Programs Calendar - People Managers
People Group Engineering
Employment Issues
Miscellaneous
Nominator bot
Offboarding Automation Flow
Onboarding Automation Flow
Organization Change Automation Flow
People Operations Internal Handbook
Slack
Team PTO Calendar
People Group Program Management
People Group Project Program
People Group READMEs
Cassiana Gudgenov's README
Tre Ely's README
People Group Spotlight program
People Group Systems Architecture
People Group Tech Stack Guide
People Operations Team
People Analytics
Data Guide to People Data Analysis
People Analytics Data Governance
People Analytics Survey Support
People Analytics Tableau Dashboard Overview
People Operations, Technology & Analytics Team Operating Principles
People Success Performance Indicators
Promotion Document Style Guide
Promotions and Transfers
Pronoun Guidance and Information
Quarterly Talent Review (QTR)
Relocation
Talent Assessment
Talent brand
Content library - life at GitLab
People communications & team member engagement
Process for employer awards
Tracking reviews
Talent Development Program
Team Member Relations at GitLab
Using GitLab at GitLab
Visas
Workday Guide
- 360 Feedback
- Anti-Harassment Policy
- Competencies
- Contracts, Background Screenings, Probation Periods & PIAA
- Directly Responsible Individuals (DRI)
- Employment Solutions - Overview
- Engagement Surveys and Employer Awards
- Frequently Requested
- Gender and Sexual Orientation Identity Definitions and FAQ
- GitLab Internal Acceptable Use Policy
- GitLab Offboarding
GitLab Offboarding FAQ
GitLab Offboarding Standards
- GitLab Offboarding FAQ
- GitLab Offboarding Standards
- GitLab Onboarding
GitLab Onboarding Buddies
Merge Request Buddies
TaNewKi Tips
- GitLab Onboarding Buddies
- Merge Request Buddies
- TaNewKi Tips
- GitLab People Connect
- GiveLab Volunteer Initiatives
- Guidance on Feedback
- Incident Response
- Learning & Development
Career Development and Mobility
Your Individual Growth Plan (IGP) Journey
Elevate Programs
Elevate
Elevate Applied
Elevate Applied 1:1 Coaching
Elevate+
Elevate+ Participant Hub
Elevate+ Round 3 Pilot - FY25 Q3
ElevatePrep
GitLab 101
GitLab 201
Growth and Development Fund
Growth and Development Processing Documentation for Talent Development
Tax Impacts of Different Growth & Development Benefits
Handbook-First Approach to Interactive Learning
Hone Partnership
Internship for Learning
Learning Initiatives
Past Learning Initiatives
Radical Candor at GitLab
LevelUp
Legacy Level Up - Thought Industries
Mentoring at GitLab
GitLab Company-Wide Mentorship Program
New to Leadership and Management
Self-Paced External Trainings
Team Workshops
Transitioning to a manager role
Building high performing teams
Work with the Learning and Development Team
- Career Development and Mobility
Your Individual Growth Plan (IGP) Journey
- Your Individual Growth Plan (IGP) Journey
- Elevate Programs
Elevate
Elevate Applied
Elevate Applied 1:1 Coaching
Elevate+
Elevate+ Participant Hub
Elevate+ Round 3 Pilot - FY25 Q3
ElevatePrep
- Elevate
- Elevate Applied
Elevate Applied 1:1 Coaching
- Elevate Applied 1:1 Coaching
- Elevate+
Elevate+ Participant Hub
Elevate+ Round 3 Pilot - FY25 Q3
- Elevate+ Participant Hub
- Elevate+ Round 3 Pilot - FY25 Q3
- ElevatePrep
- GitLab 101
- GitLab 201
- Growth and Development Fund
Growth and Development Processing Documentation for Talent Development
Tax Impacts of Different Growth & Development Benefits
- Growth and Development Processing Documentation for Talent Development
- Tax Impacts of Different Growth & Development Benefits
- Handbook-First Approach to Interactive Learning
- Hone Partnership
- Internship for Learning
- Learning Initiatives
Past Learning Initiatives
Radical Candor at GitLab
- Past Learning Initiatives
- Radical Candor at GitLab
- LevelUp
Legacy Level Up - Thought Industries
- Legacy Level Up - Thought Industries
- Mentoring at GitLab
GitLab Company-Wide Mentorship Program
- GitLab Company-Wide Mentorship Program
- New to Leadership and Management
- Self-Paced External Trainings
- Team Workshops
- Transitioning to a manager role
Building high performing teams
- Building high performing teams
- Work with the Learning and Development Team
- New Hires, Celebrations and Significant Life Events
- Organizational Change Management
- Paid Time Off at GitLab
- People Business Partner Team
- People Compliance at GitLab
People Compliance Reporting
Affirmative Action Plan Information
- People Compliance Reporting
Affirmative Action Plan Information
- Affirmative Action Plan Information
- People Group Calendars
GitLab Team Member Calendar
Programs Calendar - People Managers
- GitLab Team Member Calendar
- Programs Calendar - People Managers
- People Group Engineering
Employment Issues
Miscellaneous
Nominator bot
Offboarding Automation Flow
Onboarding Automation Flow
Organization Change Automation Flow
People Operations Internal Handbook
Slack
Team PTO Calendar
- Employment Issues
- Miscellaneous
- Nominator bot
- Offboarding Automation Flow
- Onboarding Automation Flow
- Organization Change Automation Flow
- People Operations Internal Handbook
- Slack
- Team PTO Calendar
- People Group Program Management
- People Group Project Program
- People Group READMEs
Cassiana Gudgenov's README
Tre Ely's README
- Cassiana Gudgenov's README
- Tre Ely's README
- People Group Spotlight program
- People Group Systems Architecture
- People Group Tech Stack Guide
- People Operations Team
People Analytics
Data Guide to People Data Analysis
People Analytics Data Governance
People Analytics Survey Support
People Analytics Tableau Dashboard Overview
People Operations, Technology & Analytics Team Operating Principles
- People Analytics
Data Guide to People Data Analysis
People Analytics Data Governance
People Analytics Survey Support
People Analytics Tableau Dashboard Overview
- Data Guide to People Data Analysis
- People Analytics Data Governance
- People Analytics Survey Support
- People Analytics Tableau Dashboard Overview
- People Operations, Technology & Analytics Team Operating Principles
- People Success Performance Indicators
- Promotion Document Style Guide
- Promotions and Transfers
- Pronoun Guidance and Information
- Quarterly Talent Review (QTR)
- Relocation
- Talent Assessment
- Talent brand
Content library - life at GitLab
People communications & team member engagement
Process for employer awards
Tracking reviews
- Content library - life at GitLab
- People communications & team member engagement
- Process for employer awards
- Tracking reviews
- Talent Development Program
- Team Member Relations at GitLab
- Using GitLab at GitLab
- Visas
- Workday Guide
- People Policies
GitLab France S.A.S. Remote Work Charter
GitLab France S.A.S. Right to Disconnect Charter
GitLab Ireland Ltd Right to Disconnect Policy
Leave of Absence
United States Leave of Absence Policies
People Policies - GitLab Inc (USA)
- GitLab France S.A.S. Remote Work Charter
- GitLab France S.A.S. Right to Disconnect Charter
- GitLab Ireland Ltd Right to Disconnect Policy
- Leave of Absence
United States Leave of Absence Policies
- United States Leave of Absence Policies
- People Policies - GitLab Inc (USA)
- Product Development
Product Development Flow
Feature flags in development of GitLab
Phase template
Product Development Budgeting Process
Product Development Flow Success Metrics
Product Development Roles and Responsibilities
R&D Interlock
- Product Development Flow
Feature flags in development of GitLab
Phase template
Product Development Budgeting Process
Product Development Flow Success Metrics
- Feature flags in development of GitLab
- Phase template
- Product Development Budgeting Process
- Product Development Flow Success Metrics
- Product Development Roles and Responsibilities
- R&D Interlock
- Product Handbook
AI-assisted features
AI Continuity Plan
UX maturity guidelines for AI-assisted features
UX support for AI-assisted features
Collaboration on shared feature and experience areas
Collaboration on merge requests experience
Collaboration on work items framework
GitLab Product Management
Product Internship - Best Practices
Product Management CDF and Competencies
Product Management Learning and Development
The Product Manager Role at GitLab
Personas
Organization Archetype
Product Group and Team Pages
Analytics Section
Fulfillment Guide
How the growth section works
Plan:Project Management
Product Data Insights
Crash Course for Product Stage Resources
dbt Cheat Sheet
Engineering Metrics
Engineering Metrics Dashboards
Experimentation Design & Analysis
Guide to Engineering Analytics Data
PDI Dashboards, Analysis, & Insights
Product Data Insights Data Models Cheat Sheet
Team Processes
Product Technical Program Manager
Verify Product Group
Product Leadership Team Resources
CPO Shadow Program
People Group for Product Management
Product Leadership
Product Principles
Product Processes
Analytics Instrumentation Guide
Our Commitment to Individual User Privacy in relation to Service Usage Data
Continuous Interviews
Cross Functional Prioritization
Customer Issues Prioritization Framework
Dogfooding for R&D
GitLab Early Access Program Direction
Joint R&D OKR Process
Making GIFs
New Product Introduction (NPI) Process
Product Customer Advisory Board
Product Management Tips and Tricks
Product Manager SAFE Guidance
Product Milestones
Product Procedures
Product Team Board Meeting Prep
Sensing Mechanisms
Tiering Strategy & Guidance for Product Managers
Using GitLab to plan work
Product sections, stages, groups, and categories
Features by Group
Features Category Quick Lookup
GitLab the Product
Advantages of a single application
Data flow GitLab vs. multiple applications
UX Department
Assessing Category Maturity
Category Maturity - Competitor Comparison
Category Maturity Scorecards
Competitor Evaluations
Design collaborator's playbook
Documenting research insights in Dovetail
GitLab Navigation
Navigation inventory
How to create a user persona
How we work
Cross-stage design collaboration
Design Pods
Figma provisioning and deprovisioning
Product Design Manager Pairs
Product Design Pairs
Jobs to be Done at GitLab
Anatomy of a JTBD Canvas
JTBD - Beyond the Playbook
JTBD Research Playbook
Validated GitLab JTBD Canvases and Opportunity Scores
Pajamas Design System
Pajamas Design Review Process
Product Design
Hiring Product Designers
Product Design Manager Workflows
UX Themes
UX Theme Workshops
Product Designer Workflow
A Guide for Designing with AI
Merge Request Reviews
Merge Request Reviews
Product Designer Design Tools
Product Designer Priorities and Capacity Management
Remote Design Sprint
Technical Writing
Hiring Technical Writers
Think Big & Think Small Meetings
UX Department Learning and Development
GitLab-sponsored Tufts University Human Factors/Engineering Psychology Capstone Course
UX Department Performance Indicators
System Usability Scale
System Usability Scale responder outreach
User Satisfaction (USAT) Survey
UX Forum
UX Heuristics
UX Research at GitLab
Analyzing and synthesizing user research data
Analyzing survey verbatim
Attending a research event
Choosing a research methodology
Collecting useful data
Community contributions for Actionable Insights
Comparative testing for navigation
Creating a first click study in Qualtrics
Creating and managing a research participant panel
Defining goals, objectives, and hypotheses
Diary studies
Doing UX research in the AI space
Evaluating navigation
Facilitating user interviews
Finding SaaS users
First click testing for navigation
Foundational research
How the UX Research team operates at GitLab
How to Conduct UX Research Workshops
How to find existing research
How to recruit UX Research participants
The Common Screener: an efficient way to screen for multiple studies
UX research recruiting email tips
How to write an effective screener
Interview Carousel - Becoming a better interviewer 15 minutes at a time
Kano Survey for feature prioritization
Longitudinal studies
Mental modeling
Preference testing
Problem validation and methods
Problem Validation research for single-stage-group initiatives
Product Analytics for UX Research
Rapid Iterative Testing and Evaluation (RITE)
Research insights
Research prioritization
Resources for Research DRIs
Solution Validation and methods
Strategic research at GitLab
GitLab Adoption Research Program
Surveys
Common types of survey questions
Designing your survey
How to identify low quality data when designing and reviewing your survey
Piloting your survey
Qualtrics tips and tricks
Sample sizes for surveys
Survey question scales
Testing navigation: early Solution Validation
Tracking actionable insights
Tracking gold, silver, and bronze UX research projects
Tracking research velocity
Unmoderated usability testing
Usability benchmarking
Usability testing
User story mapping
Using quantitative data to find insights
Using RITE to test navigation
Using the UX Research Google Calendar
UX Bash
UX Cloud Sandbox
UX Research growth and development
UX Research shadowing
UX Research tools/applications
UX Researcher pairings
When to conduct UX Research
Writing a discussion guide for user interviews
Writing a website usability testing script
UX Research Operations (ReOps) at GitLab
Getting the word out about research insights
How to fill in for a UX Research Operations Coordinator
Non-Disclosure Agreements for UX Research
Recruitment methods
ReOps procurement best practices
Research participation gratuities
The IP Assignment and when to show it
UX Resources
Dark Mode Rollout Playbook
Data for Design Decisions
Experimentation for the User Experience Team
How to do UI Code Contributions
Step by Step Guide to Make Code Changes
UX Scorecards
- AI-assisted features
AI Continuity Plan
UX maturity guidelines for AI-assisted features
UX support for AI-assisted features
- AI Continuity Plan
- UX maturity guidelines for AI-assisted features
- UX support for AI-assisted features
- Collaboration on shared feature and experience areas
Collaboration on merge requests experience
Collaboration on work items framework
- Collaboration on merge requests experience
- Collaboration on work items framework
- GitLab Product Management
Product Internship - Best Practices
Product Management CDF and Competencies
Product Management Learning and Development
The Product Manager Role at GitLab
- Product Internship - Best Practices
- Product Management CDF and Competencies
- Product Management Learning and Development
- The Product Manager Role at GitLab
- Personas
Organization Archetype
- Organization Archetype
- Product Group and Team Pages
Analytics Section
Fulfillment Guide
How the growth section works
Plan:Project Management
Product Data Insights
Crash Course for Product Stage Resources
dbt Cheat Sheet
Engineering Metrics
Engineering Metrics Dashboards
Experimentation Design & Analysis
Guide to Engineering Analytics Data
PDI Dashboards, Analysis, & Insights
Product Data Insights Data Models Cheat Sheet
Team Processes
Product Technical Program Manager
Verify Product Group
- Analytics Section
- Fulfillment Guide
- How the growth section works
- Plan:Project Management
- Product Data Insights
Crash Course for Product Stage Resources
dbt Cheat Sheet
Engineering Metrics
Engineering Metrics Dashboards
Experimentation Design & Analysis
Guide to Engineering Analytics Data
PDI Dashboards, Analysis, & Insights
Product Data Insights Data Models Cheat Sheet
Team Processes
- Crash Course for Product Stage Resources
- dbt Cheat Sheet
- Engineering Metrics
- Engineering Metrics Dashboards
- Experimentation Design & Analysis
- Guide to Engineering Analytics Data
- PDI Dashboards, Analysis, & Insights
- Product Data Insights Data Models Cheat Sheet
- Team Processes
- Product Technical Program Manager
- Verify Product Group
- Product Leadership Team Resources
CPO Shadow Program
People Group for Product Management
Product Leadership
- CPO Shadow Program
- People Group for Product Management
- Product Leadership
- Product Principles
- Product Processes
Analytics Instrumentation Guide
Our Commitment to Individual User Privacy in relation to Service Usage Data
Continuous Interviews
Cross Functional Prioritization
Customer Issues Prioritization Framework
Dogfooding for R&D
GitLab Early Access Program Direction
Joint R&D OKR Process
Making GIFs
New Product Introduction (NPI) Process
Product Customer Advisory Board
Product Management Tips and Tricks
Product Manager SAFE Guidance
Product Milestones
Product Procedures
Product Team Board Meeting Prep
Sensing Mechanisms
Tiering Strategy & Guidance for Product Managers
Using GitLab to plan work
- Analytics Instrumentation Guide
Our Commitment to Individual User Privacy in relation to Service Usage Data
- Our Commitment to Individual User Privacy in relation to Service Usage Data
- Continuous Interviews
- Cross Functional Prioritization
- Customer Issues Prioritization Framework
- Dogfooding for R&D
- GitLab Early Access Program Direction
- Joint R&D OKR Process
- Making GIFs
- New Product Introduction (NPI) Process
- Product Customer Advisory Board
- Product Management Tips and Tricks
- Product Manager SAFE Guidance
- Product Milestones
- Product Procedures
- Product Team Board Meeting Prep
- Sensing Mechanisms
- Tiering Strategy & Guidance for Product Managers
- Using GitLab to plan work
- Product sections, stages, groups, and categories
Features by Group
Features Category Quick Lookup
GitLab the Product
Advantages of a single application
Data flow GitLab vs. multiple applications
- Features by Group
- Features Category Quick Lookup
- GitLab the Product
Advantages of a single application
Data flow GitLab vs. multiple applications
- Advantages of a single application
Data flow GitLab vs. multiple applications
- Data flow GitLab vs. multiple applications
- UX Department
Assessing Category Maturity
Category Maturity - Competitor Comparison
Category Maturity Scorecards
Competitor Evaluations
Design collaborator's playbook
Documenting research insights in Dovetail
GitLab Navigation
Navigation inventory
How to create a user persona
How we work
Cross-stage design collaboration
Design Pods
Figma provisioning and deprovisioning
Product Design Manager Pairs
Product Design Pairs
Jobs to be Done at GitLab
Anatomy of a JTBD Canvas
JTBD - Beyond the Playbook
JTBD Research Playbook
Validated GitLab JTBD Canvases and Opportunity Scores
Pajamas Design System
Pajamas Design Review Process
Product Design
Hiring Product Designers
Product Design Manager Workflows
UX Themes
UX Theme Workshops
Product Designer Workflow
A Guide for Designing with AI
Merge Request Reviews
Merge Request Reviews
Product Designer Design Tools
Product Designer Priorities and Capacity Management
Remote Design Sprint
Technical Writing
Hiring Technical Writers
Think Big & Think Small Meetings
UX Department Learning and Development
GitLab-sponsored Tufts University Human Factors/Engineering Psychology Capstone Course
UX Department Performance Indicators
System Usability Scale
System Usability Scale responder outreach
User Satisfaction (USAT) Survey
UX Forum
UX Heuristics
UX Research at GitLab
Analyzing and synthesizing user research data
Analyzing survey verbatim
Attending a research event
Choosing a research methodology
Collecting useful data
Community contributions for Actionable Insights
Comparative testing for navigation
Creating a first click study in Qualtrics
Creating and managing a research participant panel
Defining goals, objectives, and hypotheses
Diary studies
Doing UX research in the AI space
Evaluating navigation
Facilitating user interviews
Finding SaaS users
First click testing for navigation
Foundational research
How the UX Research team operates at GitLab
How to Conduct UX Research Workshops
How to find existing research
How to recruit UX Research participants
The Common Screener: an efficient way to screen for multiple studies
UX research recruiting email tips
How to write an effective screener
Interview Carousel - Becoming a better interviewer 15 minutes at a time
Kano Survey for feature prioritization
Longitudinal studies
Mental modeling
Preference testing
Problem validation and methods
Problem Validation research for single-stage-group initiatives
Product Analytics for UX Research
Rapid Iterative Testing and Evaluation (RITE)
Research insights
Research prioritization
Resources for Research DRIs
Solution Validation and methods
Strategic research at GitLab
GitLab Adoption Research Program
Surveys
Common types of survey questions
Designing your survey
How to identify low quality data when designing and reviewing your survey
Piloting your survey
Qualtrics tips and tricks
Sample sizes for surveys
Survey question scales
Testing navigation: early Solution Validation
Tracking actionable insights
Tracking gold, silver, and bronze UX research projects
Tracking research velocity
Unmoderated usability testing
Usability benchmarking
Usability testing
User story mapping
Using quantitative data to find insights
Using RITE to test navigation
Using the UX Research Google Calendar
UX Bash
UX Cloud Sandbox
UX Research growth and development
UX Research shadowing
UX Research tools/applications
UX Researcher pairings
When to conduct UX Research
Writing a discussion guide for user interviews
Writing a website usability testing script
UX Research Operations (ReOps) at GitLab
Getting the word out about research insights
How to fill in for a UX Research Operations Coordinator
Non-Disclosure Agreements for UX Research
Recruitment methods
ReOps procurement best practices
Research participation gratuities
The IP Assignment and when to show it
UX Resources
Dark Mode Rollout Playbook
Data for Design Decisions
Experimentation for the User Experience Team
How to do UI Code Contributions
Step by Step Guide to Make Code Changes
UX Scorecards
- Assessing Category Maturity
Category Maturity - Competitor Comparison
Category Maturity Scorecards
- Category Maturity - Competitor Comparison
- Category Maturity Scorecards
- Competitor Evaluations
- Design collaborator's playbook
- Documenting research insights in Dovetail
- GitLab Navigation
Navigation inventory
- Navigation inventory
- How to create a user persona
- How we work
Cross-stage design collaboration
Design Pods
Figma provisioning and deprovisioning
Product Design Manager Pairs
Product Design Pairs
- Cross-stage design collaboration
Design Pods
- Design Pods
- Figma provisioning and deprovisioning
- Product Design Manager Pairs
- Product Design Pairs
- Jobs to be Done at GitLab
Anatomy of a JTBD Canvas
JTBD - Beyond the Playbook
JTBD Research Playbook
Validated GitLab JTBD Canvases and Opportunity Scores
- Anatomy of a JTBD Canvas
- JTBD - Beyond the Playbook
- JTBD Research Playbook
- Validated GitLab JTBD Canvases and Opportunity Scores
- Pajamas Design System
Pajamas Design Review Process
- Pajamas Design Review Process


Troubleshoot Errors While Making Purchases on CustomersDot
- Associating purchases with additional accounts
- Customer Console
- CustomerDot Account Related Problems
- Mechanizer
- Troubleshoot Errors While Making Purchases on CustomersDot
- Handling L&R Internal Requests
- Managing Product Issues
- Merging or splitting license/subscription requests
- Quarterly Subscription Reconciliations (QSR)
- Requests for documents or signatures from GitLab
- Self Managed
Cloud licensing and the support exemption process explained
Creating a license key
Creating a wider community license
Delivery of license files
GCP Marketplace license
Generating HackerOne Reporter Award Licenses
Generating NFR (Not For Resale) Licenses
Handling flagged licensing provisioning failures
Handling GitLab Dedicated License Requests
Handling multi-year subscriptions
Handling Opt Out of Services Usage Data request
Handling trials and extensions for GitLab Self-Managed
Sending licenses to a different email address
Troubleshooting and categorising license activation errors
Troubleshooting cloud licensing
Troubleshooting license purchase errors
Weekend Emergencies - Self-Managed License Request
- Cloud licensing and the support exemption process explained
- Creating a license key
- Creating a wider community license
- Delivery of license files
- GCP Marketplace license
- Generating HackerOne Reporter Award Licenses
- Generating NFR (Not For Resale) Licenses
- Handling flagged licensing provisioning failures
- Handling GitLab Dedicated License Requests
- Handling multi-year subscriptions
- Handling Opt Out of Services Usage Data request
- Handling trials and extensions for GitLab Self-Managed
- Sending licenses to a different email address
- Troubleshooting and categorising license activation errors
- Troubleshooting cloud licensing
- Troubleshooting license purchase errors
- Weekend Emergencies - Self-Managed License Request
- Software as a Service
Associating a subscription with a namespace & troubleshooting errors
Handling compute minutes and Storage
Handling trials, extensions and plan changes on GitLab.com
- Associating a subscription with a namespace & troubleshooting errors
- Handling compute minutes and Storage
- Handling trials, extensions and plan changes on GitLab.com
- Subscription and billing issues
- Supporting GitLab Community Programs
- Updating customer organization name
- Workflow for handling Plan/License Ticket Attention Requests
- Working with reseller related requests
- Working with Sales
- Zendesk L&R Ticket Form
- Associating purchases with additional accounts
- Customer Console
- CustomerDot Account Related Problems
- Mechanizer
- Troubleshoot Errors While Making Purchases on CustomersDot
- Cloud licensing and the support exemption process explained
- Creating a license key
- Creating a wider community license
- Delivery of license files
- GCP Marketplace license
- Generating HackerOne Reporter Award Licenses
- Generating NFR (Not For Resale) Licenses
- Handling flagged licensing provisioning failures
- Handling GitLab Dedicated License Requests
- Handling multi-year subscriptions
- Handling Opt Out of Services Usage Data request
- Handling trials and extensions for GitLab Self-Managed
- Sending licenses to a different email address
- Troubleshooting and categorising license activation errors
- Troubleshooting cloud licensing
- Troubleshooting license purchase errors
- Weekend Emergencies - Self-Managed License Request
- Associating a subscription with a namespace & troubleshooting errors
- Handling compute minutes and Storage
- Handling trials, extensions and plan changes on GitLab.com
- Alliance Partner Support Guide
- Alliance Partners
- JiHu Partnership
- Open Partners
- Select Partners
- Support Readiness - Data
- Staff Support Engineer
- Support Engineering Mentorship
- Support Hybrid Learning Path Checkpoint
- Support Onboarding Buddy
- Transition training module to GitLab Learn
- Areas of Focus Workgroup
- Change Management in GitLab Support
- Getting To Know Your Team Members
- Metrics Analysis Workgroup
Metrics Analysis - Hypothesis and Actions
- Metrics Analysis - Hypothesis and Actions
- Performance Management for Support Managers
- Promoting a Support Engineer
- Senior Support Leadership Sync
- Support 1:1s
- Support Engineering Manager Responsibilities
- Support Hiring
- Support Leadership Sync
- Support Managers AMER
- Support Team hazards and challenges
- Metrics Analysis - Hypothesis and Actions
- Advanced Search Support Pod
- AI Support Pod
- Authentication and Authorization Support Pod
- CI/CD Support Pod
- Code Contributions Support Pod
- Database Support Pod
- Documentation Support Pod
- Example Support Pod
- Geo Support Pod
- GET Support Pod
- Git and Gitaly Support Pod
- GitLab Dedicated Support Pod
- GitLab Runner Support Pod
- Import and Integrate Support Pod
- Kubernetes Support Pod
- Licensing and Renewals Support Pod
- Performance and Reliability Support Pod
- Sec Support Pod
- Training Support Pod
- Upgrade Support Pod
- 2FA Removal
- A Support Engineering Manager guide to account escalations
- Abuse Report Review Request
- Account Deletion & Data Access Requests - Introduction
- Account Deletion & Data Access Requests - Workflows
- Account Hold
- Account Ownership Verification
- AI Workflow
- BrowserStack
- Calendly Setup for Support
- ChatOps Commands for GitLab.com
- CMOC Practice Events
- Communication tips
- Community Forum Workflows
- Confirmation Emails
- Converting a Support Emergency into an Account Escalation
- Cost optimization of Cloud Services
- Custom domain verification on GitLab.com
- Customer calls
- Customer Emergency Retrospectives
- Debugging LDAP
- DEPRECATED - Ensuring correct SLA and Zendesk views
- Dev Pulse
- Diagnose Errors on GitLab.com
- DMCA Removal Requests
- Duo Chat case scenarios for support
- Emergency Exception Workflow
- Enabling feature flags for projects or groups on GitLab.com
- Feedback and Complaints
- Fieldnote Issues
- GitLab Dedicated Logs
- GitLab Dedicated Observability and Monitoring (Grafana)
- GitLab Dedicated Overview
- GitLab Dedicated Switchboard Troubleshooting
- GitLab Performance Tool (GPT) Quick Start
- GitLab.com custom limits
- GitLab.com Overview
- Google Cloud Credit Troubleshooting
- Handling data as a Support Engineer
- Handling Emotionally-Charged Tickets
- Handling fiscal residency document (COR) requests
- Handling Internal Requests
- Handling Licensing & Subscription Requests
- Handling Requests for More Premium Trial compute minutes
- Handling Sales Information Requests
- Hosted runners for GitLab Dedicated
- How to be a Support Manager On-call
- How to be a Support Ops On-call
- How to create Support Team Meta OKR labels, for a new Fiscal Year
- How to do a WIR Podcast
- How to Get Help
- How to Handle Product Offering Migration Tickets
- How to Perform CMOC Duties
- How to Perform Customer Emergencies Duties
- How to Perform GitLab Dedicated CMOC Duties
- How to Respond to Tickets
- How to write workflows
- Identifying the Cause of IP Blocks on GitLab.com
- Improving Documentation
- Investigate Blocked Pipeline
- Investigate Commits
- Jira with GitLab
- Licensing & Subscription Workflows
- Locked, Blocked and Banned Accounts
- Log and audit requests
- Looking up customer account details
- Looking up customer technical details
- Lost Email Account
- Making Changes and Taking Actions on a user's behalf
- Marking tickets as spam in Zendesk
- Mattermost
- Name Squatting Policy
- Obsolete Page - Was "Meeting FRT SLA"
- OOO Ticket Management
- Pairify
- Patching an instance
- Personal Data Removal Requests
- Printing ticket thread without internal notes
- Processing Signed Data Processing Addendums (DPAs)
- Project Exports for Customers
- Real Time Blocklist Delisting
- Regional and Cross-Regional Workflows
Cross-Region Coordination and Collaboration
- Cross-Region Coordination and Collaboration
- Remove Validation
- Removing Sensitive Information
- Request for source code of LGPL-licensed components in GitLab Advanced SAST
- Restoring Deleted Data Requests
- Restoring Deleted Data Requests for GitLab Dedicated
- SaaS Tier for Support Quick Reference
- SaaS, Self-Managed and Dedicated Troubleshooting tables
- Sales and Customer Success Escalations
- Satisfaction (SSAT) review and responding (for Managers)
- Scheduling Support Coverage for a Company-wide Event
- Sending Notices
- Sentry
- Service Desk Troubleshooting
- Setting ticket priority
- Sidekiq support
- Subpoenas, Court Orders and other requests for user information
- Support Assisted Customer Requests
- Support Team Knowledge Areas
- Suspecting a ticket to be malicious
- Team Workflows
Performance reviews
Technical Interview Setup
Weekly Support Team Call
Working on a promotion
- Performance reviews
- Technical Interview Setup
- Weekly Support Team Call
- Working on a promotion
- Testing Environment
- Ticket transfers
- Ticketing Style Guide
- Tracking Incidents
- Triaging Tickets
- Troubleshooting GitLab Cloud Native chart deployments
- Unbabel Translation in Zendesk
- Upgrade Assistance workflow
- Use of Admin Notes
- Using Kibana
- Very Breached Tickets
- Working on High Priority All-Region Tickets
- Working on tickets
- Working on Zendesk automations, triggers, macros, views, etc.
- Working with Customer Support Operations
- Working with Issues
- Working with Security
- Working with Support Pods
- Cross-Region Coordination and Collaboration
- Performance reviews
- Technical Interview Setup
- Weekly Support Team Call
- Working on a promotion
- GitLab Support - Support Ticket Attention Requests (STAR)
- TeamOps Direction
- TeamOps Growth
- TeamOps Partners
- 1Password and Environment Variables
- AI at GitLab Tips
AI use cases within the Security Division at GitLab
Claude.ai Tips
GitLab Duo Tips
- AI use cases within the Security Division at GitLab
- Claude.ai Tips
- GitLab Duo Tips
- Editors and IDEs
emacs
GitLab Web IDE
JetBrains IDEs
Code Inspection
Why are there noinspection comments
Common JetBrains Setup and Configuration
Individual IDEs
GoLand
RubyMine
Webstorm
Licenses
Tracked JetBrains Issues
Sublime Text
vim
Visual Studio Code (VS Code)
- emacs
- GitLab Web IDE
- JetBrains IDEs
Code Inspection
Why are there noinspection comments
Common JetBrains Setup and Configuration
Individual IDEs
GoLand
RubyMine
Webstorm
Licenses
Tracked JetBrains Issues
- Code Inspection
Why are there noinspection comments
- Why are there noinspection comments
- Common JetBrains Setup and Configuration
- Individual IDEs
GoLand
RubyMine
Webstorm
- GoLand
- RubyMine
- Webstorm
- Licenses
- Tracked JetBrains Issues
- Sublime Text
- vim
- Visual Studio Code (VS Code)
- git
- Linux tools and tips
- macOS tools and tips
- Mermaid Layouts
- Other apps
- Personal VPN
- RuboCop
- Searching GitLab like a pro
Bookmark these GitLab keyword search paths
- Bookmark these GitLab keyword search paths
- Slack
- Zoom
- AI use cases within the Security Division at GitLab
- Claude.ai Tips
- GitLab Duo Tips
- emacs
- GitLab Web IDE
- JetBrains IDEs
Code Inspection
Why are there noinspection comments
Common JetBrains Setup and Configuration
Individual IDEs
GoLand
RubyMine
Webstorm
Licenses
Tracked JetBrains Issues
- Code Inspection
Why are there noinspection comments
- Why are there noinspection comments
- Common JetBrains Setup and Configuration
- Individual IDEs
GoLand
RubyMine
Webstorm
- GoLand
- RubyMine
- Webstorm
- Licenses
- Tracked JetBrains Issues
- Sublime Text
- vim
- Visual Studio Code (VS Code)
- Code Inspection
Why are there noinspection comments
- Why are there noinspection comments
- Common JetBrains Setup and Configuration
- Individual IDEs
GoLand
RubyMine
Webstorm
- GoLand
- RubyMine
- Webstorm
- Licenses
- Tracked JetBrains Issues
- Why are there noinspection comments
- GoLand
- RubyMine
- Webstorm
- Bookmark these GitLab keyword search paths
- Team Member Responsibilities
- Recruiter Responsibilities
Template for the Recruiter‚Äôs slack message
- Template for the Recruiter‚Äôs slack message
- CES Responsibilities
- People Connect Responsibilities
- Current Manager Responsibilities
- Hiring Manager Responsibilities
Delivering feedback to declined candidates
- Delivering feedback to declined candidates
- Internal Hiring Process Survey
- Template for the Recruiter‚Äôs slack message
- Delivering feedback to declined candidates
- The Handbook
- Hiring & Talent Acquisition Handbook
- Talent Acquisition Process Framework
- Internal Hiring Process
- Meet with your current manager to discuss the internal opportunity you‚Äôd like to pursue prior to submitting your application.
- Ensure you have met your department specific eligibility requirements:
Guidelines for performance eligibility:
Team members who are assessed at a Performing or Exceeding Performance level during Talent Assessment are eligible to be considered for another role
Team members whose Performance is assessed as Developing or are actively undergoing written performance management, may not be eligible. These situations require manager and/or PBP approval to proceed.
Team members that have not had a Talent Assessment require manager and/or PBP approval to proceed
Time in role eligibility will be 6 months in current role. Exceptions to this:
Job Family specialty changes
Business Impact  (revenue-dependencies, interim role to perm)
Business driven transfers (example of realignments)
SDR 12 months in role
- Guidelines for performance eligibility:
Team members who are assessed at a Performing or Exceeding Performance level during Talent Assessment are eligible to be considered for another role
Team members whose Performance is assessed as Developing or are actively undergoing written performance management, may not be eligible. These situations require manager and/or PBP approval to proceed.
Team members that have not had a Talent Assessment require manager and/or PBP approval to proceed
- Team members who are assessed at a Performing or Exceeding Performance level during Talent Assessment are eligible to be considered for another role
- Team members whose Performance is assessed as Developing or are actively undergoing written performance management, may not be eligible. These situations require manager and/or PBP approval to proceed.
- Team members that have not had a Talent Assessment require manager and/or PBP approval to proceed
- Time in role eligibility will be 6 months in current role. Exceptions to this:
Job Family specialty changes
Business Impact  (revenue-dependencies, interim role to perm)
Business driven transfers (example of realignments)
SDR 12 months in role
- Job Family specialty changes
- Business Impact  (revenue-dependencies, interim role to perm)
- Business driven transfers (example of realignments)
- SDR 12 months in role
- Important things to consider when applying:
Ensure the opportunity aligns with your career goals here at GitLab
Ensure you have taken a look at the compensation calculator and assessed if the compensation range for the new role is suitable for you. We encourage you to bring any questions around compensation and leveling to the recruiter and/or hiring manager for the open role you are interested in and applying for.
While you may apply to a role with a higher job grade and title, there may be situations (moving from one job family to another for example) where the higher job grade may not align with your current competencies and skillset that is required for the role. If the hiring team does choose to move forward with an offer, in these cases, it‚Äôs likely a higher job grade and title will not be given.
- Ensure the opportunity aligns with your career goals here at GitLab
- Ensure you have taken a look at the compensation calculator and assessed if the compensation range for the new role is suitable for you. We encourage you to bring any questions around compensation and leveling to the recruiter and/or hiring manager for the open role you are interested in and applying for.
- While you may apply to a role with a higher job grade and title, there may be situations (moving from one job family to another for example) where the higher job grade may not align with your current competencies and skillset that is required for the role. If the hiring team does choose to move forward with an offer, in these cases, it‚Äôs likely a higher job grade and title will not be given.
- To apply, visit the internal job openings. If you are interested in keeping an eye on openings that are posted you can also join the #newvacancy channel in Slack.
- For any questions you have about internal hiring or questions specific to your individual interview process you can either:
Create an issue in the hiring process repo.
If a Recruiter has reached out to you, please feel free to reach out directly to them on status updates of your specific process.
- Create an issue in the hiring process repo.
- If a Recruiter has reached out to you, please feel free to reach out directly to them on status updates of your specific process.
- Guidelines for performance eligibility:
Team members who are assessed at a Performing or Exceeding Performance level during Talent Assessment are eligible to be considered for another role
Team members whose Performance is assessed as Developing or are actively undergoing written performance management, may not be eligible. These situations require manager and/or PBP approval to proceed.
Team members that have not had a Talent Assessment require manager and/or PBP approval to proceed
- Team members who are assessed at a Performing or Exceeding Performance level during Talent Assessment are eligible to be considered for another role
- Team members whose Performance is assessed as Developing or are actively undergoing written performance management, may not be eligible. These situations require manager and/or PBP approval to proceed.
- Team members that have not had a Talent Assessment require manager and/or PBP approval to proceed
- Time in role eligibility will be 6 months in current role. Exceptions to this:
Job Family specialty changes
Business Impact  (revenue-dependencies, interim role to perm)
Business driven transfers (example of realignments)
SDR 12 months in role
- Job Family specialty changes
- Business Impact  (revenue-dependencies, interim role to perm)
- Business driven transfers (example of realignments)
- SDR 12 months in role
- Team members who are assessed at a Performing or Exceeding Performance level during Talent Assessment are eligible to be considered for another role
- Team members whose Performance is assessed as Developing or are actively undergoing written performance management, may not be eligible. These situations require manager and/or PBP approval to proceed.
- Team members that have not had a Talent Assessment require manager and/or PBP approval to proceed
- Job Family specialty changes
- Business Impact  (revenue-dependencies, interim role to perm)
- Business driven transfers (example of realignments)
- SDR 12 months in role
- Ensure the opportunity aligns with your career goals here at GitLab
- Ensure you have taken a look at the compensation calculator and assessed if the compensation range for the new role is suitable for you. We encourage you to bring any questions around compensation and leveling to the recruiter and/or hiring manager for the open role you are interested in and applying for.
- While you may apply to a role with a higher job grade and title, there may be situations (moving from one job family to another for example) where the higher job grade may not align with your current competencies and skillset that is required for the role. If the hiring team does choose to move forward with an offer, in these cases, it‚Äôs likely a higher job grade and title will not be given.
- Create an issue in the hiring process repo.
- If a Recruiter has reached out to you, please feel free to reach out directly to them on status updates of your specific process.
- Recruiter will post a job internally following the req creation process, and the transfer, promotion guidelines.
- Recruiters will set up notifications for internal applications, to ensure they are notified when internal candidates apply to the role
- Once the Recruiter receives an internal team members application, they will proceed with the following:
Review the application as you would with an external candidate and determine if they are qualified for the role. If they are not qualified, please ensure you communicate the decision via email (or slack) and provide clear feedback as to why they are not qualified, and add the hiring manager so they are looped in and can add additional feedback if appropriate.
Ensure the internal team members GitLab email is associated with their application. If it is not, then update it as such and notify the team member of the change in email address to ensure all the communication throughout the interview process is directed here.
If the internal candidate is considered qualified for the role, reach out to People Connect by submitting a request via HelpLab.
Once you have received a reply on eligibility please continue with the steps below
If they have additional questions, they may reach out to the team member‚Äôs current PBP.
- Review the application as you would with an external candidate and determine if they are qualified for the role. If they are not qualified, please ensure you communicate the decision via email (or slack) and provide clear feedback as to why they are not qualified, and add the hiring manager so they are looped in and can add additional feedback if appropriate.
- Ensure the internal team members GitLab email is associated with their application. If it is not, then update it as such and notify the team member of the change in email address to ensure all the communication throughout the interview process is directed here.
- If the internal candidate is considered qualified for the role, reach out to People Connect by submitting a request via HelpLab.
Once you have received a reply on eligibility please continue with the steps below
If they have additional questions, they may reach out to the team member‚Äôs current PBP.
- Once you have received a reply on eligibility please continue with the steps below
- If they have additional questions, they may reach out to the team member‚Äôs current PBP.
- For promotions through the internal mobility process (upward movement from one job grade to another), tag the department specific People Business Partner in the notes section of Greenhouse to ensure they are aligned before moving forward with the offer. Additionally, confirm that the offer has been approved by the skip-level leader of the new role.
- Once the Recruiter has confirmed the eligibility status via HelpLab (and the team member is confirmed eligible) the Recruiter will reach out to the team member to introduce themselves and set expectations around the internal hiring process. This includes ensuring they have notified their current manager.
- If a team member is not eligible, the Recruiter will send the appropriate decline email template.
- The recruiter will also review the team member‚Äôs current compensation (found in Workday) to ensure they are in line with the salary range and budget for the role.
- If a team member‚Äôs current compensation exceeds the budget and/or salary range for the role (due to level or different job family), the recruiter will inform the team member of a potential change to their compensation before completing any team interviews.
- Recruiter will then continue the process as described in the Talent Acquisition Process Framework for all candidates. Recruiter will use identified templates in Greenhouse to communicate with candidates, current managers and hiring managers throughout the internal hiring process.
- Once it is confirmed that the internal candidate is moving to the offer stage, the Recruiter will connect the team member‚Äôs current manager and potential new manager via Slack to:
Give formal notice that an offer is being created for the team member.
At the same time you should tag the relevant People Business Partner (both the departing and receiving PBP) in a note on Greenhouse so they are notified, can track the internal move and take any necessary action.
Facilitate a discussion around a transition date that works for both parties. Please note that TA‚Äôs involvement is to facilitate this conversation and is not the decision maker. Ultimately, a transition date is something that should be agreed upon between a current manager and hiring manager. A finalized start date will be needed as TA submits an offer for approvals.
Some suggestions for transition timelines include:
Aiming for between 4-6 weeks for an official transition date to ensure the team with the backfill has lead time on filling the position
A one month 50/50 split between teams to ease into a full time transition. For any moves from Sales Development, please be aware the team requests a 45 day transition period from the date of a verbal offer
- Give formal notice that an offer is being created for the team member.
- At the same time you should tag the relevant People Business Partner (both the departing and receiving PBP) in a note on Greenhouse so they are notified, can track the internal move and take any necessary action.
- Facilitate a discussion around a transition date that works for both parties. Please note that TA‚Äôs involvement is to facilitate this conversation and is not the decision maker. Ultimately, a transition date is something that should be agreed upon between a current manager and hiring manager. A finalized start date will be needed as TA submits an offer for approvals.
- Some suggestions for transition timelines include:
TA will only start an official backfill once the role has been approved via the Backfill Approval process
It is the Team Member‚Äôs responsibility to meet with their current manager to discuss the internal opportunity they‚Äôd like to pursue prior to submitting their application. Offers at the end of an internal interview process should not come as a surprise to current managers.
TA will not discuss any compensation changes with the team member‚Äôs current manager.
TA will not provide updates on interview feedback or progress to a team member‚Äôs current manager. This should be discussed between managers and team members during 1:1s.
Should the Recruiter not have access to a team members compensation (due to moving Divisions), you should
Reach out to People Connect by submitting a request through HelpLab using the Internal Movement case template. In your request details please include that you the candidate has been selected to move forward and that you require their current compensation details. People Connect will only confirm the salary details and any confirmation on equity would need to be verified by the Total Rewards team separately.
Within 48 hours, the People Connect team will respond and provide annual base compensation details to the Recruiter to utilize for the offer (in partnership with the hiring manager).
- TA will only start an official backfill once the role has been approved via the Backfill Approval process
- It is the Team Member‚Äôs responsibility to meet with their current manager to discuss the internal opportunity they‚Äôd like to pursue prior to submitting their application. Offers at the end of an internal interview process should not come as a surprise to current managers.
- TA will not discuss any compensation changes with the team member‚Äôs current manager.
- TA will not provide updates on interview feedback or progress to a team member‚Äôs current manager. This should be discussed between managers and team members during 1:1s.
- Should the Recruiter not have access to a team members compensation (due to moving Divisions), you should
Reach out to People Connect by submitting a request through HelpLab using the Internal Movement case template. In your request details please include that you the candidate has been selected to move forward and that you require their current compensation details. People Connect will only confirm the salary details and any confirmation on equity would need to be verified by the Total Rewards team separately.
Within 48 hours, the People Connect team will respond and provide annual base compensation details to the Recruiter to utilize for the offer (in partnership with the hiring manager).
- Reach out to People Connect by submitting a request through HelpLab using the Internal Movement case template. In your request details please include that you the candidate has been selected to move forward and that you require their current compensation details. People Connect will only confirm the salary details and any confirmation on equity would need to be verified by the Total Rewards team separately.
- Within 48 hours, the People Connect team will respond and provide annual base compensation details to the Recruiter to utilize for the offer (in partnership with the hiring manager).
- Review the application as you would with an external candidate and determine if they are qualified for the role. If they are not qualified, please ensure you communicate the decision via email (or slack) and provide clear feedback as to why they are not qualified, and add the hiring manager so they are looped in and can add additional feedback if appropriate.
- Ensure the internal team members GitLab email is associated with their application. If it is not, then update it as such and notify the team member of the change in email address to ensure all the communication throughout the interview process is directed here.
- If the internal candidate is considered qualified for the role, reach out to People Connect by submitting a request via HelpLab.
Once you have received a reply on eligibility please continue with the steps below
If they have additional questions, they may reach out to the team member‚Äôs current PBP.
- Once you have received a reply on eligibility please continue with the steps below
- If they have additional questions, they may reach out to the team member‚Äôs current PBP.
- Once you have received a reply on eligibility please continue with the steps below
- If they have additional questions, they may reach out to the team member‚Äôs current PBP.
- Give formal notice that an offer is being created for the team member.
- At the same time you should tag the relevant People Business Partner (both the departing and receiving PBP) in a note on Greenhouse so they are notified, can track the internal move and take any necessary action.
- Facilitate a discussion around a transition date that works for both parties. Please note that TA‚Äôs involvement is to facilitate this conversation and is not the decision maker. Ultimately, a transition date is something that should be agreed upon between a current manager and hiring manager. A finalized start date will be needed as TA submits an offer for approvals.
- Some suggestions for transition timelines include:
Aiming for between 4-6 weeks for an official transition date to ensure the team with the backfill has lead time on filling the position
A one month 50/50 split between teams to ease into a full time transition. For any moves from Sales Development, please be aware the team requests a 45 day transition period from the date of a verbal offer
- Aiming for between 4-6 weeks for an official transition date to ensure the team with the backfill has lead time on filling the position
- A one month 50/50 split between teams to ease into a full time transition. For any moves from Sales Development, please be aware the team requests a 45 day transition period from the date of a verbal offer
- Aiming for between 4-6 weeks for an official transition date to ensure the team with the backfill has lead time on filling the position
- A one month 50/50 split between teams to ease into a full time transition. For any moves from Sales Development, please be aware the team requests a 45 day transition period from the date of a verbal offer
- TA will only start an official backfill once the role has been approved via the Backfill Approval process
- It is the Team Member‚Äôs responsibility to meet with their current manager to discuss the internal opportunity they‚Äôd like to pursue prior to submitting their application. Offers at the end of an internal interview process should not come as a surprise to current managers.
- TA will not discuss any compensation changes with the team member‚Äôs current manager.
- TA will not provide updates on interview feedback or progress to a team member‚Äôs current manager. This should be discussed between managers and team members during 1:1s.
- Should the Recruiter not have access to a team members compensation (due to moving Divisions), you should
Reach out to People Connect by submitting a request through HelpLab using the Internal Movement case template. In your request details please include that you the candidate has been selected to move forward and that you require their current compensation details. People Connect will only confirm the salary details and any confirmation on equity would need to be verified by the Total Rewards team separately.
Within 48 hours, the People Connect team will respond and provide annual base compensation details to the Recruiter to utilize for the offer (in partnership with the hiring manager).
- Reach out to People Connect by submitting a request through HelpLab using the Internal Movement case template. In your request details please include that you the candidate has been selected to move forward and that you require their current compensation details. People Connect will only confirm the salary details and any confirmation on equity would need to be verified by the Total Rewards team separately.
- Within 48 hours, the People Connect team will respond and provide annual base compensation details to the Recruiter to utilize for the offer (in partnership with the hiring manager).
- Reach out to People Connect by submitting a request through HelpLab using the Internal Movement case template. In your request details please include that you the candidate has been selected to move forward and that you require their current compensation details. People Connect will only confirm the salary details and any confirmation on equity would need to be verified by the Total Rewards team separately.
- Within 48 hours, the People Connect team will respond and provide annual base compensation details to the Recruiter to utilize for the offer (in partnership with the hiring manager).
- What transition date works best for the both of you? The GitLab standard recommendation is between 4-6 weeks (OR 45 days for Sales Development). Please see our handbook page here for some suggestions on transition timelines.
- Please discuss any outstanding items that may require XX to stay in their current role longer than 6 weeks as we want to ensure they‚Äôll be able to have a smooth transition between roles.
- I‚Äôd recommend connecting live if you can, but if not, async works and we can use this channel. If you do connect live, please  confirm with me once you‚Äôve done so and agreed on a start date. Once I have that information, I will proceed with the formal offer approvals.  Once they accept the offer (and sign the Job Change Letter), we will be able to move forward with their backfill process. Thanks!
- If the hiring team would like to move forward with an offer, the Recruiter will access the team members current compensation in Workday to create the offer (in partnership with the hiring manager). Any confirmation on equity would need to be verified by the Total Rewards team separately.
- Once an internal candidate verbally accepts an offer, the Recruiter will notify CES to get the Job Change Letter (JCL) to the team member.
- When scheduling internal team members during the internal hiring process, use the team member‚Äôs Google calendar. This allows for a consistent and efficient scheduling process. Internal candidates are notified to:
Block off any times on their calendar when they would prefer not to interview.
Have working hours visible on their internal Google Calendar
- Block off any times on their calendar when they would prefer not to interview.
- Have working hours visible on their internal Google Calendar
- Please follow the scheduling process for executive scheduling
- Recruiters will notify CES via Greenhouse once a Job Change Letter (JCL) is ready to be sent.
- Block off any times on their calendar when they would prefer not to interview.
- Have working hours visible on their internal Google Calendar
- People Connect will handle all eligibility checks for team members applying for an internal opportunity.
For eligibility checks for candidates on the People Connect team please reach out directly to the Manager of the People Connect team.
- For eligibility checks for candidates on the People Connect team please reach out directly to the Manager of the People Connect team.
- Engage People Connect by submitting a request via HelpLab. People Connect will notify the Recruiter that the eligibility check is completed by replying to the request submitted via HelpLab. Ensure you have met your department specific eligibility requirements:
Guidelines for performance eligibility:
Job Family specialty changes
Business Impact  (revenue-dependencies, interim role to perm)
Business driven transfers (example of realignments)
SDR 12 months in role
SDR/BDR Team Lead 3 months in role
- Team members who are assessed at a Performing or Exceeding Performance level during Talent Assessment are eligible to be considered for another role
- Team members whose Performance is assessed as Developing or are actively undergoing written performance management, may not be eligible. These situations require manager and/or PBP approval to proceed.
- Team members that have not had a Talent Assessment require manager and/or PBP approval to proceed
- Time in role eligibility will be 6 months in current role. Exceptions to this:
Job Family specialty changes
Business Impact  (revenue-dependencies, interim role to perm)
Business driven transfers (example of realignments)
SDR 12 months in role
SDR/BDR Team Lead 3 months in role
- Job Family specialty changes
- Business Impact  (revenue-dependencies, interim role to perm)
- Business driven transfers (example of realignments)
- SDR 12 months in role
- SDR/BDR Team Lead 3 months in role
- For any situations where further discussion may be needed, People Connect Leads will go to the department specific PBP.
- At the offer stage, should the Recruiter not have access to compensation data (due to a candidate moving Divisions for example), they will submit a request via HelpLab to attain current compensation information:
People Connect checks Workday for current team member base compensation.
People Connect will then provide annual base compensation details in the HelpLab request. The Recruiter can then utilize this information while putting an offer together (in partnership with the hiring manager).
- People Connect checks Workday for current team member base compensation.
- People Connect will then provide annual base compensation details in the HelpLab request. The Recruiter can then utilize this information while putting an offer together (in partnership with the hiring manager).
- For eligibility checks for candidates on the People Connect team please reach out directly to the Manager of the People Connect team.
- Guidelines for performance eligibility:
Job Family specialty changes
Business Impact  (revenue-dependencies, interim role to perm)
Business driven transfers (example of realignments)
SDR 12 months in role
SDR/BDR Team Lead 3 months in role
- Job Family specialty changes
- Business Impact  (revenue-dependencies, interim role to perm)
- Business driven transfers (example of realignments)
- SDR 12 months in role
- SDR/BDR Team Lead 3 months in role
- Team members who are assessed at a Performing or Exceeding Performance level during Talent Assessment are eligible to be considered for another role
- Team members whose Performance is assessed as Developing or are actively undergoing written performance management, may not be eligible. These situations require manager and/or PBP approval to proceed.
- Team members that have not had a Talent Assessment require manager and/or PBP approval to proceed
- Time in role eligibility will be 6 months in current role. Exceptions to this:
Job Family specialty changes
Business Impact  (revenue-dependencies, interim role to perm)
Business driven transfers (example of realignments)
SDR 12 months in role
SDR/BDR Team Lead 3 months in role
- Job Family specialty changes
- Business Impact  (revenue-dependencies, interim role to perm)
- Business driven transfers (example of realignments)
- SDR 12 months in role
- SDR/BDR Team Lead 3 months in role
- Job Family specialty changes
- SDR 12 months in role
- SDR/BDR Team Lead 3 months in role
- People Connect checks Workday for current team member base compensation.
- People Connect will then provide annual base compensation details in the HelpLab request. The Recruiter can then utilize this information while putting an offer together (in partnership with the hiring manager).
- Once your team member has notified you that they have applied for an internal opportunity (this should happen at the application stage) make sure to check in with them during 1:1s to see how their interviews are progressing.
- If your team member moves to the offer stage, the Recruiter will connect you with the hiring manager via Slack. Please follow the steps outlined by the Recruiter once you receive that confirmation. Until you receive that Slack from TA, the offer is not confirmed.
- Once the transition date is agreed upon, the current manager is responsible for notifying their leadership and to follow the steps outlined in the Backfill Approval process handbook page
- If the team member is not selected for the new role, the current manager should meet with the team member to discuss ongoing career development in their current role.
- Hiring Managers will be notified by Recruiter when an internal team member has applied and has completed the necessary eligibility checks as mentioned above, and they will follow the process outlined in the Talent Acquisition Process Framework for all candidates.
- If a team member moves to offer, the Recruiter will connect the Hiring Manager with the team member‚Äôs current manager. Please follow the steps outlined by the Recruiter in their message via Slack (details above).
- Hiring Manager will be provided the candidates compensation expectations from the Recruiter. It is up to the Hiring Manager, in partnership with the Recruiter, to propose a compensation aligned with budget, candidate expectations, and internal pay equality.
- If internal candidates need to be declined post interviews, it is required that the hiring manager connect with the team member via Zoom to inform them of the decision and provide constructive feedback (an outline providing feedback can be found below).
- Condense the themes from all of the scorecards so that there is a high level, but anonymous summary of what they did well in the interview, and any opportunities for improvement
- Document your key takeaway as a hiring manager in terms of how this candidate does not have the right competencies for the position
- Document your key takeaways on what the candidate did well and should continue doing, along with improving other areas to be ready in the future
- Provide actionable, concrete steps to work on those areas
- Sync with the candidate to review these topics in a synchronous meeting
- Has good examples of making improvements to the area they were interviewing for in the past
- In general if experience was missing (such as XYZ) when asked a question, they were not able to answer it based on any lessons/training they have taken in preparation for this role
- They understand the day-to-day responsibilities of this role in terms of (these job requirements), but are not yet prepared for what this looks like long-term around (these other job requirements and challenges they may face). They may be coachable in these areas and have an exceptional history with GitLab, however this position will be demanding on time which may not allow the candidate to get enough support in the role. I would recommend:
Specific actions this candidate can take to get more experience at GitLab
- Specific actions this candidate can take to get more experience at GitLab
- Specific actions this candidate can take to get more experience at GitLab
- A survey will be sent out to all team members that have made it through to the team interview stage.
- This survey will measure:
Expectations set
Recruiter interaction
Interviewer experience
Timely experience
Scheduling
Feedback (for declined candidates)
Overall experience rating
- Expectations set
- Recruiter interaction
- Interviewer experience
- Timely experience
- Scheduling
- Feedback (for declined candidates)
- Overall experience rating
- Talent Acquisition‚Äôs goals for this survey will be determined after the base survey data is captured.
- Expectations set
- Recruiter interaction
- Interviewer experience
- Timely experience
- Scheduling
- Feedback (for declined candidates)
- Overall experience rating